__NUXT_JSONP__("/blog/2015/01/create-mariadb-cluster-replication-ssl-salt-stack", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS,aT,aU,aV,aW,aX,aY,aZ,a_,a$,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,bA,bB,bC,bD,bE,bF,bG,bH,bI,bJ,bK,bL,bM,bN,bO,bP,bQ,bR,bS,bT,bU,bV){return {data:[{},{},{},{canonical:aB,content:{title:aC,locale:aD,created:"2015-01-28T00:00:00.000Z",updated:"2015-02-03T00:00:00.000Z",canonical:aB,status:"publish",revising:ah,migrateLinks:true,migrateImages:ah,gallery:ah,caption:ah,categories:[aE],tags:["linux","techniques","salt-stack","cloud-computing"],keywords:["replication","database-server","cluster","configuration","mysql","MariaDB"],description:aC,excerpt:"Some notes on how I created our updated MariaDB database cluster with replication.",preamble:{text:aF},toc:[{id:aG,depth:ap,text:aH},{id:aI,depth:ap,text:aJ},{id:aK,depth:T,text:aL},{id:aM,depth:T,text:aN},{id:aO,depth:T,text:aP},{id:aQ,depth:T,text:aR},{id:aS,depth:T,text:aT},{id:aU,depth:T,text:aV}],body:{type:aq,children:[{type:b,tag:h,props:{},children:[{type:a,value:"While reworking WebPlatform infrastructure I had to rebuild a new database\ncluster."}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"The objective of the cluster is to have more than one database server so that\nour web applications can make reads on any node in the cluster."}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"While the system has replication, and I can send reads on any nodes on the\ncluster. There is a flaw in it too, any nodes can "},{type:b,tag:U,props:{},children:[{type:a,value:"also"}]},{type:a,value:" make writes; nothing is\nblocking it."}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"My plan is to change this so that it would be OK to send writes to anybody in\nthe cluster. There is now something called \"Galera\" that would allow me that.\nBut that's outside of the scope of this article."}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"In the current configuration, I'm purposefully not fixing it because my\nconfiguration management makes sure only the current master. So in this setup, I\ndecided that the VM that gets writes has a specific mention of \"masterdb\" in the\nhostname."}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"That way, its easy to see and it gives me the ability to change master at\nanytime if an emergency requires me to."}]},{type:a,value:e},{type:b,tag:aW,props:{id:aG},children:[{type:b,tag:u,props:{href:"#changing-mariadb-replication-master",ariaHidden:F,tabIndex:P},children:[{type:b,tag:c,props:{className:[Q,R]},children:[]}]},{type:a,value:aH}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"Changing master could be done in the following order:"}]},{type:a,value:e},{type:b,tag:ae,props:{},children:[{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:"Lock writes on masterdb databases"}]},{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:"Wait replication to catch up"}]},{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:"On secondary database servers; remove replication configuration"}]},{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:"Tell all web apps to use new database master"}]},{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:"Remove database lock"}]},{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:"Setup new replication configuration to use new master"}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"Thanks to the fact that I manage "},{type:b,tag:H,props:{},children:[{type:a,value:"everything"}]},{type:a,value:" through configruation management\n--including the web app configuration files-- its only a matter of applying the\nstates everywhere in the cluster. That makes it fairly easy to do such an heavy\nmove, even under stress."}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"This post will be updated once I have completed the multi writes setup."}]},{type:a,value:e},{type:b,tag:aW,props:{id:aI},children:[{type:b,tag:u,props:{href:"#procedure",ariaHidden:F,tabIndex:P},children:[{type:b,tag:c,props:{className:[Q,R]},children:[]}]},{type:a,value:aJ}]},{type:a,value:e},{type:b,tag:Y,props:{id:aK},children:[{type:b,tag:u,props:{href:"#assumptions",ariaHidden:F,tabIndex:P},children:[{type:b,tag:c,props:{className:[Q,R]},children:[]}]},{type:a,value:aL}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"The rest of this article will assume the following:"}]},{type:a,value:e},{type:b,tag:I,props:{},children:[{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:"You are running VMs on OpenStack, and do have credentials to make API calls\nto it"}]},{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:"You have a Salt master already running"}]},{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:"Your salt master has at least "},{type:b,tag:g,props:{},children:[{type:a,value:"python-novaclient"}]},{type:a,value:" ("},{type:b,tag:g,props:{},children:[{type:a,value:aX}]},{type:a,value:" commands) available\non it"}]},{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:"You have your Open Stack credentials already loaded in your salt master's\n"},{type:b,tag:g,props:{},children:[{type:a,value:"\u002Fetc\u002Fprofile.d\u002F"}]},{type:a,value:" so you can use "},{type:b,tag:g,props:{},children:[{type:a,value:aX}]},{type:a,value:" directly"}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:Y,props:{id:aM},children:[{type:b,tag:u,props:{href:"#from-the-salt-master-initiate-a-few-vms-to-use-for-your-database-cluster",ariaHidden:F,tabIndex:P},children:[{type:b,tag:c,props:{className:[Q,R]},children:[]}]},{type:a,value:aN}]},{type:a,value:e},{type:b,tag:I,props:{},children:[{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:"Before booting, ensure you have the following details in your OpenStack\ncluster and salt master;"}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:ae,props:{},children:[{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"You have a SSH key in your OpenStack cluster. Mine is called\n\"renoirb-production\" and my salt master user has the private key preinstalled"}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"You have a "},{type:b,tag:g,props:{},children:[{type:a,value:aY}]},{type:a,value:" file that has settings that points to your salt\nmaster"}]},{type:a,value:e},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,G]},children:[{type:b,tag:g,props:{},children:[{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:"cat"}]},{type:a,value:" \u002Fsrv\u002Fopsconfigs\u002Fuserdata.txt\n"}]}]}]},{type:a,value:e},{type:a,value:e},{type:b,tag:aZ,props:{title:a_},children:[{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"I've noticed that this "},{type:b,tag:g,props:{},children:[{type:a,value:aY}]},{type:a,value:" file I've initially written for this\narticle has then been part of "},{type:b,tag:u,props:{href:"https:\u002F\u002Fgithub.com\u002Fwebplatform\u002Fops\u002Fblob\u002Ff6e0390a\u002Fsalt-master",rel:[y,z,A],target:B,title:"salt-master\u002F* on GitHub.com\u002Fwebplatform\u002Fops as of 2015-06-08"},children:[{type:a,value:"WebPlatformâ€™s \"ops\" repository"}]},{type:a,value:"\nfrom which I was (2015) using to work locally. In this repo, there was the\n"},{type:b,tag:u,props:{href:"https:\u002F\u002Fgithub.com\u002Fwebplatform\u002Fops\u002Fblob\u002Ff6e0390a\u002Fsalt-master\u002Fsalt-userdata.yml",rel:[y,z,A],target:B,title:"salt-master\u002Fsalt-userdata.yml on GitHub.com\u002Fwebplatform\u002Fops as of 2015-06-08"},children:[{type:b,tag:g,props:{},children:[{type:a,value:"salt-master\u002Fsalt-userdata.yml"}]}]},{type:a,value:a$}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,ai]},children:[{type:b,tag:g,props:{},children:[{type:b,tag:c,props:{className:[d,N]},children:[{type:a,value:"#cloud-config"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,l,p]},children:[{type:a,value:"manage_etc_hosts"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:n}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,af,Z]},children:[{type:a,value:ba}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,N]},children:[{type:a,value:"# Has to be set to false for everybody. Otherwise we need a DNS"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,l,p]},children:[{type:a,value:"manage-resolv-conf"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:n}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,af,Z]},children:[{type:a,value:ba}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,l,p]},children:[{type:a,value:"locale"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:n}]},{type:a,value:" en_US.UTF"},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,O]},children:[{type:a,value:"8"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,l,p]},children:[{type:a,value:"timezone"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:n}]},{type:a,value:" America\u002FNew_York\n"},{type:b,tag:c,props:{className:[d,l,p]},children:[{type:a,value:"package_upgrade"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:n}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,af,Z]},children:[{type:a,value:F}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,l,p]},children:[{type:a,value:"package_update"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:n}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,af,Z]},children:[{type:a,value:F}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,l,p]},children:[{type:a,value:"package_reboot_if_required"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:n}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,af,Z]},children:[{type:a,value:F}]},{type:a,value:"\n\n"},{type:b,tag:c,props:{className:[d,N]},children:[{type:a,value:"#"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,N]},children:[{type:a,value:"# This is run at EVERY boot, good to ensure things are at the right place"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,N]},children:[{type:a,value:"# IMPORTANT, make sure that `10.10.10.22` is a valid local DNS server."}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,l,p]},children:[{type:a,value:"bootcmd"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:n}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:ar},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:as},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:"e 'nameserver' \u002Fetc\u002Fresolvconf\u002Fresolv.conf.d\u002Fhead "},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:v}]},{type:a,value:" printf\n    \"nameserver 10.10.10.22\\n\" "},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:m}]},{type:a,value:" \u002Fetc\u002Fresolvconf\u002Fresolv.conf.d\u002Fhead\n  "},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:ar},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:as},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:"e 'wpdn' \u002Fetc\u002Fresolvconf\u002Fresolv.conf.d\u002Fbase "},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:v}]},{type:a,value:" printf \"search\n    production.wpdn\\ndomain production.wpdn\\nnameserver 8.8.8.8\" "},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:m}]},{type:a,value:"\n    \u002Fetc\u002Fresolvconf\u002Fresolv.conf.d\u002Fbase\n  "},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:ar},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:as},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:"e 'wpdn' \u002Fetc\u002Fresolv.conf "},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:v}]},{type:a,value:" resolvconf "},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:"u\n\n"},{type:b,tag:c,props:{className:[d,l,p]},children:[{type:a,value:"runcmd"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:n}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:" sed "},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:"i \"s\u002F127.0.0.1 localhost\u002F127.0.1.1 $(hostname).production.wpdn\n    $(hostname)\\n127.0.0.1 localhost\u002F\" \u002Fetc\u002Fhosts\n  "},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:aj},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:"get install software"},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:"properties"},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:"common python"},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:"software"},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:"properties\n  "},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:" add"},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:"apt"},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:"repository "},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:"y ppa"},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:n}]},{type:a,value:"saltstack\u002Fsalt\n  "},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:aj},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:"get update\n  "},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:aj},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:bb},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:"y upgrade\n  "},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:aj},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:bb},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:"y autoremove\n\n"},{type:b,tag:c,props:{className:[d,l,p]},children:[{type:a,value:"packages"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:n}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:ag},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:"minion\n  "},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:ag},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:"common\n"},{type:b,tag:c,props:{className:[d,N]},children:[{type:a,value:"# vim: et ts=2 sw=2 ft=yaml syntax=yaml"}]},{type:a,value:e}]}]}]},{type:a,value:e}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:I,props:{start:ap},children:[{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"Create two "},{type:b,tag:g,props:{},children:[{type:a,value:"db"}]},{type:a,value:"-type VMs"}]},{type:a,value:e},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,G]},children:[{type:b,tag:g,props:{},children:[{type:a,value:"nova boot "},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:x}]},{type:a,value:at},{type:b,tag:c,props:{className:[d,C,D]},children:[{type:a,value:bc}]},{type:a,value:bd},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:x}]},{type:a,value:"\n     --user-data \u002Fsrv\u002Fopsconfigs\u002Fuserdata.txt "},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:x}]},{type:a,value:at},{type:b,tag:c,props:{className:[d,C,D]},children:[{type:a,value:be}]},{type:a,value:bf},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:x}]},{type:a,value:at},{type:b,tag:c,props:{className:[d,C,D]},children:[{type:a,value:bg}]},{type:a,value:" lightspeed "},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:x}]},{type:a,value:"\n     --security-groups default "},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:x}]},{type:a,value:"\n     db1-masterdb\n\n nova boot "},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:x}]},{type:a,value:ak},{type:b,tag:c,props:{className:[d,C,D]},children:[{type:a,value:bc}]},{type:a,value:bd},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:x}]},{type:a,value:"\n      --user-data \u002Fsrv\u002Fopsconfigs\u002Fuserdata.txt "},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:x}]},{type:a,value:ak},{type:b,tag:c,props:{className:[d,C,D]},children:[{type:a,value:be}]},{type:a,value:bf},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:x}]},{type:a,value:ak},{type:b,tag:c,props:{className:[d,C,D]},children:[{type:a,value:bg}]},{type:a,value:" supersonic "},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:x}]},{type:a,value:"\n      --security-groups default "},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:x}]},{type:a,value:"\n      db2\n"}]}]}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"Accept them to the salt"}]},{type:a,value:e},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,G]},children:[{type:b,tag:g,props:{},children:[{type:a,value:"salt-key "},{type:b,tag:c,props:{className:[d,C,D]},children:[{type:a,value:bh}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,C,D]},children:[{type:a,value:bi}]},{type:a,value:" db1-masterdb\nsalt-key "},{type:b,tag:c,props:{className:[d,C,D]},children:[{type:a,value:bh}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,C,D]},children:[{type:a,value:bi}]},{type:a,value:" db2\n"}]}]}]},{type:a,value:e}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"As an aside. Imagine you want to run dependencies automatically once a VM is\npart of your salt-master. For example, adding its private IP address in a local\n"},{type:b,tag:U,props:{},children:[{type:a,value:"Redis"}]},{type:a,value:" or "},{type:b,tag:U,props:{},children:[{type:a,value:"Etcd"}]},{type:a,value:" live configuration object. One could create a "},{type:b,tag:u,props:{href:"https:\u002F\u002Fdocs.saltproject.io\u002Fen\u002Flatest\u002Ftopics\u002Freactor\u002F",rel:[y,z,A],target:B},children:[{type:a,value:"Salt\n\""},{type:b,tag:U,props:{},children:[{type:a,value:"Reactor"}]},{type:a,value:"\""}]},{type:a,value:" and make "},{type:b,tag:u,props:{href:"https:\u002F\u002Fgist.github.com\u002FWebPlatformDocs\u002F563cb12326b92b22a452",rel:[y,z,A],target:B},children:[{type:a,value:"sure the data is refreshed. This gist is a good\nstarting point"}]},{type:a,value:" 4. Wait the VM build to finish and get their private IP\naddresses"}]},{type:a,value:e},{type:b,tag:I,props:{start:4},children:[{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"Wait the VM build to finish and get their private IP addresses"}]},{type:a,value:e},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,G]},children:[{type:b,tag:g,props:{},children:[{type:a,value:"nova list "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:v}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:"grep"}]},{type:a,value:" db\n\n  "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:v}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:bj}]},{type:a,value:bk},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:v}]},{type:a,value:" db1-masterdb "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:v}]},{type:a,value:bl},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:v}]},{type:a,value:bm},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:v}]},{type:a,value:bn},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:E}]},{type:b,tag:c,props:{className:[d,O]},children:[{type:a,value:au}]},{type:a,value:".10.73 "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:v}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:v}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:bj}]},{type:a,value:bk},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:v}]},{type:a,value:" db2          "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:v}]},{type:a,value:bl},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:v}]},{type:a,value:bm},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:v}]},{type:a,value:bn},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:E}]},{type:b,tag:c,props:{className:[d,O]},children:[{type:a,value:au}]},{type:a,value:".10.74 "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:v}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:"app-image",props:{style:"float:unset;",src:"~\u002Fassets\u002Fcontent\u002Fblog\u002F2015\u002F05\u002Fwebplatform-openstack-cluster-2014-10-06.png",alt:"OpenStack nova command",figcaption:o},children:[{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"Command output when issuing "},{type:b,tag:g,props:{},children:[{type:a,value:"nova list"}]}]},{type:a,value:e}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"Add them to the pillars. Note that the part of the name \"masterdb\" is what\nSalt states uses to know which one will get the writes to. Note that in the\nend, the web apps configs will use the private IP address. Its quicker to\ngenerate pages if the backend doesn't need to make name resolution each time\nit makes database queries. This is why we have to reflect the pillars. Ensure\nthe following structure exists in the file."}]},{type:a,value:e},{type:b,tag:aZ,props:{title:a_},children:[{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"The following file is now "},{type:b,tag:H,props:{},children:[{type:a,value:"GitHub.com\u002FWebPlatform\u002Fsalt-pillar"}]},{type:a,value:" project,\n"},{type:b,tag:u,props:{href:"https:\u002F\u002Fgithub.com\u002Fwebplatform\u002Fsalt-pillar\u002Ftree\u002F3d718578\u002Finfra",rel:[y,z,A],target:B,title:"infra\u002F* on GitHub.com\u002Fwebplatform\u002Fsalt-pillar as of 2015-06-08"},children:[{type:a,value:"and looked like this"}]}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,ai]},children:[{type:b,tag:g,props:{},children:[{type:b,tag:c,props:{className:[d,N]},children:[{type:a,value:"# Edit \u002Fsrv\u002Fpillar\u002Finfra\u002Finit.sls at the following blocks"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,l,p]},children:[{type:a,value:"infra"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:n}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,l,p]},children:[{type:a,value:bo}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:n}]},{type:a,value:av},{type:b,tag:c,props:{className:[d,l,p]},children:[{type:a,value:aw}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:n}]},{type:a,value:" 10.10.10.73\n"}]}]}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"Refer to the right IP address in the configuration file with a similar salt\n"},{type:b,tag:g,props:{},children:[{type:a,value:"pillar.get"}]},{type:a,value:" reference ("},{type:b,tag:u,props:{href:"https:\u002F\u002Fgithub.com\u002Fwebplatform\u002Fsalt-states\u002Fblob\u002F20150608\u002Fcode\u002Ffiles\u002Fblog\u002Flocal.php.jinja",rel:[y,z,A],target:B,title:"code\u002Ffiles\u002Fblog\u002Flocal.php.jinja on GitHub.com\u002Fwebplatform\u002Fsalt-states as of 2015-06-08"},children:[{type:a,value:"config template"}]},{type:a,value:", "},{type:b,tag:u,props:{href:"https:\u002F\u002Fgithub.com\u002Fwebplatform\u002Fsalt-states\u002Fblob\u002F20150608\u002Fcode\u002Fblog.sls#L48-L55",rel:[y,z,A],target:B,title:"code\u002Fblog.sls on GitHub.com\u002Fwebplatform\u002Fsalt-states as of 2015-06-08"},children:[{type:a,value:"state to write\nconfig template to filesystem"}]},{type:a,value:")."}]},{type:a,value:e}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,ai]},children:[{type:b,tag:g,props:{},children:[{type:b,tag:c,props:{className:[d,l,p]},children:[{type:a,value:"\u002Fsrv\u002Fwebplatform\u002Fblog\u002Fwp-config.php"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:n}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,l,p]},children:[{type:a,value:"file.managed"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:n}]},{type:a,value:av},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,l,p]},children:[{type:a,value:"source"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:n}]},{type:a,value:ag},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:n}]},{type:a,value:"\u002F\u002Fcode\u002Ffiles\u002Fblog\u002Fwp"},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:"config.php.jinja\n    "},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,l,p]},children:[{type:a,value:"template"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:n}]},{type:a,value:" jinja\n    "},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,l,p]},children:[{type:a,value:"user"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:n}]},{type:a,value:bp},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:bq},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,l,p]},children:[{type:a,value:"group"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:n}]},{type:a,value:bp},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:bq},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,l,p]},children:[{type:a,value:"context"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:n}]},{type:a,value:br},{type:b,tag:c,props:{className:[d,l,p]},children:[{type:a,value:"db_creds"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:n}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:al}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:al}]},{type:a,value:ag},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:am}]},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:bs}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:an}]},{type:a,value:"('accounts"},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:n}]},{type:a,value:"wiki"},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:n}]},{type:a,value:"db') "},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ao}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ao}]},{type:a,value:br},{type:b,tag:c,props:{className:[d,l,p]},children:[{type:a,value:"masterdb_ip"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:n}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:al}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:al}]},{type:a,value:ag},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:am}]},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:bs}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:an}]},{type:a,value:"('infra"},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:n}]},{type:a,value:bo},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:n}]},{type:a,value:"masterdb') "},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ao}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ao}]},{type:a,value:av},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,l,p]},children:[{type:a,value:"require"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:n}]},{type:a,value:ak},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,l,p]},children:[{type:a,value:"cmd"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:n}]},{type:a,value:" rsync"},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:"blog\n"}]}]}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"... and the "},{type:b,tag:g,props:{},children:[{type:a,value:"wp-config.php.jinja"}]}]},{type:a,value:e},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,bt]},children:[{type:b,tag:g,props:{},children:[{type:b,tag:c,props:{className:[d,"php",bt]},children:[{type:b,tag:c,props:{className:[d,"delimiter",Z]},children:[{type:a,value:"\u003C?php"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,N]},children:[{type:a,value:"## Managed by Salt Stack, please DO NOT TOUCH, or ALL CHANGES WILL be LOST!"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,N]},children:[{type:a,value:"## source {{ source }}"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:_}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:$}]},{type:b,tag:c,props:{className:[d,w,aa]},children:[{type:a,value:"'DB_CHARSET'"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:W}]},{type:a,value:bu},{type:b,tag:c,props:{className:[d,w,ab]},children:[{type:a,value:"\"utf8\""}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ac}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ad}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:_}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:$}]},{type:b,tag:c,props:{className:[d,w,aa]},children:[{type:a,value:"'DB_COLLATE'"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:W}]},{type:a,value:bu},{type:b,tag:c,props:{className:[d,w,ab]},children:[{type:a,value:"\"\""}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ac}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ad}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:_}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:$}]},{type:b,tag:c,props:{className:[d,w,aa]},children:[{type:a,value:"'DB_HOST'"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:W}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,w,ab]},children:[{type:a,value:"\"{{ masterdb_ip|default('127.0.0.1')    }}\""}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ac}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ad}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:_}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:$}]},{type:b,tag:c,props:{className:[d,w,aa]},children:[{type:a,value:"'DB_NAME'"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:W}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,w,ab]},children:[{type:a,value:"\"{{ db_creds.database|default('wpblog') }}\""}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ac}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ad}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:_}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:$}]},{type:b,tag:c,props:{className:[d,w,aa]},children:[{type:a,value:"'DB_USER'"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:W}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,w,ab]},children:[{type:a,value:"\"{{ db_creds.username|default('root')   }}\""}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ac}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ad}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:_}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:$}]},{type:b,tag:c,props:{className:[d,w,aa]},children:[{type:a,value:"'DB_PASSWORD'"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:W}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,w,ab]},children:[{type:a,value:"\"{{ db_creds.password|default('')       }}\""}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ac}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ad}]},{type:a,value:e}]}]}]}]},{type:a,value:e},{type:b,tag:I,props:{start:7},children:[{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"Refresh the pillars, rebuild the salt master "},{type:b,tag:g,props:{},children:[{type:a,value:"state.highstate"}]},{type:a,value:", and test it\nout."}]},{type:a,value:e},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,G]},children:[{type:b,tag:g,props:{},children:[{type:a,value:"salt-call saltutil.sync_all\nsalt salt state.highstate\n\nsalt-call pillar.get infra:hosts_entries:masterdb\n"},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:m}]},{type:a,value:" local:\n"},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:m}]},{type:a,value:"   "},{type:b,tag:c,props:{className:[d,O]},children:[{type:a,value:au}]},{type:a,value:".10.73\n"}]}]}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"Make sure the VMs has the same version of salt as you do"}]},{type:a,value:e},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,G]},children:[{type:b,tag:g,props:{},children:[{type:a,value:" salt-call test.version\n "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:m}]},{type:a,value:" local:\n "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:m}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,O]},children:[{type:a,value:ax}]},{type:a,value:".0\n\n salt db"},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:x}]},{type:a,value:"* test.version\n "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:m}]},{type:a,value:" db2:\n "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:m}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,O]},children:[{type:a,value:ax}]},{type:a,value:".0\n "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:m}]},{type:a,value:" db1-masterdb:\n "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:m}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,O]},children:[{type:a,value:ax}]},{type:a,value:".0\n"}]}]}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"Kick the VMs installation"}]},{type:a,value:e},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,G]},children:[{type:b,tag:g,props:{},children:[{type:a,value:"salt db"},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:x}]},{type:a,value:"* state.highstate\n"}]}]}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"Highstate takes a while to run, but once you are done, you should be able to\nwork with them with the remaining of this tutorial"}]},{type:a,value:e}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,G]},children:[{type:b,tag:g,props:{},children:[{type:a,value:ay},{type:b,tag:c,props:{className:[d,C,D]},children:[{type:a,value:az}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:bv}]},{type:a,value:" mysql.version\n"},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:m}]},{type:a,value:bw},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:m}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,O]},children:[{type:a,value:bx}]},{type:a,value:by},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:m}]},{type:a,value:bz},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:m}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,O]},children:[{type:a,value:bx}]},{type:a,value:by}]}]}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"Each db-type VM MySQL\u002FMariaDB\u002FPercona server will have a "},{type:b,tag:U,props:{},children:[{type:a,value:"different"}]},{type:a,value:" database\nmaintenance users defined in "},{type:b,tag:g,props:{},children:[{type:a,value:"\u002Fetc\u002Fmysql\u002Fdebian.cnf"}]},{type:a,value:a$}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"Make sure you don't overwrite them unless you import everything all at once,\nincluding the users and their grants. 11. Check that each db VMs has their SSL\ncertificate generated by Salt"}]},{type:a,value:e},{type:b,tag:I,props:{start:11},children:[{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:"Check that each db VMs has their SSL certificate generated by Salt"}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,G]},children:[{type:b,tag:g,props:{},children:[{type:a,value:ay},{type:b,tag:c,props:{className:[d,C,D]},children:[{type:a,value:az}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:bv}]},{type:a,value:" cmd.run "},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"'ls \u002Fetc\u002Fmysql | grep pem'"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:m}]},{type:a,value:bw},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:m}]},{type:a,value:bA},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:m}]},{type:a,value:bB},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:m}]},{type:a,value:bC},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:m}]},{type:a,value:bD},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:m}]},{type:a,value:bE},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:m}]},{type:a,value:bF},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:m}]},{type:a,value:bG},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:m}]},{type:a,value:bH},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:m}]},{type:a,value:bz},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:m}]},{type:a,value:bA},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:m}]},{type:a,value:bB},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:m}]},{type:a,value:bC},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:m}]},{type:a,value:bD},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:m}]},{type:a,value:bE},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:m}]},{type:a,value:bF},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:m}]},{type:a,value:bG},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:m}]},{type:a,value:bH}]}]}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"Each file is a certificate so they can use to make replication through SSL."}]},{type:a,value:e},{type:b,tag:Y,props:{id:aO},children:[{type:b,tag:u,props:{href:"#now-on-each-database-server",ariaHidden:F,tabIndex:P},children:[{type:b,tag:c,props:{className:[Q,R]},children:[]}]},{type:a,value:aP}]},{type:a,value:e},{type:b,tag:I,props:{},children:[{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"Connect to both db nodes using the salt as a Jump Host"}]},{type:a,value:e},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,G]},children:[{type:b,tag:g,props:{},children:[{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:bI}]},{type:a,value:" masterdb.production.wpdn\n"},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:bI}]},{type:a,value:" db2.production.wpdn\n"}]}]}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"Get to the MySQL\u002FMariaDB\u002FPercona prompt on each VMs."}]},{type:a,value:e}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"If you are used with terminal screens that allows to keep sessions running even\nif you get disconnected, that would be ideal. We never know if the connection\nhangs."}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"On WebPlatform system we do have "},{type:b,tag:g,props:{},children:[{type:a,value:"screen"}]},{type:a,value:" but "},{type:b,tag:g,props:{},children:[{type:a,value:"tmux"}]},{type:a,value:" can do too."}]},{type:a,value:e},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,X]},children:[{type:b,tag:g,props:{},children:[{type:a,value:"mysql\n"}]}]}]},{type:a,value:e},{type:b,tag:I,props:{start:T},children:[{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"Check if SSL is enabled on both MySQL\u002FMariaDB\u002FPercona servers"}]},{type:a,value:e},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,X]},children:[{type:b,tag:g,props:{},children:[{type:a,value:"\u003E MariaDB [(none)]\u003E SHOW VARIABLES like '%ssl%';\n\u003E +---------------+----------------------------+\n\u003E | Variable_name | Value                      |\n\u003E +---------------+----------------------------+\n\u003E | have_openssl  | YES                        |\n\u003E | have_ssl      | YES                        |\n\u003E | ssl_ca        | \u002Fetc\u002Fmysql\u002Fca-cert.pem     |\n\u003E | ssl_capath    |                            |\n\u003E | ssl_cert      | \u002Fetc\u002Fmysql\u002Fserver-cert.pem |\n\u003E | ssl_cipher    | DHE-RSA-AES256-SHA         |\n\u003E | ssl_crl       |                            |\n\u003E | ssl_crlpath   |                            |\n\u003E | ssl_key       | \u002Fetc\u002Fmysql\u002Fserver-key.pem  |\n\u003E +---------------+----------------------------+\n"}]}]}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"Generate SSL certificates for MySQL\u002FMariaDB\u002FPercona server, see "},{type:b,tag:u,props:{href:"https:\u002F\u002Fgist.github.com\u002FWebPlatformDocs\u002Fdee3c76a88b3c44da564",rel:[y,z,A],target:B},children:[{type:a,value:"this\ngist"}]},{type:a,value:" on how to do it."}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"Places to double check; To see which config keys sets what's shown in the\nprevious screen, take a look in the VMs "},{type:b,tag:g,props:{},children:[{type:a,value:"\u002Fetc\u002Fmysql\u002Fconf.d\u002F"}]},{type:a,value:" folders with\nsimilar entries."}]},{type:a,value:e}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:ae,props:{},children:[{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:e},{type:b,tag:h,props:{},children:[{type:b,tag:g,props:{},children:[{type:a,value:aA}]},{type:a,value:" is what allows us to communicate between servers, before MySQL\n5.5 we had "},{type:b,tag:g,props:{},children:[{type:a,value:"skip-networking"}]},{type:a,value:" but now only a "},{type:b,tag:g,props:{},children:[{type:a,value:aA}]},{type:a,value:" is sufficient. Make\nsure that your security groups allows only local network connections though."}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:e},{type:b,tag:h,props:{},children:[{type:b,tag:g,props:{},children:[{type:a,value:bJ}]},{type:a,value:" MUST be with a different number for each nodes. Make sure no\nserver has the same number."}]},{type:a,value:e},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,"language-ini"]},children:[{type:b,tag:g,props:{},children:[{type:b,tag:c,props:{className:[d,bK]},children:[{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:am}]},{type:b,tag:c,props:{className:[d,bL,bM]},children:[{type:a,value:"mysqld"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:an}]}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,l,K]},children:[{type:a,value:aA}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:E}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,L,M]},children:[{type:a,value:"0.0.0.0"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,l,K]},children:[{type:a,value:"log-basename"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:E}]},{type:b,tag:c,props:{className:[d,L,M]},children:[{type:a,value:"mariadbrepl"}]},{type:a,value:"\nlog-bin\n"},{type:b,tag:c,props:{className:[d,l,K]},children:[{type:a,value:"binlog-format"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:E}]},{type:b,tag:c,props:{className:[d,L,M]},children:[{type:a,value:"row"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,l,K]},children:[{type:a,value:bJ}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:E}]},{type:b,tag:c,props:{className:[d,L,M]},children:[{type:a,value:"1"}]},{type:a,value:bN},{type:b,tag:c,props:{className:[d,l,K]},children:[{type:a,value:"ssl-cipher"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:E}]},{type:b,tag:c,props:{className:[d,L,M]},children:[{type:a,value:"DHE-RSA-AES256-SHA"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,l,K]},children:[{type:a,value:"ssl-ca"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:E}]},{type:b,tag:c,props:{className:[d,L,M]},children:[{type:a,value:"\u002Fetc\u002Fmysql\u002Fca-cert.pem"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,l,K]},children:[{type:a,value:bO}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:E}]},{type:b,tag:c,props:{className:[d,L,M]},children:[{type:a,value:"\u002Fetc\u002Fmysql\u002Fserver-cert.pem"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,l,K]},children:[{type:a,value:bP}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:E}]},{type:b,tag:c,props:{className:[d,L,M]},children:[{type:a,value:"\u002Fetc\u002Fmysql\u002Fserver-key.pem"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,bK]},children:[{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:am}]},{type:b,tag:c,props:{className:[d,bL,bM]},children:[{type:a,value:"client"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:an}]}]},{type:a,value:bN},{type:b,tag:c,props:{className:[d,l,K]},children:[{type:a,value:bO}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:E}]},{type:b,tag:c,props:{className:[d,L,M]},children:[{type:a,value:"\u002Fetc\u002Fmysql\u002Fclient-cert.pem"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,l,K]},children:[{type:a,value:bP}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:E}]},{type:b,tag:c,props:{className:[d,L,M]},children:[{type:a,value:"\u002Fetc\u002Fmysql\u002Fclient-key.pem"}]},{type:a,value:e}]}]}]},{type:a,value:e}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:I,props:{start:6},children:[{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:e},{type:b,tag:h,props:{},children:[{type:b,tag:H,props:{},children:[{type:a,value:"From the database master"}]},{type:a,value:" (a.k.a \"masterdb\"), Get the replication log\nposition; We'll need the "},{type:b,tag:g,props:{},children:[{type:a,value:"File"}]},{type:a,value:" and "},{type:b,tag:g,props:{},children:[{type:a,value:"Position"}]},{type:a,value:" values to setup the\nreplication node."}]},{type:a,value:e},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,X]},children:[{type:b,tag:g,props:{},children:[{type:a,value:"MariaDB [(none)]\u003E show master status;\n\u003E +------------------------+----------+--------------+------------------+\n\u003E | File                   | Position | Binlog_Do_DB | Binlog_Ignore_DB |\n\u003E +------------------------+----------+--------------+------------------+\n\u003E | mariadbrepl-bin.000002 |      644 |              |                  |\n\u003E +------------------------+----------+--------------+------------------+\n"}]}]}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"Configure the "},{type:b,tag:g,props:{},children:[{type:a,value:aw}]},{type:a,value:" to accept replication users. "},{type:b,tag:H,props:{},children:[{type:a,value:"From the salt\nmaster"}]}]},{type:a,value:e}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,G]},children:[{type:b,tag:g,props:{},children:[{type:a,value:ay},{type:b,tag:c,props:{className:[d,C,D]},children:[{type:a,value:az}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"'roles:masterdb'"}]},{type:a,value:" mysql.user_create replication_user "},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"'%'"}]},{type:a,value:" foobarbaz\n"}]}]}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"NOTE: My salt states script creates a grain in "},{type:b,tag:g,props:{},children:[{type:a,value:"\u002Fetc\u002Fsalt\u002Fgrains"}]},{type:a,value:" with the\nfollowing data;"}]},{type:a,value:e},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,ai]},children:[{type:b,tag:g,props:{},children:[{type:b,tag:c,props:{className:[d,l,p]},children:[{type:a,value:"roles"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:n}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:" masterdb\n"}]}]}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"Alternatively, you could call the VM "},{type:b,tag:g,props:{},children:[{type:a,value:"db1-masterdb"}]},{type:a,value:", use a "},{type:b,tag:u,props:{href:"https:\u002F\u002Fgist.github.com\u002Frenoirb\u002Fb2e0222ad52e5d453298",rel:[y,z,A],target:B},children:[{type:a,value:"small python script\nthat'll parse the information for you and make it a "},{type:b,tag:H,props:{},children:[{type:a,value:"grain"}]},{type:a,value:"\nautomatically"}]},{type:a,value:". 8. "},{type:b,tag:H,props:{},children:[{type:a,value:"Back to the masterdb VM"}]},{type:a,value:", check if the user exists,\nensure SSL is required"}]},{type:a,value:e},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,X]},children:[{type:b,tag:g,props:{},children:[{type:a,value:"MariaDB [(none)]\u003E show grants for 'replication_user';\n\u003E +---------------------------------------------------------------------------------------+\n\u003E | Grants for replication_user@%                                                         |\n\u003E +---------------------------------------------------------------------------------------+\n\u003E | GRANT REPLICATION SLAVE ON *.* TO 'replication_user'@'%' IDENTIFIED BY PASSWORD '...' |\n\u003E +---------------------------------------------------------------------------------------+\n\nMariaDB [(none)]\u003E GRANT REPLICATION SLAVE ON *.* TO 'replication_user'@'%.local.wpdn' REQUIRE SSL;\nMariaDB [(none)]\u003E GRANT USAGE ON *.* TO 'replication_user'@'%' REQUIRE SSL;\n\nMariaDB [(none)]\u003E SELECT User,Host,Repl_slave_priv,Repl_client_priv,ssl_type,ssl_cipher from mysql.user where User = 'replication_user';\n\u003E +------------------+--------------+-----------------+------------------+----------+\n\u003E | User             | Host         | Repl_slave_priv | Repl_client_priv | ssl_type |\n\u003E +------------------+--------------+-----------------+------------------+----------+\n\u003E | replication_user | %.local.wpdn | Y               | N                | ANY      |\n\u003E +------------------+--------------+-----------------+------------------+----------+\n"}]}]}]},{type:a,value:e},{type:b,tag:I,props:{start:9},children:[{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"On the secondary db VM, in mysql prompt, setup the initial "},{type:b,tag:g,props:{},children:[{type:a,value:"CHANGE MASTER"}]},{type:a,value:"\nstatement;"}]},{type:a,value:e},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,X]},children:[{type:b,tag:g,props:{},children:[{type:a,value:"CHANGE MASTER TO\n  MASTER_HOST='masterdb.local.wpdn',\n  MASTER_USER='replication_user',\n  MASTER_PASSWORD='foobarbaz',\n  MASTER_PORT=3306,\n  MASTER_LOG_FILE='mariadbrepl-bin.000002',\n  MASTER_LOG_POS=644,\n  MASTER_CONNECT_RETRY=10,\n  MASTER_SSL=1,\n  MASTER_SSL_CA='\u002Fetc\u002Fmysql\u002Fca-cert.pem',\n  MASTER_SSL_CERT='\u002Fetc\u002Fmysql\u002Fclient-cert.pem',\n  MASTER_SSL_KEY='\u002Fetc\u002Fmysql\u002Fclient-key.pem';\n"}]}]}]},{type:a,value:e}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:Y,props:{id:aQ},children:[{type:b,tag:u,props:{href:"#checking-if-it-worked",ariaHidden:F,tabIndex:P},children:[{type:b,tag:c,props:{className:[Q,R]},children:[]}]},{type:a,value:aR}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"From one of the secondary servers, look for success indicators:"}]},{type:a,value:e},{type:b,tag:ae,props:{},children:[{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:e},{type:b,tag:h,props:{},children:[{type:b,tag:g,props:{},children:[{type:a,value:"Seconds_Behind_Master"}]},{type:a,value:bQ},{type:b,tag:H,props:{},children:[{type:a,value:"0"}]},{type:a,value:W}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:e},{type:b,tag:h,props:{},children:[{type:b,tag:g,props:{},children:[{type:a,value:"Slave_IO_State"}]},{type:a,value:bQ},{type:b,tag:H,props:{},children:[{type:a,value:"Waiting for master to send event"}]}]},{type:a,value:e},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,X]},children:[{type:b,tag:g,props:{},children:[{type:a,value:"MariaDB [wpstats]\u003E show slave status\\G\n*************************** 1. row ***************************\n               Slave_IO_State: Waiting for master to send event\n                  Master_Host: masterdb.local.wpdn\n                  Master_User: replication_user\n                  Master_Port: 3306\n                Connect_Retry: 10\n              Master_Log_File: mariadbrepl-bin.000066\n          Read_Master_Log_Pos: 19382112\n               Relay_Log_File: mariadbrepl-relay-bin.000203\n                Relay_Log_Pos: 19382405\n        Relay_Master_Log_File: mariadbrepl-bin.000066\n             Slave_IO_Running: Yes\n            Slave_SQL_Running: Yes\n              Replicate_Do_DB:\n          Replicate_Ignore_DB:\n           Replicate_Do_Table:\n       Replicate_Ignore_Table:\n      Replicate_Wild_Do_Table:\n  Replicate_Wild_Ignore_Table:\n                   Last_Errno: 0\n                   Last_Error:\n                 Skip_Counter: 0\n          Exec_Master_Log_Pos: 19382112\n              Relay_Log_Space: 19382757\n              Until_Condition: None\n               Until_Log_File:\n                Until_Log_Pos: 0\n           Master_SSL_Allowed: Yes\n           Master_SSL_CA_File: \u002Fetc\u002Fmysql\u002Fca-cert.pem\n           Master_SSL_CA_Path:\n              Master_SSL_Cert: \u002Fetc\u002Fmysql\u002Fclient-cert.pem\n            Master_SSL_Cipher:\n               Master_SSL_Key: \u002Fetc\u002Fmysql\u002Fclient-key.pem\n        Seconds_Behind_Master: 0\nMaster_SSL_Verify_Server_Cert: No\n                Last_IO_Errno: 0\n                Last_IO_Error:\n               Last_SQL_Errno: 0\n               Last_SQL_Error:\n  Replicate_Ignore_Server_Ids:\n             Master_Server_Id: 1\n               Master_SSL_Crl: \u002Fetc\u002Fmysql\u002Fca-cert.pem\n           Master_SSL_Crlpath:\n                   Using_Gtid: No\n                  Gtid_IO_Pos:\n      Replicate_Do_Domain_Ids:\n  Replicate_Ignore_Domain_Ids:\n1 row in set (0.00 sec)\n"}]}]}]},{type:a,value:e}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:Y,props:{id:aS},children:[{type:b,tag:u,props:{href:"#managing-users",ariaHidden:F,tabIndex:P},children:[{type:b,tag:c,props:{className:[Q,R]},children:[]}]},{type:a,value:aT}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"In the end, since replication is active, you can add users to your system and\nall nodes will get the privileges."}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"The way I work is that I can use Salt stack states to add privileges in my\nstates (more details soon) or I can use a few salt commands from my salt master\nand send them to the database "},{type:b,tag:g,props:{},children:[{type:a,value:aw}]},{type:a,value:" VM."}]},{type:a,value:e},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,X]},children:[{type:b,tag:g,props:{},children:[{type:a,value:"salt -G 'roles:masterdb' mysql.db_create 'accounts_oauth' 'utf8' 'utf8_general_ci'\nsalt -G 'roles:masterdb' mysql.user_create 'accounts' '%' 'barfoo'\nsalt -G 'roles:masterdb' mysql.grant_add 'ALL PRIVILEGES' 'accounts_oauth.*' 'accounts' â€˜%â€™\n"}]}]}]},{type:a,value:e},{type:b,tag:Y,props:{id:aU},children:[{type:b,tag:u,props:{href:"#references",ariaHidden:F,tabIndex:P},children:[{type:b,tag:c,props:{className:[Q,R]},children:[]}]},{type:a,value:aV}]},{type:a,value:e},{type:b,tag:ae,props:{},children:[{type:a,value:e},{type:b,tag:k,props:{},children:[{type:b,tag:u,props:{href:bR,rel:[y,z,A],target:B},children:[{type:a,value:bR}]}]},{type:a,value:e},{type:b,tag:k,props:{},children:[{type:b,tag:u,props:{href:bS,rel:[y,z,A],target:B},children:[{type:a,value:bS}]}]},{type:a,value:e}]},{type:a,value:e}]},text:"---\ntitle: Create a MariaDB cluster with replication over SSL with Salt Stack\nlocale: en-CA\ncreated: 2015-01-28\nupdated: 2015-02-03\ncanonical: 'https:\u002F\u002Frenoirboulanger.com\u002Fblog\u002F2015\u002F01\u002Fcreate-mariadb-cluster-replication-ssl-salt-stack\u002F'\nstatus: publish\nrevising: false\nmigrateLinks: true\nmigrateImages: false\ngallery: false\ncaption: false\ncategories:\n  - projects\ntags:\n  - linux\n  - techniques\n  - Salt Stack\n  - cloud-computing\nkeywords:\n  - replication\n  - database-server\n  - cluster\n  - configuration\n  - mysql\n  - MariaDB\ndescription: Create a MariaDB cluster with replication over SSL with Salt Stack\nexcerpt: \u003E-\n  Some notes on how I created our updated MariaDB database cluster with\n  replication.\npreamble:\n  text: |\n    The following might still work if all software versions are still available in the exact versions ranges they were when initially published.\n    Part of this article was written while maintaining WebPlatformâ€™s Infrastructure maintenance. Mostly [in *WPD\u002FInfrastructure\u002Fprocedures\u002F* **Replacing a VM**](https:\u002F\u002Fwebplatform.github.io\u002Fdocs\u002FWPD\u002FInfrastructure\u002Fprocedures\u002FReplacing_a_VM\u002F), and [*WPD\u002FInfrastructure\u002Fprocedures\u002F* **Managing  MariaDB replication**](https:\u002F\u002Fwebplatform.github.io\u002Fdocs\u002FWPD\u002FInfrastructure\u002Fprocedures\u002FManaging_MySQL_replication\u002F)\n---\n\nWhile reworking WebPlatform infrastructure I had to rebuild a new database\ncluster.\n\nThe objective of the cluster is to have more than one database server so that\nour web applications can make reads on any node in the cluster.\n\nWhile the system has replication, and I can send reads on any nodes on the\ncluster. There is a flaw in it too, any nodes can _also_ make writes; nothing is\nblocking it.\n\nMy plan is to change this so that it would be OK to send writes to anybody in\nthe cluster. There is now something called \"Galera\" that would allow me that.\nBut that's outside of the scope of this article.\n\nIn the current configuration, I'm purposefully not fixing it because my\nconfiguration management makes sure only the current master. So in this setup, I\ndecided that the VM that gets writes has a specific mention of \"masterdb\" in the\nhostname.\n\nThat way, its easy to see and it gives me the ability to change master at\nanytime if an emergency requires me to.\n\n## Changing MariaDB replication master\n\nChanging master could be done in the following order:\n\n- Lock writes on masterdb databases\n- Wait replication to catch up\n- On secondary database servers; remove replication configuration\n- Tell all web apps to use new database master\n- Remove database lock\n- Setup new replication configuration to use new master\n\nThanks to the fact that I manage **everything** through configruation management\n--including the web app configuration files-- its only a matter of applying the\nstates everywhere in the cluster. That makes it fairly easy to do such an heavy\nmove, even under stress.\n\nThis post will be updated once I have completed the multi writes setup.\n\n## Procedure\n\n### Assumptions\n\nThe rest of this article will assume the following:\n\n1. You are running VMs on OpenStack, and do have credentials to make API calls\n   to it\n2. You have a Salt master already running\n3. Your salt master has at least `python-novaclient` (`nova` commands) available\n   on it\n4. You have your Open Stack credentials already loaded in your salt master's\n   `\u002Fetc\u002Fprofile.d\u002F` so you can use `nova` directly\n\n### From the salt-master, initiate a few VMs to use for your database cluster\n\n1. Before booting, ensure you have the following details in your OpenStack\n   cluster and salt master;\n\n- You have a SSH key in your OpenStack cluster. Mine is called\n  \"renoirb-production\" and my salt master user has the private key preinstalled\n- You have a `userdata.txt` file that has settings that points to your salt\n  master\n\n  ```bash\n  cat \u002Fsrv\u002Fopsconfigs\u002Fuserdata.txt\n  ```\n\n  \u003C!-- #XXX from app-alert-box to rb-notice-box --\u003E\n  \u003Capp-alert-box title=\"While migrating this article...\"\u003E\n\n  I've noticed that this `userdata.txt` file I've initially written for this\n  article has then been part of [WebPlatformâ€™s \"ops\" repository][wpd-ops-salt]\n  from which I was (2015) using to work locally. In this repo, there was the\n  [`salt-master\u002Fsalt-userdata.yml`][salt-userdata].\n\n  \u003C\u002Fapp-alert-box\u003E\n\n  ```yaml\n  #cloud-config\n  manage_etc_hosts: false # Has to be set to false for everybody. Otherwise we need a DNS\n  manage-resolv-conf: false\n  locale: en_US.UTF-8\n  timezone: America\u002FNew_York\n  package_upgrade: true\n  package_update: true\n  package_reboot_if_required: true\n\n  #\n  # This is run at EVERY boot, good to ensure things are at the right place\n  # IMPORTANT, make sure that `10.10.10.22` is a valid local DNS server.\n  bootcmd:\n    - grep -q -e 'nameserver' \u002Fetc\u002Fresolvconf\u002Fresolv.conf.d\u002Fhead || printf\n      \"nameserver 10.10.10.22\\n\" \u003E\u003E \u002Fetc\u002Fresolvconf\u002Fresolv.conf.d\u002Fhead\n    - grep -q -e 'wpdn' \u002Fetc\u002Fresolvconf\u002Fresolv.conf.d\u002Fbase || printf \"search\n      production.wpdn\\ndomain production.wpdn\\nnameserver 8.8.8.8\" \u003E\n      \u002Fetc\u002Fresolvconf\u002Fresolv.conf.d\u002Fbase\n    - grep -q -e 'wpdn' \u002Fetc\u002Fresolv.conf || resolvconf -u\n\n  runcmd:\n    - sed -i \"s\u002F127.0.0.1 localhost\u002F127.0.1.1 $(hostname).production.wpdn\n      $(hostname)\\n127.0.0.1 localhost\u002F\" \u002Fetc\u002Fhosts\n    - apt-get install software-properties-common python-software-properties\n    - add-apt-repository -y ppa:saltstack\u002Fsalt\n    - apt-get update\n    - apt-get -y upgrade\n    - apt-get -y autoremove\n\n  packages:\n    - salt-minion\n    - salt-common\n  # vim: et ts=2 sw=2 ft=yaml syntax=yaml\n  ```\n\n2. Create two `db`-type VMs\n\n   ```bash\n   nova boot \\\n        --image Ubuntu-14.04-Trusty \\\n        --user-data \u002Fsrv\u002Fopsconfigs\u002Fuserdata.txt \\\n        --key_name renoirb-production \\\n        --flavor lightspeed \\\n        --security-groups default \\\n        db1-masterdb\n\n    nova boot \\\n         --image Ubuntu-14.04-Trusty \\\n         --user-data \u002Fsrv\u002Fopsconfigs\u002Fuserdata.txt \\\n         --key_name renoirb-production \\\n         --flavor supersonic \\\n         --security-groups default \\\n         db2\n   ```\n\n3. Accept them to the salt\n\n   ```bash\n   salt-key -y -a db1-masterdb\n   salt-key -y -a db2\n   ```\n\nAs an aside. Imagine you want to run dependencies automatically once a VM is\npart of your salt-master. For example, adding its private IP address in a local\n_Redis_ or _Etcd_ live configuration object. One could create a [Salt\n\"_Reactor_\"][0] and make [sure the data is refreshed. This gist is a good\nstarting point][1] 4. Wait the VM build to finish and get their private IP\naddresses\n\n4. Wait the VM build to finish and get their private IP addresses\n\n   ```bash\n   nova list | grep db\n\n     | ... | db1-masterdb | ACTIVE  | Running     | private-network=10.10.10.73 |\n     | ... | db2          | ACTIVE  | Running     | private-network=10.10.10.74 |\n   ```\n\n   \u003Capp-image style=\"float:unset;\" src=\"~\u002Fassets\u002Fcontent\u002Fblog\u002F2015\u002F05\u002Fwebplatform-openstack-cluster-2014-10-06.png\" alt=\"OpenStack nova command\" figcaption=\" \" alt=\"Terminal screen\"\u003E\n\n   Command output when issuing `nova list`\n\n   \u003C\u002Fapp-image\u003E\n\n5. Add them to the pillars. Note that the part of the name \"masterdb\" is what\n   Salt states uses to know which one will get the writes to. Note that in the\n   end, the web apps configs will use the private IP address. Its quicker to\n   generate pages if the backend doesn't need to make name resolution each time\n   it makes database queries. This is why we have to reflect the pillars. Ensure\n   the following structure exists in the file.\n\n   \u003Capp-alert-box title=\"While migrating this article...\"\u003E\n\n   The following file is now **GitHub.com\u002FWebPlatform\u002Fsalt-pillar** project,\n   [and looked like this][salt-pillar-infra]\n\n   \u003C\u002Fapp-alert-box\u003E\n\n   ```yaml\n   # Edit \u002Fsrv\u002Fpillar\u002Finfra\u002Finit.sls at the following blocks\n   infra:\n     hosts_entries:\n       masterdb: 10.10.10.73\n   ```\n\n6. Refer to the right IP address in the configuration file with a similar salt\n   `pillar.get` reference ([config template][blog-config-jinja], [state to write\n   config template to filesystem][blog-config-state]).\n\n```yaml\n\u002Fsrv\u002Fwebplatform\u002Fblog\u002Fwp-config.php:\n  file.managed:\n    - source: salt:\u002F\u002Fcode\u002Ffiles\u002Fblog\u002Fwp-config.php.jinja\n    - template: jinja\n    - user: www-data\n    - group: www-data\n    - context:\n        db_creds: {{ salt['pillar.get']('accounts:wiki:db') }}\n        masterdb_ip: {{ salt['pillar.get']('infra:hosts_entries:masterdb') }}\n    - require:\n      - cmd: rsync-blog\n```\n\n... and the `wp-config.php.jinja`\n\n```php\n\u003C?php\n## Managed by Salt Stack, please DO NOT TOUCH, or ALL CHANGES WILL be LOST!\n## source {{ source }}\ndefine('DB_CHARSET',  \"utf8\");\ndefine('DB_COLLATE',  \"\");\ndefine('DB_HOST',     \"{{ masterdb_ip|default('127.0.0.1')    }}\");\ndefine('DB_NAME',     \"{{ db_creds.database|default('wpblog') }}\");\ndefine('DB_USER',     \"{{ db_creds.username|default('root')   }}\");\ndefine('DB_PASSWORD', \"{{ db_creds.password|default('')       }}\");\n```\n\n7. Refresh the pillars, rebuild the salt master `state.highstate`, and test it\n   out.\n\n   ```bash\n   salt-call saltutil.sync_all\n   salt salt state.highstate\n\n   salt-call pillar.get infra:hosts_entries:masterdb\n   \u003E local:\n   \u003E   10.10.10.73\n   ```\n\n8. Make sure the VMs has the same version of salt as you do\n\n   ```bash\n    salt-call test.version\n    \u003E local:\n    \u003E     2014.7.0\n\n    salt db\\* test.version\n    \u003E db2:\n    \u003E     2014.7.0\n    \u003E db1-masterdb:\n    \u003E     2014.7.0\n   ```\n\n9. Kick the VMs installation\n\n   ```bash\n   salt db\\* state.highstate\n   ```\n\n10. Highstate takes a while to run, but once you are done, you should be able to\n    work with them with the remaining of this tutorial\n\n```bash\nsalt -G 'roles:db' mysql.version\n\u003E db2:\n\u003E     10.1.2-MariaDB-1~trusty-wsrep-log\n\u003E db1-masterdb:\n\u003E     10.1.2-MariaDB-1~trusty-wsrep-log\n```\n\nEach db-type VM MySQL\u002FMariaDB\u002FPercona server will have a _different_ database\nmaintenance users defined in `\u002Fetc\u002Fmysql\u002Fdebian.cnf`.\n\nMake sure you don't overwrite them unless you import everything all at once,\nincluding the users and their grants. 11. Check that each db VMs has their SSL\ncertificate generated by Salt\n\n11. Check that each db VMs has their SSL certificate generated by Salt\n\n```bash\nsalt -G 'roles:db' cmd.run 'ls \u002Fetc\u002Fmysql | grep pem'\n\u003E db2:\n\u003E     ca-cert.pem\n\u003E     ca-key.pem\n\u003E     client-cert.pem\n\u003E     client-key.pem\n\u003E     client-req.pem\n\u003E     server-cert.pem\n\u003E     server-key.pem\n\u003E     server-req.pem\n\u003E db1-masterdb:\n\u003E     ca-cert.pem\n\u003E     ca-key.pem\n\u003E     client-cert.pem\n\u003E     client-key.pem\n\u003E     client-req.pem\n\u003E     server-cert.pem\n\u003E     server-key.pem\n\u003E     server-req.pem\n```\n\nEach file is a certificate so they can use to make replication through SSL.\n\n### Now on each database server;\n\n1. Connect to both db nodes using the salt as a Jump Host\n\n   ```bash\n   ssh masterdb.production.wpdn\n   ssh db2.production.wpdn\n   ```\n\n2. Get to the MySQL\u002FMariaDB\u002FPercona prompt on each VMs.\n\nIf you are used with terminal screens that allows to keep sessions running even\nif you get disconnected, that would be ideal. We never know if the connection\nhangs.\n\nOn WebPlatform system we do have `screen` but `tmux` can do too.\n\n    mysql\n\n3. Check if SSL is enabled on both MySQL\u002FMariaDB\u002FPercona servers\n\n   ```\n   \u003E MariaDB [(none)]\u003E SHOW VARIABLES like '%ssl%';\n   \u003E +---------------+----------------------------+\n   \u003E | Variable_name | Value                      |\n   \u003E +---------------+----------------------------+\n   \u003E | have_openssl  | YES                        |\n   \u003E | have_ssl      | YES                        |\n   \u003E | ssl_ca        | \u002Fetc\u002Fmysql\u002Fca-cert.pem     |\n   \u003E | ssl_capath    |                            |\n   \u003E | ssl_cert      | \u002Fetc\u002Fmysql\u002Fserver-cert.pem |\n   \u003E | ssl_cipher    | DHE-RSA-AES256-SHA         |\n   \u003E | ssl_crl       |                            |\n   \u003E | ssl_crlpath   |                            |\n   \u003E | ssl_key       | \u002Fetc\u002Fmysql\u002Fserver-key.pem  |\n   \u003E +---------------+----------------------------+\n   ```\n\n4. Generate SSL certificates for MySQL\u002FMariaDB\u002FPercona server, see [this\n   gist][2] on how to do it.\n5. Places to double check; To see which config keys sets what's shown in the\n   previous screen, take a look in the VMs `\u002Fetc\u002Fmysql\u002Fconf.d\u002F` folders with\n   similar entries.\n\n- `bind-address` is what allows us to communicate between servers, before MySQL\n  5.5 we had `skip-networking` but now only a `bind-address` is sufficient. Make\n  sure that your security groups allows only local network connections though.\n- `server_id` MUST be with a different number for each nodes. Make sure no\n  server has the same number.\n\n  ```ini\n  [mysqld]\n  bind-address = 0.0.0.0\n  log-basename=mariadbrepl\n  log-bin\n  binlog-format=row\n  server_id=1\n  ssl\n  ssl-cipher=DHE-RSA-AES256-SHA\n  ssl-ca=\u002Fetc\u002Fmysql\u002Fca-cert.pem\n  ssl-cert=\u002Fetc\u002Fmysql\u002Fserver-cert.pem\n  ssl-key=\u002Fetc\u002Fmysql\u002Fserver-key.pem\n  [client]\n  ssl\n  ssl-cert=\u002Fetc\u002Fmysql\u002Fclient-cert.pem\n  ssl-key=\u002Fetc\u002Fmysql\u002Fclient-key.pem\n  ```\n\n6.  **From the database master** (a.k.a \"masterdb\"), Get the replication log\n    position; We'll need the `File` and `Position` values to setup the\n    replication node.\n\n    ```\n    MariaDB [(none)]\u003E show master status;\n    \u003E +------------------------+----------+--------------+------------------+\n    \u003E | File                   | Position | Binlog_Do_DB | Binlog_Ignore_DB |\n    \u003E +------------------------+----------+--------------+------------------+\n    \u003E | mariadbrepl-bin.000002 |      644 |              |                  |\n    \u003E +------------------------+----------+--------------+------------------+\n    ```\n\n7.  Configure the `masterdb` to accept replication users. **From the salt\n    master**\n\n```bash\nsalt -G 'roles:masterdb' mysql.user_create replication_user '%' foobarbaz\n```\n\nNOTE: My salt states script creates a grain in `\u002Fetc\u002Fsalt\u002Fgrains` with the\nfollowing data;\n\n```yaml\nroles:\n  - masterdb\n```\n\nAlternatively, you could call the VM `db1-masterdb`, use a [small python script\nthat'll parse the information for you and make it a **grain**\nautomatically][3]. 8. **Back to the masterdb VM**, check if the user exists,\nensure SSL is required\n\n```\nMariaDB [(none)]\u003E show grants for 'replication_user';\n\u003E +---------------------------------------------------------------------------------------+\n\u003E | Grants for replication_user@%                                                         |\n\u003E +---------------------------------------------------------------------------------------+\n\u003E | GRANT REPLICATION SLAVE ON *.* TO 'replication_user'@'%' IDENTIFIED BY PASSWORD '...' |\n\u003E +---------------------------------------------------------------------------------------+\n\nMariaDB [(none)]\u003E GRANT REPLICATION SLAVE ON *.* TO 'replication_user'@'%.local.wpdn' REQUIRE SSL;\nMariaDB [(none)]\u003E GRANT USAGE ON *.* TO 'replication_user'@'%' REQUIRE SSL;\n\nMariaDB [(none)]\u003E SELECT User,Host,Repl_slave_priv,Repl_client_priv,ssl_type,ssl_cipher from mysql.user where User = 'replication_user';\n\u003E +------------------+--------------+-----------------+------------------+----------+\n\u003E | User             | Host         | Repl_slave_priv | Repl_client_priv | ssl_type |\n\u003E +------------------+--------------+-----------------+------------------+----------+\n\u003E | replication_user | %.local.wpdn | Y               | N                | ANY      |\n\u003E +------------------+--------------+-----------------+------------------+----------+\n```\n\n9. On the secondary db VM, in mysql prompt, setup the initial `CHANGE MASTER`\n   statement;\n\n   ```\n   CHANGE MASTER TO\n     MASTER_HOST='masterdb.local.wpdn',\n     MASTER_USER='replication_user',\n     MASTER_PASSWORD='foobarbaz',\n     MASTER_PORT=3306,\n     MASTER_LOG_FILE='mariadbrepl-bin.000002',\n     MASTER_LOG_POS=644,\n     MASTER_CONNECT_RETRY=10,\n     MASTER_SSL=1,\n     MASTER_SSL_CA='\u002Fetc\u002Fmysql\u002Fca-cert.pem',\n     MASTER_SSL_CERT='\u002Fetc\u002Fmysql\u002Fclient-cert.pem',\n     MASTER_SSL_KEY='\u002Fetc\u002Fmysql\u002Fclient-key.pem';\n   ```\n\n### Checking if it worked\n\nFrom one of the secondary servers, look for success indicators:\n\n- `Seconds_Behind_Master` says **0**,\n- `Slave_IO_State` says **Waiting for master to send event**\n\n  ```\n  MariaDB [wpstats]\u003E show slave status\\G\n  *************************** 1. row ***************************\n                 Slave_IO_State: Waiting for master to send event\n                    Master_Host: masterdb.local.wpdn\n                    Master_User: replication_user\n                    Master_Port: 3306\n                  Connect_Retry: 10\n                Master_Log_File: mariadbrepl-bin.000066\n            Read_Master_Log_Pos: 19382112\n                 Relay_Log_File: mariadbrepl-relay-bin.000203\n                  Relay_Log_Pos: 19382405\n          Relay_Master_Log_File: mariadbrepl-bin.000066\n               Slave_IO_Running: Yes\n              Slave_SQL_Running: Yes\n                Replicate_Do_DB:\n            Replicate_Ignore_DB:\n             Replicate_Do_Table:\n         Replicate_Ignore_Table:\n        Replicate_Wild_Do_Table:\n    Replicate_Wild_Ignore_Table:\n                     Last_Errno: 0\n                     Last_Error:\n                   Skip_Counter: 0\n            Exec_Master_Log_Pos: 19382112\n                Relay_Log_Space: 19382757\n                Until_Condition: None\n                 Until_Log_File:\n                  Until_Log_Pos: 0\n             Master_SSL_Allowed: Yes\n             Master_SSL_CA_File: \u002Fetc\u002Fmysql\u002Fca-cert.pem\n             Master_SSL_CA_Path:\n                Master_SSL_Cert: \u002Fetc\u002Fmysql\u002Fclient-cert.pem\n              Master_SSL_Cipher:\n                 Master_SSL_Key: \u002Fetc\u002Fmysql\u002Fclient-key.pem\n          Seconds_Behind_Master: 0\n  Master_SSL_Verify_Server_Cert: No\n                  Last_IO_Errno: 0\n                  Last_IO_Error:\n                 Last_SQL_Errno: 0\n                 Last_SQL_Error:\n    Replicate_Ignore_Server_Ids:\n               Master_Server_Id: 1\n                 Master_SSL_Crl: \u002Fetc\u002Fmysql\u002Fca-cert.pem\n             Master_SSL_Crlpath:\n                     Using_Gtid: No\n                    Gtid_IO_Pos:\n        Replicate_Do_Domain_Ids:\n    Replicate_Ignore_Domain_Ids:\n  1 row in set (0.00 sec)\n  ```\n\n### Managing users\n\nIn the end, since replication is active, you can add users to your system and\nall nodes will get the privileges.\n\nThe way I work is that I can use Salt stack states to add privileges in my\nstates (more details soon) or I can use a few salt commands from my salt master\nand send them to the database `masterdb` VM.\n\n```\nsalt -G 'roles:masterdb' mysql.db_create 'accounts_oauth' 'utf8' 'utf8_general_ci'\nsalt -G 'roles:masterdb' mysql.user_create 'accounts' '%' 'barfoo'\nsalt -G 'roles:masterdb' mysql.grant_add 'ALL PRIVILEGES' 'accounts_oauth.*' 'accounts' â€˜%â€™\n```\n\n### References\n\n- http:\u002F\u002Fdev.mysql.com\u002Fdoc\u002Frefman\u002F5.7\u002Fen\u002Freplication-solutions-ssl.html\n- https:\u002F\u002Fmariadb.com\u002Fkb\u002Fen\u002Fmariadb\u002Fdocumentation\u002Fmanaging-mariadb\u002Freplication\u002Fstandard-replication\u002Fsetting-up-replication\u002F\n\n\u003C!--#TODO-Import-Code-From-External--\u003E\n\n[0]: https:\u002F\u002Fdocs.saltproject.io\u002Fen\u002Flatest\u002Ftopics\u002Freactor\u002F\n[1]: https:\u002F\u002Fgist.github.com\u002FWebPlatformDocs\u002F563cb12326b92b22a452\n[2]: https:\u002F\u002Fgist.github.com\u002FWebPlatformDocs\u002Fdee3c76a88b3c44da564\n[3]: https:\u002F\u002Fgist.github.com\u002Frenoirb\u002Fb2e0222ad52e5d453298\n[4]: \u002Fcdn-cgi\u002Fl\u002Femail-protection\n[blog-config-jinja]:\n  https:\u002F\u002Fgithub.com\u002Fwebplatform\u002Fsalt-states\u002Fblob\u002F20150608\u002Fcode\u002Ffiles\u002Fblog\u002Flocal.php.jinja\n  'code\u002Ffiles\u002Fblog\u002Flocal.php.jinja on GitHub.com\u002Fwebplatform\u002Fsalt-states as of 2015-06-08'\n[blog-config-state]:\n  https:\u002F\u002Fgithub.com\u002Fwebplatform\u002Fsalt-states\u002Fblob\u002F20150608\u002Fcode\u002Fblog.sls#L48-L55\n  'code\u002Fblog.sls on GitHub.com\u002Fwebplatform\u002Fsalt-states as of 2015-06-08'\n[salt-userdata]:\n  https:\u002F\u002Fgithub.com\u002Fwebplatform\u002Fops\u002Fblob\u002Ff6e0390a\u002Fsalt-master\u002Fsalt-userdata.yml\n  'salt-master\u002Fsalt-userdata.yml on GitHub.com\u002Fwebplatform\u002Fops as of 2015-06-08'\n[salt-pillar-infra]:\n  https:\u002F\u002Fgithub.com\u002Fwebplatform\u002Fsalt-pillar\u002Ftree\u002F3d718578\u002Finfra\n  'infra\u002F* on GitHub.com\u002Fwebplatform\u002Fsalt-pillar as of 2015-06-08'\n[wpd-ops-salt]:\n  https:\u002F\u002Fgithub.com\u002Fwebplatform\u002Fops\u002Fblob\u002Ff6e0390a\u002Fsalt-master\n  'salt-master\u002F* on GitHub.com\u002Fwebplatform\u002Fops as of 2015-06-08'\n[wpd-infra-replacing-vm]:\n  https:\u002F\u002Fwebplatform.github.io\u002Fdocs\u002FWPD\u002FInfrastructure\u002Fprocedures\u002FReplacing_a_VM\u002F\n  'WebPlatform Docs WPD\u002FInfrastructure\u002F Replacing a VM'\n[wpd-infra-managing-mysql-replication]:\n  https:\u002F\u002Fwebplatform.github.io\u002Fdocs\u002FWPD\u002FInfrastructure\u002Fprocedures\u002FManaging_MySQL_replication\u002F\n  'WebPlatform Docs WPD\u002FInfrastructure\u002F Managing MySQL replication'\n",dir:"\u002Fblog\u002F2015\u002F01",path:"\u002Fblog\u002F2015\u002F01\u002Fcreate-mariadb-cluster-replication-ssl-salt-stack",extension:".md",slug:bT,createdAt:bU,updatedAt:bU,category:aE},coverImage:{toc:[],body:{type:aq,children:[]},text:""},month:"01",next:{title:"Quelques bouts de code pour automatiser le dÃ©ploiement",locale:"fr-CA",path:"\u002Fblog\u002F2015\u002F01\u002Fquelques-bouts-de-code-pour-automatiser-le-deploiement",slug:"quelques-bouts-de-code-pour-automatiser-le-deploiement"},preamble:{toc:[],body:{type:aq,children:[{type:b,tag:h,props:{},children:[{type:a,value:"The following might still work if all software versions are still available in the exact versions ranges they were when initially published.\nPart of this article was written while maintaining WebPlatformâ€™s Infrastructure maintenance. Mostly "},{type:b,tag:u,props:{href:"https:\u002F\u002Fwebplatform.github.io\u002Fdocs\u002FWPD\u002FInfrastructure\u002Fprocedures\u002FReplacing_a_VM\u002F",rel:[y,z,A],target:B},children:[{type:a,value:"in "},{type:b,tag:U,props:{},children:[{type:a,value:bV}]},{type:a,value:o},{type:b,tag:H,props:{},children:[{type:a,value:"Replacing a VM"}]}]},{type:a,value:", and "},{type:b,tag:u,props:{href:"https:\u002F\u002Fwebplatform.github.io\u002Fdocs\u002FWPD\u002FInfrastructure\u002Fprocedures\u002FManaging_MySQL_replication\u002F",rel:[y,z,A],target:B},children:[{type:b,tag:U,props:{},children:[{type:a,value:bV}]},{type:a,value:o},{type:b,tag:H,props:{},children:[{type:a,value:"Managing  MariaDB replication"}]}]}]}]},text:aF},prettyfiedTemporalDate:{prettified:"Wednesday, January 28, 2015",temporalDate:"2015-01-28"},prev:{locale:aD,title:"Why would I NOT use my own framework and how I sell usage of Symfony2 and other current PHP 5.3+ goodies to my client",path:"\u002Fblog\u002F2012\u002F11\u002Fwhy-would-i-not-use-my-own-framework-and-how-i-sell-usage-of-symfony2-and-other-current-php-5-3-goodies-to-my-client",slug:"why-would-i-not-use-my-own-framework-and-how-i-sell-usage-of-symfony2-and-other-current-php-5-3-goodies-to-my-client"},slug:bT,year:"2015"}],fetch:[],mutations:void 0}}("text","element","span","token","\n","punctuation","code","p","-","operator","li","key","\u003E",":"," ","atrule","div","nuxt-content-highlight","pre","line-numbers","a","|","string","\\","nofollow","noopener","noreferrer","_blank","parameter","variable","=","true","language-bash","strong","ol","function","attr-name","value","attr-value","comment","number",-1,"icon","icon-link","     ",3,"em","\n  ",",","language-text","h3","important","define","(","single-quoted-string","double-quoted-string",")",";","ul","boolean"," salt",false,"language-yaml"," apt","\n      ","{","[","]","}",2,"root"," grep ","q ","\n     ","10.10","\n    ","masterdb","2014.7","salt ","-G","bind-address","https:\u002F\u002Frenoirboulanger.com\u002Fblog\u002F2015\u002F01\u002Fcreate-mariadb-cluster-replication-ssl-salt-stack\u002F","Create a MariaDB cluster with replication over SSL with Salt Stack","en-CA","projects","The following might still work if all software versions are still available in the exact versions ranges they were when initially published.\nPart of this article was written while maintaining WebPlatformâ€™s Infrastructure maintenance. Mostly [in *WPD\u002FInfrastructure\u002Fprocedures\u002F* **Replacing a VM**](https:\u002F\u002Fwebplatform.github.io\u002Fdocs\u002FWPD\u002FInfrastructure\u002Fprocedures\u002FReplacing_a_VM\u002F), and [*WPD\u002FInfrastructure\u002Fprocedures\u002F* **Managing  MariaDB replication**](https:\u002F\u002Fwebplatform.github.io\u002Fdocs\u002FWPD\u002FInfrastructure\u002Fprocedures\u002FManaging_MySQL_replication\u002F)\n","changing-mariadb-replication-master","Changing MariaDB replication master","procedure","Procedure","assumptions","Assumptions","from-the-salt-master-initiate-a-few-vms-to-use-for-your-database-cluster","From the salt-master, initiate a few VMs to use for your database cluster","now-on-each-database-server","Now on each database server;","checking-if-it-worked","Checking if it worked","managing-users","Managing users","references","References","h2","nova","userdata.txt","app-alert-box","While migrating this article...",".","false","get ","--image"," Ubuntu-14.04-Trusty ","--key_name"," renoirb-production ","--flavor","-y","-a","..",". "," ACTIVE  "," Running     "," private-network","hosts_entries"," www","data\n    ","\n        ","'pillar.get'","language-php","  ","'roles:db'"," db2:\n","10.1",".2-MariaDB-1~trusty-wsrep-log\n"," db1-masterdb:\n","     ca-cert.pem\n","     ca-key.pem\n","     client-cert.pem\n","     client-key.pem\n","     client-req.pem\n","     server-cert.pem\n","     server-key.pem\n","     server-req.pem\n","ssh","server_id","section","section-name","selector","\nssl\n","ssl-cert","ssl-key"," says ","http:\u002F\u002Fdev.mysql.com\u002Fdoc\u002Frefman\u002F5.7\u002Fen\u002Freplication-solutions-ssl.html","https:\u002F\u002Fmariadb.com\u002Fkb\u002Fen\u002Fmariadb\u002Fdocumentation\u002Fmanaging-mariadb\u002Freplication\u002Fstandard-replication\u002Fsetting-up-replication\u002F","create-mariadb-cluster-replication-ssl-salt-stack","2024-10-24T19:50:04.929Z","WPD\u002FInfrastructure\u002Fprocedures\u002F")));