__NUXT_JSONP__("/blog/2020/02/data-driven-ui", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS,aT,aU,aV,aW,aX){return {data:[{},{},{},{canonical:null,content:{title:"Data Driven UI",locale:X,created:ag,updated:ag,status:"publish",revising:false,categories:[ah],tags:["frontend","architecture"],description:"Research summary on experiments made in 2018 and 2019",preamble:{disable:ai,text:k},toc:[{id:aj,depth:Y,text:ak},{id:al,depth:Y,text:am},{id:an,depth:Y,text:ao},{id:ap,depth:3,text:G}],body:{type:Z,children:[{type:b,tag:j,props:{},children:[{type:a,value:"The following is a summary of research I’ve made while attempting to build a web\napplication where each views would be generated based on how to organize data\nand how to organize its visualization."}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"The idea of separating data from HTML markup isn’t new, there has been many\nattempts"}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"It is a follow up about one of the many tweets where I’ve made allusion about\nthe same idea."}]},{type:a,value:e},{type:b,tag:"app-twitter-quote",props:{tweet:"1134646209392648193"},children:[{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"I just came up with my shortest summary for leveraging Vue,React,Svelte;\n\""},{type:b,tag:m,props:{href:_,rel:[s,t,u],target:v},children:[{type:a,value:"X as a UI Runtime"}]},{type:a,value:$}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"UI generated by code that's reading data, that's describing views\nembedded with metadata about what and how to get content for itself."}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"Thanks\n"},{type:b,tag:m,props:{href:"https:\u002F\u002Ftwitter.com\u002Fdan_abramov?ref_src=twsrc%5Etfw"},children:[{type:a,value:aq}]},{type:a,value:"\nfor your article "},{type:b,tag:m,props:{href:_,rel:[s,t,u],target:v},children:[{type:a,value:"overreacted.io\u002Freact-as-a-ui-runtime"}]}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"The article from "},{type:b,tag:m,props:{href:_,rel:[s,t,u],target:v},children:[{type:b,tag:H,props:{},children:[{type:a,value:aq}]},{type:a,value:", titled \""},{type:b,tag:r,props:{},children:[{type:a,value:"React as a UI\nRuntime"}]},{type:a,value:$}]},{type:a,value:" and "},{type:b,tag:m,props:{href:"https:\u002F\u002Fmedium.com\u002F@harin76\u002Fgenerate-vue-js-components-from-a-json-javascript-dom-structure-a76534478d15",rel:[s,t,u],target:v},children:[{type:a,value:"Generate Vue.js components from JSON DOM\nStructure"}]},{type:a,value:"."}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"At first, I "},{type:b,tag:m,props:{href:"https:\u002F\u002Fjsbin.com\u002Fvecufob\u002Fedit?js,output",rel:[s,t,u],target:v},children:[{type:a,value:"experimented with this JSFiddle"}]},{type:a,value:", then, I\nimplemented a more complete solution allowing me to keep memory a dataset (i.e.\nfetch once) in a given shape, and plug in how to assemble (i.e. change shape on\nscreen, without re-fetching). Leveraging Vue.js’ design."}]},{type:a,value:e},{type:b,tag:P,props:{id:aj},children:[{type:b,tag:m,props:{href:"#description",ariaHidden:w,tabIndex:x},children:[{type:b,tag:c,props:{className:[y,z]},children:[]}]},{type:a,value:ak}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"Most FrontEnd tutorials and literature explains how to manually stitch HTML or\nJSX (now with React) together to make a view."}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"In most examples they show how to display values from numbers or strings. As\nstrings. But rarely ways of \"dressing up\" more than one properties together\ndynamically."}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"That is also true for more advanced \"component library\" where we might want to\nre-use the same application layout for completely separate products. Not all\nprojects uses exactly the same stack."}]},{type:a,value:e},{type:b,tag:P,props:{id:al},children:[{type:b,tag:m,props:{href:"#1-value-components",ariaHidden:w,tabIndex:x},children:[{type:b,tag:c,props:{className:[y,z]},children:[]}]},{type:a,value:am}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"Components used to dress up complex values such as a circle with color. A date,\nwhere we plug in the user's locale and time zone, etc."}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"Here, shown inside an \"UI-Value\" project where we're publishing how to display a\nvalue."}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"We can use Storybook to work and visualize those components."}]},{type:a,value:e},{type:b,tag:A,props:{style:aa},children:[{type:a,value:e},{type:b,tag:Q,props:{figcaption:k,src:"~\u002Fassets\u002Fcontent\u002Fblog\u002F2020\u002F02\u002Fstorybook-value-number.png"},children:[{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"Notice the documentation for other developers to consume."}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:Q,props:{figcaption:k,src:"~\u002Fassets\u002Fcontent\u002Fblog\u002F2020\u002F02\u002Fstorybook-value-date.png"},children:[{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"We can leverage Storybook’s \"knobs\" to visualize possible configuration options."}]},{type:a,value:e}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:P,props:{id:an},children:[{type:b,tag:m,props:{href:"#2-displayunit-and-dataviewparent-pattern",ariaHidden:w,tabIndex:x},children:[{type:b,tag:c,props:{className:[y,z]},children:[]}]},{type:a,value:ao}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"Which allows us to keep memory a dataset in a given shape, and plug in how to\nassemble."}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"Making views change completely by telling use this dataset (e.g. Vuex Store\nmodule in "},{type:b,tag:n,props:{},children:[{type:a,value:"foo\u002Fbar\u002Fbaz"}]},{type:a,value:" in "},{type:b,tag:n,props:{},children:[{type:a,value:ar}]},{type:a,value:"), and just flip which "},{type:b,tag:n,props:{},children:[{type:a,value:"DisplayUnitCollection"}]},{type:a,value:"\nto use and\u002For which top level "},{type:b,tag:n,props:{},children:[{type:a,value:"DataView*"}]},{type:a,value:" component."}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"For example,"}]},{type:a,value:e},{type:b,tag:"blockquote",props:{},children:[{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"I want to put the contents of each rows’s content property inside a\n"},{type:b,tag:r,props:{},children:[{type:a,value:"something"}]},{type:a,value:" value component."}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"And we can use that idea to describe a view. Such as a table with data."}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"A "},{type:b,tag:r,props:{},children:[{type:a,value:as}]},{type:a,value:" can be seen as a descriptor to tell properties we want and how\nto organize the data, and with which we can pass into a \""},{type:b,tag:r,props:{},children:[{type:a,value:G}]},{type:a,value:"\"."}]},{type:a,value:e},{type:b,tag:at,props:{title:as},children:[{type:a,value:p},{type:b,tag:I,props:{label:"As words",active:ab},children:[{type:a,value:e},{type:b,tag:A,props:{className:[J]},children:[{type:b,tag:K,props:{className:[L,"language-markdown"]},children:[{type:b,tag:n,props:{},children:[{type:b,tag:c,props:{className:[d,ac,f]},children:[{type:a,value:l}]},{type:a,value:" The first column to use the each rows’s \""},{type:b,tag:c,props:{className:[d,au,n,av]},children:[{type:a,value:"`task_description`"}]},{type:a,value:"\" property as\n  value, and use \"Task\" as a label on top of the column\n"},{type:b,tag:c,props:{className:[d,ac,f]},children:[{type:a,value:l}]},{type:a,value:" The 2nd column to be labelled \"Status\", that is sortable, sorted by the value\n  of \""},{type:b,tag:c,props:{className:[d,au,n,av]},children:[{type:a,value:"`completionProgress`"}]},{type:a,value:"\" property, for each row cell, I want a\n  \"progress-trinary\" component.\n"},{type:b,tag:c,props:{className:[d,ac,f]},children:[{type:a,value:l}]},{type:a,value:" The last column would be the date and time of the event in the current user's\n  locale and time zone\n"}]}]}]},{type:a,value:p}]},{type:a,value:p},{type:b,tag:I,props:{label:"As Data"},children:[{type:a,value:e},{type:b,tag:A,props:{className:[J]},children:[{type:b,tag:K,props:{className:[L,R]},children:[{type:b,tag:n,props:{},children:[{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:"headings"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:p},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:l}]},{type:a,value:k},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:M}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:k},{type:b,tag:c,props:{className:[d,S]},children:[{type:a,value:"'task.label'"}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:"prop"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:" task_description\n    "},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:T}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:" router"},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:l}]},{type:a,value:"link\n      "},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:"params"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:"route"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:" task"},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:l}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:l}]},{type:a,value:"detail\n      "},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:V}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:" id\n  "},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:l}]},{type:a,value:k},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:M}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:k},{type:b,tag:c,props:{className:[d,S]},children:[{type:a,value:"'task.status'"}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:"sortable"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:k},{type:b,tag:c,props:{className:[d,"boolean","important"]},children:[{type:a,value:w}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:"sortBy"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:" completionProgress\n    "},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:T}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:l}]},{type:a,value:"trinary\n      "},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:ad}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:ax},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:l}]},{type:a,value:k},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:M}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:k},{type:b,tag:c,props:{className:[d,S]},children:[{type:a,value:"'task.completionState'"}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:T}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:l}]},{type:a,value:"bar\n      "},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:ad}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:ax},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:l}]},{type:a,value:k},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:M}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:k},{type:b,tag:c,props:{className:[d,S]},children:[{type:a,value:"'date.createdAt'"}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:T}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:" date\n      "},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:ad}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:" CreatedAt\n"}]}]}]},{type:a,value:p}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"With the description of the view, we can then pass some context and data and get\na listing view."}]},{type:a,value:e},{type:b,tag:at,props:{title:"Context data"},children:[{type:a,value:p},{type:b,tag:I,props:{label:"The Data",active:ab},children:[{type:a,value:e},{type:b,tag:A,props:{className:[J]},children:[{type:b,tag:K,props:{className:[L,R]},children:[{type:b,tag:n,props:{},children:[{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:ar}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:p},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:l}]},{type:a,value:k},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:ay}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:k},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:ae}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:az}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:" Sending notification\n    "},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:aA}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:k},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:"1580798072"}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:V}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:aB},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:"123"}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:aC}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:" aaa"},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:l}]},{type:a,value:"bbb"},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:l}]},{type:a,value:"ccc\n  "},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:l}]},{type:a,value:k},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:ay}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:k},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:O}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:az}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:" Updating dependencies\n    "},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:aA}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:k},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:"1580794472"}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:V}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:aB},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:"456"}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:aC}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:" ddd"},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:l}]},{type:a,value:"eee"},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:l}]},{type:a,value:"fff\n    "},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:aD}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:k},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:"1"}]},{type:a,value:e}]}]}]},{type:a,value:p}]},{type:a,value:p},{type:b,tag:I,props:{label:"The current user’s state"},children:[{type:a,value:e},{type:b,tag:A,props:{className:[J]},children:[{type:b,tag:K,props:{className:[L,R]},children:[{type:b,tag:n,props:{},children:[{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:"session"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:p},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:"locale"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:" en"},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:l}]},{type:a,value:"CA\n  "},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:"timeZone"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:" America\u002FMontreal\n"}]}]}]},{type:a,value:p}]},{type:a,value:p},{type:b,tag:I,props:{label:"Applicable i18n translation"},children:[{type:a,value:e},{type:b,tag:A,props:{className:[J]},children:[{type:b,tag:K,props:{className:[L,R]},children:[{type:b,tag:n,props:{},children:[{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:"i18n"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:p},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:"messages"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:"en"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:"task"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:M}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:" Task\n        "},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:"completionState"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:" Progress\n        "},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:aD}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:" Status\n      "},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:"date"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:"createdAt"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:" Creation Date\n"}]}]}]},{type:a,value:p}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:aE,props:{id:ap},children:[{type:b,tag:m,props:{href:"#dataviewparent",ariaHidden:w,tabIndex:x},children:[{type:b,tag:c,props:{className:[y,z]},children:[]}]},{type:a,value:G}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"The \""},{type:b,tag:r,props:{},children:[{type:a,value:G}]},{type:a,value:"\" are basically different ways of \"dressing up\" views."}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"One \""},{type:b,tag:r,props:{},children:[{type:a,value:G}]},{type:a,value:"\" could be for listing a collection of objects, and another\nwould be to display detail of only one entry."}]},{type:a,value:e},{type:b,tag:aF,props:{id:"list-of-all-entries"},children:[{type:b,tag:m,props:{href:"#list-of-all-entries",ariaHidden:w,tabIndex:x},children:[{type:b,tag:c,props:{className:[y,z]},children:[]}]},{type:a,value:aG}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"In the example above, we could tell to list all entries as a table where we know\nthe name and label for each columns, and how to format each rows."}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"And using the same pattern, we could describe a more detailed view for one of\nthe currently selected item."}]},{type:a,value:"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{type:b,tag:aH,props:{},children:[{type:b,tag:aI,props:{},children:[{type:b,tag:B,props:{},children:[{type:b,tag:E,props:{},children:[{type:a,value:aJ}]},{type:b,tag:E,props:{},children:[{type:a,value:aK}]},{type:b,tag:E,props:{},children:[{type:a,value:aL}]},{type:b,tag:E,props:{},children:[{type:a,value:aM}]}]}]},{type:b,tag:aN,props:{},children:[{type:b,tag:B,props:{},children:[{type:b,tag:o,props:{},children:[{type:a,value:aO}]},{type:b,tag:o,props:{},children:[{type:b,tag:c,props:{style:aP},children:[{type:a,value:aQ}]}]},{type:b,tag:o,props:{},children:[{type:b,tag:af,props:{max:O,value:ae},children:[{type:a,value:aR}]}]},{type:b,tag:o,props:{},children:[{type:a,value:"Tue Feb 04 2020 at 01:34"}]}]},{type:b,tag:B,props:{},children:[{type:b,tag:o,props:{},children:[{type:a,value:"Updating dependencies"}]},{type:b,tag:o,props:{},children:[{type:b,tag:c,props:{style:"size:1.3em;"},children:[{type:a,value:"✅"}]}]},{type:b,tag:o,props:{},children:[{type:b,tag:af,props:{max:O,value:O},children:[{type:a,value:" 100% "}]}]},{type:b,tag:o,props:{},children:[{type:a,value:"Tue Feb 04 2020 at 00:34"}]}]}]}]},{type:a,value:e},{type:b,tag:aF,props:{id:"detail-of-one-entry"},children:[{type:b,tag:m,props:{href:"#detail-of-one-entry",ariaHidden:w,tabIndex:x},children:[{type:b,tag:c,props:{className:[y,z]},children:[]}]},{type:a,value:"Detail of one entry"}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"Imagine the rows are the same as the example above, but where we want to display\neach properties on a table where the label is on the left, and the value on the\nright."}]},{type:a,value:"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{type:b,tag:aH,props:{},children:[{type:b,tag:aI,props:{},children:[{type:b,tag:B,props:{},children:[{type:b,tag:E,props:{},children:[{type:a,value:"Label"}]},{type:b,tag:E,props:{},children:[{type:a,value:"Property value"}]}]}]},{type:b,tag:aN,props:{},children:[{type:b,tag:B,props:{},children:[{type:b,tag:o,props:{},children:[{type:b,tag:H,props:{},children:[{type:a,value:aJ}]}]},{type:b,tag:o,props:{},children:[{type:a,value:aO}]}]},{type:b,tag:B,props:{},children:[{type:b,tag:o,props:{},children:[{type:b,tag:H,props:{},children:[{type:a,value:aK}]}]},{type:b,tag:o,props:{},children:[{type:b,tag:c,props:{style:aP},children:[{type:a,value:aQ}]}]}]},{type:b,tag:B,props:{},children:[{type:b,tag:o,props:{},children:[{type:b,tag:H,props:{},children:[{type:a,value:aL}]}]},{type:b,tag:o,props:{},children:[{type:b,tag:af,props:{max:O,value:ae},children:[{type:a,value:aR}]}]}]},{type:b,tag:B,props:{},children:[{type:b,tag:o,props:{},children:[{type:b,tag:H,props:{},children:[{type:a,value:aM}]}]},{type:b,tag:o,props:{},children:[{type:a,value:"2020-02-04"}]}]}]}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"So, we can use the same data, and change how to display that data independently."}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"With this system in place, we could setup a completely different way of\nvisualizing with the same data."}]},{type:a,value:e},{type:b,tag:A,props:{style:aa},children:[{type:a,value:e},{type:b,tag:Q,props:{figcaption:k,src:"~\u002Fassets\u002Fcontent\u002Fblog\u002F2020\u002F02\u002Fstorybook-data-view-table.png"},children:[{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:aG}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:aS},{type:b,tag:r,props:{},children:[{type:a,value:aT}]},{type:a,value:" component from which we can iterate and list all\nentries, and optionally make them clickable to get to the \"detail\" view."}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:Q,props:{figcaption:k,src:"~\u002Fassets\u002Fcontent\u002Fblog\u002F2020\u002F02\u002Fdata-view-item-table.png"},children:[{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"Detail of one Entry"}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:aS},{type:b,tag:r,props:{},children:[{type:a,value:aT}]},{type:a,value:" component where the label is on the left, and the\nproperty is formatted on the right. \""},{type:b,tag:r,props:{},children:[{type:a,value:"DataViewLabelProp"}]},{type:a,value:$}]},{type:a,value:e}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:A,props:{style:aa},children:[{type:a,value:e},{type:b,tag:P,props:{id:"3-re-usble-common-web-application-layout-applayout"},children:[{type:b,tag:m,props:{href:"#3-re-usble-common-web-application-layout-applayout",ariaHidden:w,tabIndex:x},children:[{type:b,tag:c,props:{className:[y,z]},children:[]}]},{type:a,value:"3. Re-Usble common Web Application Layout (\"AppLayout\")"}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"From one repository, sandbox to work on all Application Layout (or \"Chrome\")\ncommon in a web app; user icon, user options, sidebar, etc."}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"Output is a package we can publish and import from a host project: e.g. a nuxt\nproject, a small vue project with vuex"}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"(note that the merge request is no longer up to the same stage as shown in the\nfollowing screenshots for packaging)"}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:b,tag:m,props:{href:"https:\u002F\u002Fgithub.com\u002Frenoirb\u002Fvue-admin-template\u002Fpull\u002F1",rel:[s,t,u],target:v},children:[{type:a,value:"experiment merge-request"}]}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"In the following screenshot, we can see that "},{type:b,tag:n,props:{},children:[{type:a,value:"AppLayout"}]},{type:a,value:" contains many slots\nthat we can configure at import time."}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"In the screenshots above, you’re looking at the process of themeing\n"},{type:b,tag:m,props:{href:aU,rel:[s,t,u],target:v},children:[{type:a,value:aV}]},{type:a,value:"\nto look like the WebApp I’m contributing to at my current employer so we can\ntransparently migrate views from legacy."}]},{type:a,value:e},{type:b,tag:aE,props:{id:"example-how-to-make-make-use"},children:[{type:b,tag:m,props:{href:"#example-how-to-make-make-use",ariaHidden:w,tabIndex:x},children:[{type:b,tag:c,props:{className:[y,z]},children:[]}]},{type:a,value:"Example how to make make use"}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"The following is a video where I show\n"},{type:b,tag:m,props:{href:aU,rel:[s,t,u],target:v},children:[{type:a,value:aV}]},{type:a,value:"\nin use, then run the finished \"themed\" version where I package it, and import it\ninside a fresh Nuxt.js pro"}]},{type:a,value:e},{type:b,tag:"ul",props:{},children:[{type:a,value:e},{type:b,tag:F,props:{},children:[{type:a,value:"First minutes shows library I'm importing from"}]},{type:a,value:e},{type:b,tag:F,props:{},children:[{type:a,value:"Middle shows \"frontend-bindings\u002Fvue-app-layout\" as themed version"}]},{type:a,value:e},{type:b,tag:F,props:{},children:[{type:b,tag:n,props:{},children:[{type:a,value:"3:01"}]},{type:a,value:" Notice in "},{type:b,tag:n,props:{},children:[{type:a,value:"\"devDependencies\""}]},{type:a,value:" importing\n"},{type:b,tag:n,props:{},children:[{type:a,value:"@frontend-bindings\u002Fconventions-use-bili"}]}]},{type:a,value:e},{type:b,tag:F,props:{},children:[{type:b,tag:n,props:{},children:[{type:a,value:"4:11"}]},{type:a,value:" Shows build process of packaging"}]},{type:a,value:e},{type:b,tag:F,props:{},children:[{type:b,tag:n,props:{},children:[{type:a,value:"5:39"}]},{type:a,value:" How to import into a new Nuxt.js project a packaged version of the\nvue-app-layout"}]},{type:a,value:e},{type:b,tag:F,props:{},children:[{type:b,tag:n,props:{},children:[{type:a,value:"11:28"}]},{type:a,value:" How to make host Nuxt.js project listen to vue-app-layout \"logout\"\nevent"}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:b,tag:m,props:{href:"https:\u002F\u002Fyoutu.be\u002FNHJiCwLUakE",rel:[s,t,u],target:v,title:"Video on YouTube"},children:[{type:a,value:"Video "},{type:b,tag:r,props:{},children:[{type:a,value:"Publishing and importing vue-app-layout into a Nuxt.js\nproject"}]}]}]},{type:a,value:e}]}]},text:"---\ntitle: Data Driven UI\nlocale: en-CA\ncreated: 2020-02-04\nupdated: 2020-02-04\nstatus: publish\nrevising: false\ncategories:\n  - experiments\ntags:\n  - frontend\n  - architecture\ndescription: Research summary on experiments made in 2018 and 2019\npreamble:\n  disable: true\n  text: ' '\n---\n\n[react-as-ui-runtime]:\n  https:\u002F\u002Foverreacted.io\u002Freact-as-a-ui-runtime\u002F\n  'React as a UI Runtime by Dan Abramov'\n\nThe following is a summary of research I’ve made while attempting to build a web\napplication where each views would be generated based on how to organize data\nand how to organize its visualization.\n\nThe idea of separating data from HTML markup isn’t new, there has been many\nattempts\n\nIt is a follow up about one of the many tweets where I’ve made allusion about\nthe same idea.\n\n\u003Capp-twitter-quote tweet=\"1134646209392648193\"\u003E\n\nI just came up with my shortest summary for leveraging Vue,React,Svelte;\n&quot;[X as a UI Runtime][react-as-ui-runtime]&quot;\n\nUI generated by code that&#39;s reading data, that&#39;s describing views\nembedded with metadata about what and how to get content for itself.\n\nThanks\n\u003Ca href=\"https:\u002F\u002Ftwitter.com\u002Fdan_abramov?ref_src=twsrc%5Etfw\"\u003E@dan_abramov\u003C\u002Fa\u003E\nfor your article [overreacted.io\u002Freact-as-a-ui-runtime][react-as-ui-runtime]\n\n\u003C\u002Fapp-twitter-quote\u003E\n\nThe article from [**@dan_abramov**, titled \"_React as a UI\nRuntime_\"][react-as-ui-runtime] and [Generate Vue.js components from JSON DOM\nStructure][json-dom-structure].\n\n[json-dom-structure]:\n  https:\u002F\u002Fmedium.com\u002F@harin76\u002Fgenerate-vue-js-components-from-a-json-javascript-dom-structure-a76534478d15\n[react-as-ui-runtime]: https:\u002F\u002Foverreacted.io\u002Freact-as-a-ui-runtime\u002F\n[initial-jsfiddle-proto]: https:\u002F\u002Fjsbin.com\u002Fvecufob\u002Fedit?js,output\n\nAt first, I [experimented with this JSFiddle][initial-jsfiddle-proto], then, I\nimplemented a more complete solution allowing me to keep memory a dataset (i.e.\nfetch once) in a given shape, and plug in how to assemble (i.e. change shape on\nscreen, without re-fetching). Leveraging Vue.js’ design.\n\n## Description\n\nMost FrontEnd tutorials and literature explains how to manually stitch HTML or\nJSX (now with React) together to make a view.\n\nIn most examples they show how to display values from numbers or strings. As\nstrings. But rarely ways of \"dressing up\" more than one properties together\ndynamically.\n\nThat is also true for more advanced \"component library\" where we might want to\nre-use the same application layout for completely separate products. Not all\nprojects uses exactly the same stack.\n\n## 1. Value components\n\nComponents used to dress up complex values such as a circle with color. A date,\nwhere we plug in the user's locale and time zone, etc.\n\nHere, shown inside an \"UI-Value\" project where we're publishing how to display a\nvalue.\n\nWe can use Storybook to work and visualize those components.\n\n\u003Cdiv style=\"clear:both;overflow:hidden;\"\u003E\n\n\u003Capp-image figcaption=\" \" src=\"~\u002Fassets\u002Fcontent\u002Fblog\u002F2020\u002F02\u002Fstorybook-value-number.png\"\u003E\n\nNotice the documentation for other developers to consume.\n\n\u003C\u002Fapp-image\u003E\n\n\u003Capp-image figcaption=\" \" src=\"~\u002Fassets\u002Fcontent\u002Fblog\u002F2020\u002F02\u002Fstorybook-value-date.png\"\u003E\n\nWe can leverage Storybook’s \"knobs\" to visualize possible configuration options.\n\n\u003C\u002Fapp-image\u003E\n\n\u003C\u002Fdiv\u003E\n\n## 2. DisplayUnit and DataViewParent pattern\n\nWhich allows us to keep memory a dataset in a given shape, and plug in how to\nassemble.\n\nMaking views change completely by telling use this dataset (e.g. Vuex Store\nmodule in `foo\u002Fbar\u002Fbaz` in `rows`), and just flip which `DisplayUnitCollection`\nto use and\u002For which top level `DataView*` component.\n\nFor example,\n\n\u003E I want to put the contents of each rows’s content property inside a\n\u003E _something_ value component.\n\nAnd we can use that idea to describe a view. Such as a table with data.\n\nA _DisplayUnit_ can be seen as a descriptor to tell properties we want and how\nto organize the data, and with which we can pass into a \"_DataViewParent_\".\n\n\u003Ccode-group title=\"DisplayUnit\"\u003E\n  \u003Ccode-block label=\"As words\" active\u003E\n\n```markdown\n- The first column to use the each rows’s \"`task_description`\" property as\n  value, and use \"Task\" as a label on top of the column\n- The 2nd column to be labelled \"Status\", that is sortable, sorted by the value\n  of \"`completionProgress`\" property, for each row cell, I want a\n  \"progress-trinary\" component.\n- The last column would be the date and time of the event in the current user's\n  locale and time zone\n```\n\n  \u003C\u002Fcode-block\u003E\n  \u003Ccode-block label=\"As Data\"\u003E\n\n```yaml\nheadings:\n  - label: 'task.label'\n    prop: task_description\n    component:\n      type: router-link\n      params:\n        route: task-id-detail\n      props:\n        id: id\n  - label: 'task.status'\n    sortable: true\n    sortBy: completionProgress\n    component:\n      type: progress-trinary\n      props:\n        value: completionProgress\n  - label: 'task.completionState'\n    component:\n      type: progress-bar\n      props:\n        value: completionProgress\n  - label: 'date.createdAt'\n    component:\n      type: date\n      props:\n        value: CreatedAt\n```\n\n  \u003C\u002Fcode-block\u003E\n\u003C\u002Fcode-group\u003E\n\nWith the description of the view, we can then pass some context and data and get\na listing view.\n\n\u003Ccode-group title=\"Context data\"\u003E\n  \u003Ccode-block label=\"The Data\" active\u003E\n\n```yaml\nrows:\n  - completionProgress: 78\n    task_description: Sending notification\n    CreatedAt: 1580798072\n    id: abc-123\n    targetMachine: aaa-bbb-ccc\n  - completionProgress: 100\n    task_description: Updating dependencies\n    CreatedAt: 1580794472\n    id: abc-456\n    targetMachine: ddd-eee-fff\n    status: 1\n```\n\n  \u003C\u002Fcode-block\u003E\n  \u003Ccode-block label=\"The current user’s state\"\u003E\n\n```yaml\nsession:\n  locale: en-CA\n  timeZone: America\u002FMontreal\n```\n\n  \u003C\u002Fcode-block\u003E\n  \u003Ccode-block label=\"Applicable i18n translation\"\u003E\n\n```yaml\ni18n:\n  messages:\n    en:\n      task:\n        label: Task\n        completionState: Progress\n        status: Status\n      date:\n        createdAt: Creation Date\n```\n\n  \u003C\u002Fcode-block\u003E\n\u003C\u002Fcode-group\u003E\n\n### DataViewParent\n\nThe \"_DataViewParent_\" are basically different ways of \"dressing up\" views.\n\nOne \"_DataViewParent_\" could be for listing a collection of objects, and another\nwould be to display detail of only one entry.\n\n#### List of all entries\n\nIn the example above, we could tell to list all entries as a table where we know\nthe name and label for each columns, and how to format each rows.\n\nAnd using the same pattern, we could describe a more detailed view for one of\nthe currently selected item.\n\n| Task                  | Status                              | Progress                                          | Creation Date            |\n| --------------------- | ----------------------------------- | ------------------------------------------------- | ------------------------ |\n| Sending notification  | \u003Cspan style=\"size:1em;\"\u003E⏳\u003C\u002Fspan\u003E   | \u003Cprogress max=\"100\" value=\"78\"\u003E 78% \u003C\u002Fprogress\u003E   | Tue Feb 04 2020 at 01:34 |\n| Updating dependencies | \u003Cspan style=\"size:1.3em;\"\u003E✅\u003C\u002Fspan\u003E | \u003Cprogress max=\"100\" value=\"100\"\u003E 100% \u003C\u002Fprogress\u003E | Tue Feb 04 2020 at 00:34 |\n\n#### Detail of one entry\n\nImagine the rows are the same as the example above, but where we want to display\neach properties on a table where the label is on the left, and the value on the\nright.\n\n| Label             | Property value                                  |\n| ----------------- | ----------------------------------------------- |\n| **Task**          | Sending notification                            |\n| **Status**        | \u003Cspan style=\"size:1em;\"\u003E⏳\u003C\u002Fspan\u003E               |\n| **Progress**      | \u003Cprogress max=\"100\" value=\"78\"\u003E 78% \u003C\u002Fprogress\u003E |\n| **Creation Date** | 2020-02-04                                      |\n\nSo, we can use the same data, and change how to display that data independently.\n\nWith this system in place, we could setup a completely different way of\nvisualizing with the same data.\n\n\u003Cdiv style=\"clear:both;overflow:hidden;\"\u003E\n\n\u003Capp-image figcaption=\" \" src=\"~\u002Fassets\u002Fcontent\u002Fblog\u002F2020\u002F02\u002Fstorybook-data-view-table.png\"\u003E\n\nList of all entries\n\nUsing a top level _DataView_ component from which we can iterate and list all\nentries, and optionally make them clickable to get to the \"detail\" view.\n\n\u003C\u002Fapp-image\u003E\n\n\u003Capp-image figcaption=\" \" src=\"~\u002Fassets\u002Fcontent\u002Fblog\u002F2020\u002F02\u002Fdata-view-item-table.png\"\u003E\n\nDetail of one Entry\n\nUsing a top level _DataView_ component where the label is on the left, and the\nproperty is formatted on the right. \"_DataViewLabelProp_\"\n\n\u003C\u002Fapp-image\u003E\n\n\u003C\u002Fdiv\u003E\n\n\u003Cdiv style=\"clear:both;overflow:hidden;\"\u003E\n\n## 3. Re-Usble common Web Application Layout (\"AppLayout\")\n\nFrom one repository, sandbox to work on all Application Layout (or \"Chrome\")\ncommon in a web app; user icon, user options, sidebar, etc.\n\nOutput is a package we can publish and import from a host project: e.g. a nuxt\nproject, a small vue project with vuex\n\n(note that the merge request is no longer up to the same stage as shown in the\nfollowing screenshots for packaging)\n\n[experiment merge-request](https:\u002F\u002Fgithub.com\u002Frenoirb\u002Fvue-admin-template\u002Fpull\u002F1)\n\nIn the following screenshot, we can see that `AppLayout` contains many slots\nthat we can configure at import time.\n\nIn the screenshots above, you’re looking at the process of themeing\n[PanJiaChen\u002Fvue-admin-template](https:\u002F\u002Fgithub.com\u002FPanJiaChen\u002Fvue-admin-template)\nto look like the WebApp I’m contributing to at my current employer so we can\ntransparently migrate views from legacy.\n\n### Example how to make make use\n\nThe following is a video where I show\n[PanJiaChen\u002Fvue-admin-template](https:\u002F\u002Fgithub.com\u002FPanJiaChen\u002Fvue-admin-template)\nin use, then run the finished \"themed\" version where I package it, and import it\ninside a fresh Nuxt.js pro\n\n- First minutes shows library I'm importing from\n- Middle shows \"frontend-bindings\u002Fvue-app-layout\" as themed version\n- `3:01` Notice in `\"devDependencies\"` importing\n  `@frontend-bindings\u002Fconventions-use-bili`\n- `4:11` Shows build process of packaging\n- `5:39` How to import into a new Nuxt.js project a packaged version of the\n  vue-app-layout\n- `11:28` How to make host Nuxt.js project listen to vue-app-layout \"logout\"\n  event\n\n[Video _Publishing and importing vue-app-layout into a Nuxt.js\nproject_][vue-app-layout]\n\n\u003C\u002Fdiv\u003E\n\n[vue-app-layout]: https:\u002F\u002Fyoutu.be\u002FNHJiCwLUakE 'Video on YouTube'\n",dir:"\u002Fblog\u002F2020\u002F02",path:"\u002Fblog\u002F2020\u002F02\u002Fdata-driven-ui",extension:".md",slug:aW,createdAt:aX,updatedAt:aX,category:ah},coverImage:{toc:[],body:{type:Z,children:[]},text:ab},month:"02",next:{locale:X,title:"Harmonizing how to bundle and package JavaScript\u002FECMAScript features",path:"\u002Fblog\u002F2020\u002F02\u002Fharmonizing-how-to-bundle-and-package-features",slug:"harmonizing-how-to-bundle-and-package-features"},preamble:{toc:[],body:{type:Z,children:[]},text:k,disable:ai},prettyfiedTemporalDate:{prettified:"Tuesday, February 4, 2020",temporalDate:"2020-02-04"},prev:{title:"Answers I gave for an article  about the impacts of Heartbleed",locale:X,path:"\u002Fblog\u002F2014\u002F07\u002Farticle-impacts-of-heartbleed",slug:"article-impacts-of-heartbleed"},slug:aW,year:"2020"}],fetch:[],mutations:void 0}}("text","element","span","token","\n","punctuation","key","atrule",":","p"," ","-","a","code","td","\n  ","\n    ","em","nofollow","noopener","noreferrer","_blank","true",-1,"icon","icon-link","div","tr","\n        ","number","th","li","DataViewParent","strong","code-block","nuxt-content-highlight","pre","line-numbers","label","\n      ","100","h2","app-image","language-yaml","string","component","type","id","props","en-CA",2,"root","https:\u002F\u002Foverreacted.io\u002Freact-as-a-ui-runtime\u002F","\"","clear:both;overflow:hidden;","","list","value","78","progress","2020-02-04T00:00:00.000Z","experiments",true,"description","Description","1-value-components","1. Value components","2-displayunit-and-dataviewparent-pattern","2. DisplayUnit and DataViewParent pattern","dataviewparent","@dan_abramov","rows","DisplayUnit","code-group","code-snippet","keyword"," progress"," completionProgress\n  ","completionProgress","task_description","CreatedAt"," abc","targetMachine","status","h3","h4","List of all entries","table","thead","Task","Status","Progress","Creation Date","tbody","Sending notification","size:1em;","⏳"," 78% ","Using a top level ","DataView","https:\u002F\u002Fgithub.com\u002FPanJiaChen\u002Fvue-admin-template","PanJiaChen\u002Fvue-admin-template","data-driven-ui","2024-10-24T19:50:04.935Z")));