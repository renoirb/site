__NUXT_JSONP__("/blog/tag/packaging", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W){return {data:[{},{},{contents:[{locale:"en-CA",title:"Harmonizing how to bundle and package JavaScript\u002FECMAScript features",created:w,updated:w,status:"publish",revising:false,migrateCode:x,categories:[y],tags:["frontend",t,"architecture","on-front-page"],description:"Research summary on experiments made in 2018 and 2019 about related to ECMASCript\u002FJavaScript packaging, publishing and bundling",preamble:{disable:x,text:q},toc:[{id:z,depth:A,text:B},{id:C,depth:A,text:D}],body:{type:"root",children:[{type:b,tag:i,props:{},children:[{type:a,value:"Part of my time has been spent on finding a flexible way to organize code and\nmake it reusable between projects."}]},{type:a,value:c},{type:b,tag:i,props:{},children:[{type:a,value:"I enjoy writing in TypeScript, but not all projects are always the same. Some\nprojects are written as a component library, sometimes they aren’t written in\nTypeScript. We wanted a way to tell an entry-point, and flexibility to re-use\nthe same configuration even when we have many build output targets."}]},{type:a,value:c},{type:b,tag:i,props:{},children:[{type:a,value:"I’ve found a way to harmonize how to bundle JavaScript projects following\nclosely NPM’s packaging conventions. To do so, I’ve found and successfully been\nable to manage many small projects, each with their respective way of testing\nand bundling. All of this, without imposing choices when using them."}]},{type:a,value:c},{type:b,tag:i,props:{},children:[{type:a,value:"The objective was that we can write modern ECMAScript, and leverage polyfills\nthat Babel,Rollup and core-js can give us."}]},{type:a,value:c},{type:b,tag:i,props:{},children:[{type:a,value:"For example, a library can be written in TypeScript, but is known to be destined\nto be used in an Express middleware in ECMAScript 5 on a legacy Node.js service\nat v8.0.0 LTS. We can have a build target for this. We could equally have a\nbuild target to be transpiled to run on Node.js v12.0.0 too."}]},{type:a,value:c},{type:b,tag:i,props:{},children:[{type:a,value:"In this example below you’ll see that I use the same \"convention enforcement\"\ntool would be used between many small modules."}]},{type:a,value:c},{type:b,tag:i,props:{},children:[{type:a,value:"I called that tool \""},{type:b,tag:j,props:{},children:[{type:a,value:E}]},{type:a,value:"\", it’s a micro package\n"},{type:b,tag:d,props:{href:"https:\u002F\u002Fgithub.com\u002Frenoirb\u002Fexperiments-201908-rush-typescript-just-bili-monorepo\u002Fblob\u002Fe1e5a43e\u002Fconventions\u002Fuse-bili\u002Fpackage.json",rel:[e,f,g],target:h},children:[{type:a,value:"inside a monorepo"}]},{type:a,value:" (using Microsoft "},{type:b,tag:d,props:{href:F,rel:[e,f,g],target:h,title:G},children:[{type:a,value:H}]},{type:a,value:r},{type:b,tag:d,props:{href:I,rel:[e,f,g],target:h},children:[{type:a,value:"link to monorepo’s\n"},{type:b,tag:j,props:{},children:[{type:a,value:J}]}]},{type:a,value:"), and "},{type:b,tag:d,props:{href:K,rel:[e,f,g],target:h},children:[{type:a,value:"published on NPM"}]},{type:a,value:u}]},{type:a,value:c},{type:b,tag:i,props:{},children:[{type:a,value:"Notice that \""},{type:b,tag:j,props:{},children:[{type:a,value:"@renoirb\u002F..."}]},{type:a,value:"\" packages shown here are public copies (my employer\nallowed me sharing publicly) of our internal packages namespaced as\n\""},{type:b,tag:j,props:{},children:[{type:a,value:"@frontend-bindings\u002F..."}]},{type:a,value:"\" that I’ve been working on in the last months. The\noriginal package name is "},{type:b,tag:l,props:{},children:[{type:a,value:"@frontend-bindings\u002Fconventions-use-bili"}]},{type:a,value:" and is\neffectively the same as shown throught this document. In the following "},{type:b,tag:d,props:{href:"https:\u002F\u002Fyoutu.be\u002FNHJiCwLUakE",rel:[e,f,g],target:h,title:"Video on YouTube"},children:[{type:a,value:"Video is\non YouTube "},{type:b,tag:l,props:{},children:[{type:a,value:"Publishing and importing vue-app-layout into a Nuxt.js\nproject"}]}]},{type:a,value:" shown in \"Data-Driven UI\" document, we can also see\n"},{type:b,tag:l,props:{},children:[{type:a,value:s}]},{type:a,value:" in use."}]},{type:a,value:c},{type:b,tag:i,props:{},children:[{type:a,value:"(Aside: I’m showing code maintained on two distinct projects, one hosted on\nGitLab, and a library maintained on GitHub, published on NPM.)"}]},{type:a,value:c},{type:b,tag:L,props:{id:z},children:[{type:b,tag:d,props:{href:"#introduction",ariaHidden:M,tabIndex:N},children:[{type:b,tag:k,props:{className:[O,P]},children:[]}]},{type:a,value:B}]},{type:a,value:c},{type:b,tag:i,props:{},children:[{type:a,value:"Before this library, I was regularly copy-pasting Babel+Rollup.js configuration\ncode around resulting about 50 lines and more of code that would sometimes be\nthe same, or with just slight modifications.  Making it hard to peers to see the\ndifference. Copy-Pasting 50 lines for a project or two is OK, but when we have\nmore than 30 packages, it becomes wild, quickly. Even more so when we know we’ll\nhave many more small packages coming up."}]},{type:a,value:c},{type:b,tag:i,props:{},children:[{type:a,value:"It’s been useful to me on many occasions. I would have to copy-paste many lines\nand tweaks around, until I created that module."}]},{type:a,value:c},{type:b,tag:i,props:{},children:[{type:a,value:"I’d like to make this example an illustration of code publicly visible of\ninfrastructure package and a few example modules leveraging that infrastructure\npackage."}]},{type:a,value:c},{type:b,tag:i,props:{},children:[{type:a,value:"Design:"}]},{type:a,value:c},{type:b,tag:"ol",props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"Simplest usage surface (i.e. one file, a handful of lines)"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"Support modern ESM module in "},{type:b,tag:j,props:{},children:[{type:a,value:"src\u002F*"}]}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"Support loading tests system"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"Support using TypeScript, but not mandatory"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"Support multiple build targets"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:L,props:{id:C},children:[{type:b,tag:d,props:{href:"#scenario",ariaHidden:M,tabIndex:N},children:[{type:b,tag:k,props:{className:[O,P]},children:[]}]},{type:a,value:D}]},{type:a,value:c},{type:b,tag:i,props:{},children:[{type:b,tag:d,props:{href:"https:\u002F\u002Fgithub.com\u002Fegoist\u002Fbili",rel:[e,f,g],target:h},children:[{type:a,value:"egoist\u002Fbili"}]},{type:a,value:" is a tool written by a popular Vue.js contributor @egoist which\nhelps setting Rollup.js, and Babel, and TypeScript together. It helps with\nmanaging configuration but had a few options missing (notice that there are\nother packages that helps with missing features mentioned here, but won’t be\ncovered here)."}]},{type:a,value:c},{type:b,tag:i,props:{},children:[{type:a,value:"The module mostly piggy-back on "},{type:b,tag:j,props:{},children:[{type:a,value:Q}]},{type:a,value:r},{type:b,tag:d,props:{href:"https:\u002F\u002Fgithub.com\u002Frenoirb\u002Fexperiments-201908-rush-typescript-just-bili-monorepo\u002Fblob\u002Fe1e5a43e\u002Fconventions\u002Fuse-bili\u002Fsrc\u002Fplugins.ts#L74",rel:[e,f,g],target:h},children:[{type:a,value:"whether or not to add\nnode_modules dependencies as part of the build output\n("},{type:b,tag:j,props:{},children:[{type:a,value:"hasBiliBundleNodeModulesOption"}]},{type:a,value:")"}]},{type:a,value:", and with core-js."}]},{type:a,value:c},{type:b,tag:i,props:{},children:[{type:b,tag:l,props:{},children:[{type:a,value:E}]},{type:a,value:" is used in a project with simplest usage surface\n(e.g. "},{type:b,tag:d,props:{href:"https:\u002F\u002Fgitlab.com\u002Frenoirb\u002Frenoirb-particles\u002Fblob\u002Fmaster\u002Flibraries\u002Fjsonschema-aware-loader\u002Fbili.config.ts#L4",rel:[e,f,g],target:h},children:[{type:b,tag:j,props:{},children:[{type:a,value:"jsonschema-aware-loader"}]}]},{type:a,value:r},{type:b,tag:d,props:{href:"https:\u002F\u002Fgithub.com\u002Frenoirb\u002Fexperiments-201908-rush-typescript-just-bili-monorepo\u002Fblob\u002Fe1e5a43e\u002Fpackages\u002Fdate-epoch\u002Fbili.config.ts#L4",rel:[e,f,g],target:h},children:[{type:b,tag:j,props:{},children:[{type:a,value:"date-epoch"}]}]},{type:a,value:r},{type:b,tag:d,props:{href:R,rel:[e,f,g],target:h},children:[{type:b,tag:j,props:{},children:[{type:a,value:S}]}]},{type:a,value:" in\ntheir respective "},{type:b,tag:j,props:{},children:[{type:a,value:"bili.config.js"}]},{type:a,value:"’ "},{type:b,tag:d,props:{href:"https:\u002F\u002Fgithub.com\u002Frenoirb\u002Fexperiments-201908-rush-typescript-just-bili-monorepo\u002Fblob\u002Fe1e5a43e\u002Fconventions\u002Fuse-bili\u002Fsrc\u002Fmain.ts#L13",rel:[e,f,g],target:h},children:[{type:b,tag:l,props:{},children:[{type:a,value:s}]},{type:a,value:"’s\nconfig"}]},{type:a,value:"). Then the rest is handled by "},{type:b,tag:d,props:{href:"https:\u002F\u002Fgitlab.com\u002Frenoirb\u002Frenoirb-particles\u002Fblob\u002Fmaster\u002Flibraries\u002Fjsonschema-aware-loader\u002Fpackage.json#L34",rel:[e,f,g],target:h},children:[{type:a,value:"build CLI\narguments"}]},{type:a,value:". "},{type:b,tag:l,props:{},children:[{type:a,value:"convention-use-bili"}]},{type:a,value:" is a package that is published through NPM\n("},{type:b,tag:d,props:{href:K,rel:[e,f,g],target:h},children:[{type:a,value:"public copy"}]},{type:a,value:"), and is "},{type:b,tag:d,props:{href:"https:\u002F\u002Fwww.npmjs.com\u002Fsearch?q=renoirb%2Fconventions-use",rel:[e,f,g],target:h},children:[{type:a,value:"part of many other\npackaging"}]},{type:a,value:" (see "},{type:b,tag:l,props:{},children:[{type:a,value:s}]},{type:a,value:"’s\n"},{type:b,tag:d,props:{href:"https:\u002F\u002Fgithub.com\u002Frenoirb\u002Fexperiments-201908-rush-typescript-just-bili-monorepo\u002Fblob\u002Fe1e5a43e\u002Fconventions\u002Fuse-bili\u002Fpackage.json#L46-L50",rel:[e,f,g],target:h},children:[{type:a,value:"package.json"}]},{type:a,value:") specialized packages. See the\n"},{type:b,tag:l,props:{},children:[{type:a,value:s}]},{type:a,value:"’s top-level "},{type:b,tag:d,props:{href:F,rel:[e,f,g],target:h,title:G},children:[{type:a,value:H}]},{type:a,value:q},{type:b,tag:d,props:{href:I,rel:[e,f,g],target:h},children:[{type:b,tag:j,props:{},children:[{type:a,value:J}]},{type:a,value:" monorepo\nconfiguration"}]},{type:a,value:u}]},{type:a,value:c},{type:b,tag:i,props:{},children:[{type:a,value:"Breaking into smaller packages doesn’t make us forced to put ALL projects\ntogether, for example "},{type:b,tag:l,props:{},children:[{type:a,value:T}]},{type:a,value:" is maintained "},{type:b,tag:d,props:{href:"https:\u002F\u002Fgitlab.com\u002Frenoirb\u002Frenoirb-particles\u002F-\u002Ftree\u002Fmaster\u002F",rel:[e,f,g],target:h},children:[{type:a,value:"in a separate\nmonorepo hosted on GitLab"}]},{type:a,value:". So we have full\nflexibility in where we maintain and in what language packages are written in."}]},{type:a,value:c},{type:b,tag:i,props:{},children:[{type:a,value:"Notice that "},{type:b,tag:j,props:{},children:[{type:a,value:"@renoirb\u002Fvalidatable"}]},{type:a,value:q},{type:b,tag:d,props:{href:R,rel:[e,f,g],target:h},children:[{type:a,value:S}]},{type:a,value:" isn’t maintained in\nTypeScript, yet it is managed using the same tooling."}]},{type:a,value:c},{type:b,tag:i,props:{},children:[{type:a,value:"In the case of "},{type:b,tag:l,props:{},children:[{type:a,value:T}]},{type:a,value:", a utility I’m using to enforce JSON\nschema validation BEFORE importing, we won’t need many build variants."}]},{type:a,value:c},{type:b,tag:i,props:{},children:[{type:a,value:"But what if we do need many variants."}]},{type:a,value:c},{type:b,tag:i,props:{},children:[{type:a,value:"Let’s say we have a bit of code that uses for-of ECMAScript 2015 iteration\n("},{type:b,tag:d,props:{href:"https:\u002F\u002Fgithub.com\u002Frenoirb\u002Fexperiments-201908-rush-typescript-just-bili-monorepo\u002Fblob\u002F2c040828\u002Fpolyfill\u002Ffor-of-example\u002Fsrc\u002Findex.ts#L7",rel:[e,f,g],target:h},children:[{type:a,value:"for-of-example module"}]},{type:a,value:"), and we want the same code, with same tests, to be\ndeployed on both modern and legacy."}]},{type:a,value:c},{type:b,tag:i,props:{},children:[{type:a,value:"We’d need two build outputs "},{type:b,tag:d,props:{href:"https:\u002F\u002Fgithub.com\u002Frenoirb\u002Fexperiments-201908-rush-typescript-just-bili-monorepo\u002Fblob\u002F2c040828\u002Fpolyfill\u002Ffor-of-example\u002Fdist\u002Findex.esm.js#L39",rel:[e,f,g],target:h,title:"Notice the code is copied as-is"},children:[{type:a,value:"for-of-example module as ESM module"}]},{type:a,value:" (notice the\ncode is used as-is), "},{type:b,tag:d,props:{href:"https:\u002F\u002Fgithub.com\u002Frenoirb\u002Fexperiments-201908-rush-typescript-just-bili-monorepo\u002Fblob\u002F2c040828\u002Fpolyfill\u002Ffor-of-example\u002Fdist\u002Findex.browser.ie6to9.js",rel:[e,f,g],target:h},children:[{type:a,value:"for-of-example module to work on Internet Explorer 6 up to\n9"}]},{type:a,value:u}]},{type:a,value:c},{type:b,tag:i,props:{},children:[{type:a,value:"Notice in the case of Internet Explorer’s version, "},{type:b,tag:d,props:{href:"https:\u002F\u002Fgithub.com\u002Frenoirb\u002Fexperiments-201908-rush-typescript-just-bili-monorepo\u002Fblob\u002F2c04082\u002Fpolyfill\u002Ffor-of-example\u002Fdist\u002Findex.browser.ie6to9.js#L475",rel:[e,f,g],target:h},children:[{type:a,value:"we are\ninlining"}]},{type:a,value:" automatically from "},{type:b,tag:d,props:{href:"https:\u002F\u002Fgithub.com\u002Fzloirock\u002Fcore-js\u002Fblob\u002F6929d43\u002Fpackages\u002Fcore-js\u002Finternals\u002Fiterators-core.js#L15",rel:[e,f,g],target:h},children:[{type:a,value:"publicly maintained\nlist of \"polyfills\" (see "},{type:b,tag:j,props:{},children:[{type:a,value:"core-js"}]},{type:a,value:" source)"}]},{type:a,value:". All of which\nis possible because "},{type:b,tag:d,props:{href:"https:\u002F\u002Fgithub.com\u002Frenoirb\u002Fexperiments-201908-rush-typescript-just-bili-monorepo\u002Fblob\u002F2c040828\u002Fpolyfill\u002Ffor-of-example\u002Fpackage.json#L25-L32",rel:[e,f,g],target:h},children:[{type:a,value:"one of the build target "},{type:b,tag:l,props:{},children:[{type:a,value:"is specifically targetted for\nInternet Explorer"}]}]}]},{type:a,value:c},{type:b,tag:"div",props:{className:["nuxt-content-highlight"]},children:[{type:b,tag:"pre",props:{className:["language-bash","line-numbers"]},children:[{type:b,tag:j,props:{},children:[{type:a,value:"use-cross-env "},{type:b,tag:k,props:{className:[m,"assign-left",v]},children:[{type:a,value:Q}]},{type:b,tag:k,props:{className:[m,"operator"]},children:[{type:a,value:"="}]},{type:b,tag:k,props:{className:[m,"string"]},children:[{type:a,value:"'ie 6-9'"}]},{type:a,value:q},{type:b,tag:k,props:{className:[m,n]},children:[{type:a,value:o}]},{type:a,value:"\n    use-bili "},{type:b,tag:k,props:{className:[m,n]},children:[{type:a,value:o}]},{type:a,value:U},{type:b,tag:k,props:{className:[m,V,v]},children:[{type:a,value:"--target"}]},{type:a,value:" browser "},{type:b,tag:k,props:{className:[m,n]},children:[{type:a,value:o}]},{type:a,value:U},{type:b,tag:k,props:{className:[m,V,v]},children:[{type:a,value:"--format"}]},{type:a,value:" iife "},{type:b,tag:k,props:{className:[m,n]},children:[{type:a,value:o}]},{type:a,value:"\n       --module-name ForOfExample "},{type:b,tag:k,props:{className:[m,n]},children:[{type:a,value:o}]},{type:a,value:"\n       --file-name index.browser.ie6to9.js "},{type:b,tag:k,props:{className:[m,n]},children:[{type:a,value:o}]},{type:a,value:"\n       --bundle-node-modules\n"}]}]}]},{type:a,value:c},{type:b,tag:i,props:{},children:[{type:a,value:"With all of this in place, we can write modern code with all testing and\nmaintenance tooling and have multiple bundles of the same tested code to run in\ndifferent run-time conditions."}]},{type:a,value:c},{type:a,value:c}]},dir:"\u002Fblog\u002F2020\u002F02",path:"\u002Fblog\u002F2020\u002F02\u002Fharmonizing-how-to-bundle-and-package-features",extension:".md",slug:"harmonizing-how-to-bundle-and-package-features",createdAt:W,updatedAt:W,category:y,prettyfiedTemporalDate:{prettified:"Tuesday, February 4, 2020",temporalDate:"2020-02-04"}}],taxonomyKey:t,taxonomy:{key:t}}],fetch:[],mutations:void 0}}("text","element","\n","a","nofollow","noopener","noreferrer","_blank","p","code","span","em","token","punctuation","\\","li"," ",", ","conventions-use-bili","packaging",".","variable","2020-02-04T00:00:00.000Z",true,"experiments","introduction",2,"Introduction","scenario","Scenario","@renoirb\u002Fconventions-use-bili","https:\u002F\u002Frushjs.io\u002F","Rush.js a scalable monorepo manager for the web","Rush.js","https:\u002F\u002Fgithub.com\u002Frenoirb\u002Fexperiments-201908-rush-typescript-just-bili-monorepo\u002Fblob\u002Fe1e5a43e\u002Frush.json#L357-L386","rush.json","https:\u002F\u002Fwww.npmjs.com\u002Fpackage\u002F@renoirb\u002Fconventions-use-bili","h2","true",-1,"icon","icon-link","BROWSERSLIST","https:\u002F\u002Fgithub.com\u002Frenoirb\u002Fexperiments-201908-rush-typescript-just-bili-monorepo\u002Fblob\u002Fe1e5a43e\u002Fpackages\u002Fvalidatable\u002Fbili.config.ts#L4","validatable","JSONSchema Aware Loader","\n       ","parameter","2024-10-24T19:50:04.935Z")));