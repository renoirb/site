__NUXT_JSONP__("/blog/2012/08/nouveau-projet-refonte-de-mon-site-en-conservant-wordpress-comme-back-office-mais-symfony2doctrine2twig-pour-generer-les-vues", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M){return {data:[{},{},{},{canonical:s,content:{title:"Nouveau projet: Refonte de mon site en conservant WordPress comme back-office, mais Symfony2 \u002F Doctrine2 \u002F Twig pour générer les vues",locale:n,created:"2012-08-10T00:00:00.000Z",updated:"2013-03-27T00:00:00.000Z",canonical:s,status:"publish",revising:t,migrateLinks:t,migrateImages:o,gallery:o,caption:o,categories:[],tags:[],preamble:{date:u,text:v},excerpt:"Je pense personnellement qu'il devrait y avoir une totale séparation entre le stockage des documents, sa gestion, et l'affichage du contenu. Ce projet va servir à intégrer Symfony2 à WordPress dans ce sens.",toc:[{id:w,depth:h,text:x},{id:y,depth:h,text:z},{id:A,depth:h,text:B},{id:C,depth:h,text:D}],body:{type:p,children:[{type:b,tag:e,props:{},children:[{type:a,value:"J'ai décidé de refaire mon site web. J'aime bien utiliser le backend de\nWordPress mais je n'aime pas utiliser ce qui y est fourni coté code pour faire\nle \"frontend\" d'un site web."}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Il s'agit d'une première élaboration brute des concepts qui motivent mon choix\nd'implémentation."}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Je suis en plein effort d'élaboration des requis et si vous voulez voir le\n"},{type:b,tag:E,props:{to:"\u002Fblog\u002F2012\u002F08\u002Fproject-manifest-content-management-publishing-platform-to-implement-accessibility-semantic-markup-and-ease-web-publishing"},children:[{type:a,value:"pendant rédigé en anglais, j'ai publié ici"}]},{type:a,value:"."}]},{type:a,value:c},{type:b,tag:i,props:{id:w},children:[{type:b,tag:f,props:{href:"#but-ultime-des-fonctionnalit%C3%A9s",ariaHidden:j,tabIndex:k},children:[{type:b,tag:g,props:{className:[l,m]},children:[]}]},{type:a,value:x}]},{type:a,value:c},{type:b,tag:q,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Utiliser l'administration de WordPress pour gerer le contenu"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Avoir la latitude de Symfony2\u002FTwig\u002FDoctrine2 pour gerer le contenu e le code"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Aggreger le contenu provenant de d'autres sources (marqué favoris de Google\nreader, Tweets, status divers de d'autres services: forrst, github, geeklist,\netc)"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Creer une libraire de macros Twig qui genere du HTML selon les formats de\nSchema.org"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Contribuer a un outil qui pourraitservir aux webmestres qui desirent utiliser\nWordPress mais qui veulent ce que Twig\u002FDoctrine offre."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:i,props:{id:y},children:[{type:b,tag:f,props:{href:"#fonctionnalit%C3%A9s-pr%C3%A9vues",ariaHidden:j,tabIndex:k},children:[{type:b,tag:g,props:{className:[l,m]},children:[]}]},{type:a,value:z}]},{type:a,value:c},{type:b,tag:q,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Extraire, purifier\u002Fharmoniser le html, et convertir les billets de blog en\nformat markdown (version cachée)"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Utilisation des billets format markdown comme cache"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Conversion markdown a html pour consultation"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Commit-push des billets format markdown dans repository git configurable"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Processus Migration données WordPress (galleries, commentaires) vers version\nmarkdown"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Suite de macros reutilisable au format schema.org qui n'est pas lié a la base\nde donné"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Conversion de format markdown avec annotations des medias, publication, lien\ncanonical, etc)"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:i,props:{id:A},children:[{type:b,tag:f,props:{href:"#lignes-guides-dun-cms-id%C3%A9al",ariaHidden:j,tabIndex:k},children:[{type:b,tag:g,props:{className:[l,m]},children:[]}]},{type:a,value:B}]},{type:a,value:c},{type:b,tag:q,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Le contenu doit être libéré de son système de conteneur."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Le contenu doit être le plus vanille possible, le plus près possible du texte\nbrut."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"annotation dans le contenu (titre, lien, gras, italique) doit être écrit dans\nun format texte SEULEMENT (markdown, reStructured, Textile). Permet l'édition\nsans avoir a maîtriser toutes les nuances du balisage (markup html) qui est\nrequis pour l'accessibilité, ou la sémantique"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Les éléments de contenus sont des blocs de HTML distincts du contenur qui\nl'affiche. Dans le sens que la page et le style doit être aussi flexible que\npossible et que l'intégrateur ne soit pas emêtré dans des syntaxes abstraites"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Le système doit permettre d'utiliser plusieurs fournisseurs de contenu (une\nbase de donnée WordPress, Drupal, un repository Git, etc)"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Le système doit permettre de comprendre l'entité de contenu et générer\nautomatiquement le bloc HTML sémantique approprié pour être affiché dans son\nconteneur"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:i,props:{id:C},children:[{type:b,tag:f,props:{href:"#le-code",ariaHidden:j,tabIndex:k},children:[{type:b,tag:g,props:{className:[l,m]},children:[]}]},{type:a,value:D}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"J'utilise présentement mon implémentation en lisant la base de donnée WordPress\nde mon site, et utiliser Symfony2\u002FDoctrine2\u002FTwig pour le \"frontend\". "},{type:b,tag:"del",props:{},children:[{type:a,value:"On peut\nvoir la différence de vitesse d'exécution et le look entre\n"},{type:b,tag:F,props:{},children:[{type:a,value:"beta.renoirboulanger.com"}]},{type:a,value:", à l'inverse de la version hébergée sur le domaine\nnon \""},{type:b,tag:F,props:{},children:[{type:a,value:"beta"}]},{type:a,value:"\""}]},{type:a,value:". "},{type:b,tag:"ins",props:{},children:[{type:a,value:"Nous ne pouvons voir, l’"},{type:b,tag:r,props:{},children:[{type:a,value:"URL"}]},{type:a,value:" n’a\n"},{type:b,tag:f,props:{href:"https:\u002F\u002Fweb.archive.org\u002Fweb\u002F20121226050718\u002Fhttp:\u002F\u002Fbeta.renoirboulanger.com\u002F",rel:[G,H,I],target:J},children:[{type:a,value:"pas si bien archivé sur le Internet Web Archive"}]}]}]},{type:a,value:c}]},text:"---\ntitle: \u003E-\n  Nouveau projet: Refonte de mon site en conservant WordPress comme back-office,\n  mais Symfony2 \u002F Doctrine2 \u002F Twig pour générer les vues\nlocale: fr-CA\ncreated: 2012-08-10\nupdated: 2013-03-27\ncanonical: \u003E-\n  https:\u002F\u002Frenoirboulanger.com\u002Fblog\u002F2012\u002F08\u002Fnouveau-projet-refonte-de-mon-site-en-conservant-wordpress-comme-back-office-mais-symfony2doctrine2twig-pour-generer-les-vues\u002F\nstatus: publish\nrevising: true\nmigrateLinks: true\nmigrateImages: false\ngallery: false\ncaption: false\ncategories: []\ntags: []\npreamble:\n  date: 2024-09-12\n  text: |\n    Il semble que je n’ait pas continué sur cette idée, ni rien publié de concrêt.\n\n    [Renoir de \u003Ctime datetime=\"2024-10\"\u003E2024\u003C\u002Ftime\u003E](\u002Fblog\u002F2024\u002F10\u002Frefonte-majeure-de-mon-site-web):\n    Par contre, cette nouvelle mouture de mon site web fait en 2020, et terminé quatre\n    ans plus tard (en 2024) a suivi l’ambition de séparer le contenu et le contenant\n    en prenant soin de séparer les préoccupations.\n\n    Sauf que j’utilise maintenant \u003Cabbr\u003EECMA\u003C\u002Fabbr\u003EScript et Vue.js et du JavaScript natif\n    comme des [*éléments \u003Cabbr\u003EHTML\u003C\u002Fabbr\u003E personnalisés*][chtml]\n    (\"\u003Cspan lang=\"en\"\u003ECustom Elements\u003C\u002Fspan\u003E\").\n\n    Puis encore, je risque d’aller vers encore plus simple lorsque tout ce contenu sera bien migré.\n    [chtml]: https:\u002F\u002Fdeveloper.mozilla.org\u002Ffr\u002Fdocs\u002FWeb\u002FAPI\u002FWeb_components\u002FUsing_custom_elements \"Je veux bien écrire en Français des trucs de programmation, mais là la. C’est LAID!\"\nexcerpt: \u003E-\n  Je pense personnellement qu'il devrait y avoir une totale séparation entre le\n  stockage des documents, sa gestion, et l'affichage du contenu. Ce projet va\n  servir à intégrer Symfony2 à WordPress dans ce sens.\n---\n\nJ'ai décidé de refaire mon site web. J'aime bien utiliser le backend de\nWordPress mais je n'aime pas utiliser ce qui y est fourni coté code pour faire\nle \"frontend\" d'un site web.\n\nIl s'agit d'une première élaboration brute des concepts qui motivent mon choix\nd'implémentation.\n\nJe suis en plein effort d'élaboration des requis et si vous voulez voir le\n[pendant rédigé en anglais, j'ai publié ici][english-version].\n\n### But ultime des fonctionnalités\n\n- Utiliser l'administration de WordPress pour gerer le contenu\n- Avoir la latitude de Symfony2\u002FTwig\u002FDoctrine2 pour gerer le contenu e le code\n- Aggreger le contenu provenant de d'autres sources (marqué favoris de Google\n  reader, Tweets, status divers de d'autres services: forrst, github, geeklist,\n  etc)\n- Creer une libraire de macros Twig qui genere du HTML selon les formats de\n  Schema.org\n- Contribuer a un outil qui pourraitservir aux webmestres qui desirent utiliser\n  WordPress mais qui veulent ce que Twig\u002FDoctrine offre.\n\n### Fonctionnalités prévues\n\n- Extraire, purifier\u002Fharmoniser le html, et convertir les billets de blog en\n  format markdown (version cachée)\n- Utilisation des billets format markdown comme cache\n- Conversion markdown a html pour consultation\n- Commit-push des billets format markdown dans repository git configurable\n- Processus Migration données WordPress (galleries, commentaires) vers version\n  markdown\n- Suite de macros reutilisable au format schema.org qui n'est pas lié a la base\n  de donné\n- Conversion de format markdown avec annotations des medias, publication, lien\n  canonical, etc)\n\n### Lignes guides d'un CMS idéal\n\n- Le contenu doit être libéré de son système de conteneur.\n- Le contenu doit être le plus vanille possible, le plus près possible du texte\n  brut.\n- annotation dans le contenu (titre, lien, gras, italique) doit être écrit dans\n  un format texte SEULEMENT (markdown, reStructured, Textile). Permet l'édition\n  sans avoir a maîtriser toutes les nuances du balisage (markup html) qui est\n  requis pour l'accessibilité, ou la sémantique\n- Les éléments de contenus sont des blocs de HTML distincts du contenur qui\n  l'affiche. Dans le sens que la page et le style doit être aussi flexible que\n  possible et que l'intégrateur ne soit pas emêtré dans des syntaxes abstraites\n- Le système doit permettre d'utiliser plusieurs fournisseurs de contenu (une\n  base de donnée WordPress, Drupal, un repository Git, etc)\n- Le système doit permettre de comprendre l'entité de contenu et générer\n  automatiquement le bloc HTML sémantique approprié pour être affiché dans son\n  conteneur\n\n### Le Code\n\nJ'utilise présentement mon implémentation en lisant la base de donnée WordPress\nde mon site, et utiliser Symfony2\u002FDoctrine2\u002FTwig pour le \"frontend\". ~~On peut\nvoir la différence de vitesse d'exécution et le look entre\n`beta.renoirboulanger.com`, à l'inverse de la version hébergée sur le domaine\nnon \"`beta`\"~~. \u003Cins\u003ENous ne pouvons voir, l’\u003Cabbr\u003EURL\u003C\u002Fabbr\u003E n’a\n[pas si bien archivé sur le Internet Web Archive](https:\u002F\u002Fweb.archive.org\u002Fweb\u002F20121226050718\u002Fhttp:\u002F\u002Fbeta.renoirboulanger.com\u002F)\u003C\u002Fins\u003E\n\n\u003C!--#TODO-inline-edit--\u003E\n\n[english-version]:\n  \u002Fblog\u002F2012\u002F08\u002Fproject-manifest-content-management-publishing-platform-to-implement-accessibility-semantic-markup-and-ease-web-publishing\n",dir:"\u002Fblog\u002F2012\u002F08",path:"\u002Fblog\u002F2012\u002F08\u002Fnouveau-projet-refonte-de-mon-site-en-conservant-wordpress-comme-back-office-mais-symfony2doctrine2twig-pour-generer-les-vues",extension:".md",slug:K,createdAt:L,updatedAt:L,category:M},coverImage:{toc:[],body:{type:p,children:[]},text:M},month:"08",next:{title:"Comment je valide et convertit des documents HTML trop chargés ou provenant de Microsoft Word en HTML valide et simplifié",locale:n,path:"\u002Fblog\u002F2012\u002F08\u002Fcomment-je-valide-et-convertit-des-documents-html-trop-charges-ou-provenant-de-microsoft-word-en-html-valide-et-simplifie",slug:"comment-je-valide-et-convertit-des-documents-html-trop-charges-ou-provenant-de-microsoft-word-en-html-valide-et-simplifie"},preamble:{toc:[],body:{type:p,children:[{type:b,tag:e,props:{},children:[{type:a,value:"Il semble que je n’ait pas continué sur cette idée, ni rien publié de concrêt."}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:E,props:{to:"\u002Fblog\u002F2024\u002F10\u002Frefonte-majeure-de-mon-site-web"},children:[{type:a,value:"Renoir de "},{type:b,tag:"time",props:{dateTime:"2024-10"},children:[{type:a,value:"2024"}]}]},{type:a,value:":\nPar contre, cette nouvelle mouture de mon site web fait en 2020, et terminé quatre\nans plus tard (en 2024) a suivi l’ambition de séparer le contenu et le contenant\nen prenant soin de séparer les préoccupations."}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Sauf que j’utilise maintenant "},{type:b,tag:r,props:{},children:[{type:a,value:"ECMA"}]},{type:a,value:"Script et Vue.js et du JavaScript natif\ncomme des "},{type:b,tag:f,props:{href:"https:\u002F\u002Fdeveloper.mozilla.org\u002Ffr\u002Fdocs\u002FWeb\u002FAPI\u002FWeb_components\u002FUsing_custom_elements",rel:[G,H,I],target:J,title:"Je veux bien écrire en Français des trucs de programmation, mais là la. C’est LAID!"},children:[{type:b,tag:"em",props:{},children:[{type:a,value:"éléments "},{type:b,tag:r,props:{},children:[{type:a,value:"HTML"}]},{type:a,value:" personnalisés"}]}]},{type:a,value:"\n(\""},{type:b,tag:g,props:{lang:"en"},children:[{type:a,value:"Custom Elements"}]},{type:a,value:"\")."}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Puis encore, je risque d’aller vers encore plus simple lorsque tout ce contenu sera bien migré."}]}]},text:v,date:u},prettyfiedTemporalDate:{prettified:"vendredi 10 août 2012",temporalDate:"2012-08-10"},prev:{locale:n,title:"Réflexion a voix-haute: La réalité frustrante des développeurs dans l'industrie du web",path:"\u002Fblog\u002F2012\u002F09\u002Freflexion-a-voix-haute-la-realite-frustrante-des-developpeurs-dans-lindustrie-du-web",slug:"reflexion-a-voix-haute-la-realite-frustrante-des-developpeurs-dans-lindustrie-du-web"},slug:K,year:"2012"}],fetch:[],mutations:void 0}}("text","element","\n","li","p","a","span",3,"h3","true",-1,"icon","icon-link","fr-CA",false,"root","ul","abbr","https:\u002F\u002Frenoirboulanger.com\u002Fblog\u002F2012\u002F08\u002Fnouveau-projet-refonte-de-mon-site-en-conservant-wordpress-comme-back-office-mais-symfony2doctrine2twig-pour-generer-les-vues\u002F",true,"2024-09-12T00:00:00.000Z","Il semble que je n’ait pas continué sur cette idée, ni rien publié de concrêt.\n\n[Renoir de \u003Ctime datetime=\"2024-10\"\u003E2024\u003C\u002Ftime\u003E](\u002Fblog\u002F2024\u002F10\u002Frefonte-majeure-de-mon-site-web):\nPar contre, cette nouvelle mouture de mon site web fait en 2020, et terminé quatre\nans plus tard (en 2024) a suivi l’ambition de séparer le contenu et le contenant\nen prenant soin de séparer les préoccupations.\n\nSauf que j’utilise maintenant \u003Cabbr\u003EECMA\u003C\u002Fabbr\u003EScript et Vue.js et du JavaScript natif\ncomme des [*éléments \u003Cabbr\u003EHTML\u003C\u002Fabbr\u003E personnalisés*][chtml]\n(\"\u003Cspan lang=\"en\"\u003ECustom Elements\u003C\u002Fspan\u003E\").\n\nPuis encore, je risque d’aller vers encore plus simple lorsque tout ce contenu sera bien migré.\n[chtml]: https:\u002F\u002Fdeveloper.mozilla.org\u002Ffr\u002Fdocs\u002FWeb\u002FAPI\u002FWeb_components\u002FUsing_custom_elements \"Je veux bien écrire en Français des trucs de programmation, mais là la. C’est LAID!\"\n","but-ultime-des-fonctionnalités","But ultime des fonctionnalités","fonctionnalités-prévues","Fonctionnalités prévues","lignes-guides-dun-cms-idéal","Lignes guides d'un CMS idéal","le-code","Le Code","nuxt-link","code","nofollow","noopener","noreferrer","_blank","nouveau-projet-refonte-de-mon-site-en-conservant-wordpress-comme-back-office-mais-symfony2doctrine2twig-pour-generer-les-vues","2024-10-24T19:50:04.919Z","")));