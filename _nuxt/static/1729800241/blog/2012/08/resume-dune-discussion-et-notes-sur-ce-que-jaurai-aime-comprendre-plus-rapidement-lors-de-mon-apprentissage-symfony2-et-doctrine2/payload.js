__NUXT_JSONP__("/blog/2012/08/resume-dune-discussion-et-notes-sur-ce-que-jaurai-aime-comprendre-plus-rapidement-lors-de-mon-apprentissage-symfony2-et-doctrine2", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G){return {data:[{},{},{},{canonical:t,content:{locale:u,title:"Résumé d'une discussion et notes sur ce que j'aurai aimé comprendre plus rapidement lors de mon apprentissage Symfony2 et Doctrine2",canonical:t,status:"publish",revising:n,migrateCode:n,migrateLinks:n,created:"2012-08-10",updated:"2013-03-27",tags:[],categories:[],excerpt:"Ce billet est une compilation de courriels échangés avec un collaborateur de la communauté des logiciels libres. Le thème de l'échange était à propos des concepts architecturaux qu'utilise Symfony2. Du moins, ce que j'ai appris, et . J'ai peut être tord sur certains points, mais a tout le moins, ces indices peuvent peut-être vous aider autant que mon correspondant.",toc:[{depth:k,text:v},{depth:k,text:w},{depth:k,text:x},{depth:k,text:y}],body:{type:o,children:[{type:b,tag:f,props:{},children:[{type:a,value:"Durant les derniers mois j'ai lu et relu la documentation de "},{type:b,tag:c,props:{href:"http:\u002F\u002Fsymfony.com\u002F"},children:[{type:a,value:"Symfony2"}]},{type:a,value:" et voici quelques éléments qui ont attiré mon attention et que j'aimerai partager avec vous."}]},{type:a,value:d},{type:b,tag:f,props:{},children:[{type:a,value:"L'un des concepts architecturaux clé faisant que Symfony2 se démarque des autres frameworks PHP est l'usage des concepts de la "},{type:b,tag:c,props:{title:"Programmation Orienté Aspect sur Wikipedia",href:"http:\u002F\u002Ffr.wikipedia.org\u002Fwiki\u002FProgrammation_orient%C3%A9e_aspect"},children:[{type:a,value:"programmation orienté aspect (AOP)"}]},{type:a,value:l}]},{type:a,value:d},{type:b,tag:f,props:{},children:[{type:a,value:"L'idée directrice de la programmation orienté aspect est d'éviter au maximum dépendances fonctionnelles communes (appelé "},{type:b,tag:j,props:{},children:[{type:a,value:"dépendances transversales"}]},{type:a,value:"). Ces fonctionnalités fréquentes comme l'accès a la base de donnée, par exemple. La manière de séparer ces besoins est de notamment utiliser les commentaires des classes et d'y ajouter des fonctionnalités avant ou apreès les méthodes. C'est ce qu'on appelle des "},{type:b,tag:e,props:{},children:[{type:a,value:"Intercepteurs "}]},{type:a,value:"et des "},{type:b,tag:e,props:{},children:[{type:a,value:"Pointcut"}]},{type:a,value:l}]},{type:a,value:d},{type:b,tag:f,props:{},children:[{type:a,value:"Ce type d'architecture demande une capacité de compilation de code supporté par le langage de programmation."}]},{type:a,value:d},{type:b,tag:f,props:{},children:[{type:a,value:"Nous savons que PHP n'est "},{type:b,tag:e,props:{},children:[{type:a,value:"pas"}]},{type:a,value:" un langage compilé. Il y a des alternatives, mais ce n'est pas comme ce qui peut être fait avec "},{type:b,tag:c,props:{href:"http:\u002F\u002Ffr.wikipedia.org\u002Fwiki\u002FAspectJ"},children:[{type:a,value:"AspectJ"}]},{type:a,value:" et Spring AOP, pour Java, et ce qu'il existe pour le C#."}]},{type:a,value:d},{type:b,tag:f,props:{},children:[{type:a,value:"Pourtant, depuis peu, avec l'avènement de l'implémentation des normes "},{type:b,tag:c,props:{title:"PSR-0 étant le premier niveau de trois, voir la liste des fonctionnalités à supporter",href:"https:\u002F\u002Fgithub.com\u002Fphp-fig\u002Ffig-standards\u002Fblob\u002Fmaster\u002Faccepted\u002FPSR-0.md"},children:[{type:a,value:"PSR-"},{type:b,tag:e,props:{},children:[{type:a,value:"x"}]}]},{type:a,value:", et des librairies de "},{type:b,tag:c,props:{href:"https:\u002F\u002Fgithub.com\u002Fschmittjoh\u002Fcg-library"},children:[{type:a,value:"génération de code"}]},{type:a,value:". "},{type:b,tag:c,props:{title:"AOP Meta programming and codegeneration with PHP",href:z},children:[{type:a,value:"C'est maintenant possible"}]},{type:a,value:l}]},{type:a,value:d},{type:b,tag:f,props:{},children:[{type:b,tag:c,props:{title:"Article anglais décrivant les changements a venir dans le domaine des CMS avec le partage du code",href:"http:\u002F\u002Fbergie.iki.fi\u002Fblog\u002Fmy_secret_agenda_for_php_content_management_systems\u002F"},children:[{type:a,value:"Beaucoup de changements"}]},{type:a,value:" sont a venir dans le monde des CMS et pour beaucoup d'autres projets."}]},{type:a,value:d},{type:b,tag:f,props:{},children:[{type:a,value:"Le mouvement est tellement fort que les communautés de d'autres projets libres s'impliquent: Ce projet s'appelle le \""},{type:b,tag:c,props:{href:"http:\u002F\u002Fwww.php-fig.org\u002F"},children:[{type:a,value:"PHP Framework Interoperability group"}]},{type:a,value:"\" Il y a notamment le projet Magento, Drupal, Joomla!, "},{type:b,tag:c,props:{href:"http:\u002F\u002Fmidgard-project.org\u002Fphpcr\u002F"},children:[{type:a,value:"Midgard"}]},{type:a,value:", "},{type:b,tag:c,props:{title:"Article écrit sur le blogue de Infoglobe parlant de T3CON discutant des progrès de Typo3",href:"http:\u002F\u002Fblogue.infoglobe.ca\u002F2011\u002F06\u002F10\u002Ft3con-%EF%BB%BFjour-1-fluent-development-with-flow3\u002F"},children:[{type:a,value:"Typo3 (Flow3)"}]},{type:a,value:A},{type:b,tag:c,props:{href:"https:\u002F\u002Fgithub.com\u002Fphp-fig\u002Ffig-standards"},children:[{type:a,value:"voir la liste des groupes et du draft sur github"}]},{type:a,value:l}]},{type:a,value:d},{type:b,tag:f,props:{},children:[{type:a,value:"Donc, ces choses que j'ai beaucoup apprécié lors de ma découverte de Symfony2."}]},{type:a,value:d},{type:b,tag:m,props:{},children:[{type:a,value:v}]},{type:a,value:d},{type:b,tag:c,props:{href:"http:\u002F\u002Fsymfony.com\u002Fdoc\u002Fcurrent\u002Fbook\u002Fhttp_fundamentals.html"},children:[{type:a,value:"Comme la documentation le décrit"}]},{type:a,value:", le travail d'une méthode de contrôleur est de convertir la requête qui lui a été demandée d'exécuter (via le routing). L'utilisation des patterns AOP vient permettre de maigrir énormément.\n"},{type:b,tag:f,props:{},children:[{type:a,value:"Au lieu d'utiliser manuellement les Exception, le render, et les appels à Doctrine faits \"à bras\" dans le corps de la méthode comme suit."}]},{type:a,value:d},{type:b,tag:B,props:{lang:C},children:[{type:a,value:"namespace PSS\\Bundle\\BlogBundle\\Controller;\n\nuse Symfony\\Bundle\\FrameworkBundle\\Controller\\Controller;\nuse Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Route;\n\n\u002F**\n * Blog Controller\n **\u002F\nclass BlogController extends Controller\n{\n\n    \u002F**\n     * @Route(\"\u002F{slug}\")\n     *\u002F\n    public function showAction($slug)\n    {\n        $entityManager = $this-\u003Eget('doctrine.orm.entity_manager');\n        try {\n            $post = $entityManager\n                -\u003EgetRepository('PSS\\Bundle\\BlogBundle\\Entity\\Post')\n                -\u003EfindPublishedPostOrPage($slug);\n        } catch (\\Doctrine\\ORM\\NoResultException $exception) {\n            throw new \\Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException('Page Not Found');\n\n        }\n\n        return $this-\u003Erender('PSSBlogBundle:Blog:show.html.twig', array('post' =\u003E $post));\n    }\n}"}]},{type:a,value:d},{type:b,tag:f,props:{},children:[{type:a,value:"On peut sauver des lignes de code et utiliser les "},{type:b,tag:j,props:{},children:[{type:a,value:"@annotation"}]},{type:a,value:" pour définir le Template qui sera utilisé, va aller chercher l'entrée dans la base de donnée pour nous (via le "},{type:b,tag:c,props:{href:"http:\u002F\u002Fsymfony.com\u002Fdoc\u002Fcurrent\u002Fbundles\u002FSensioFrameworkExtraBundle\u002Fannotations\u002Fconverters.html"},children:[{type:a,value:"@ParamConverter"}]},{type:a,value:"), retourner une Exception si elle existe pas."}]},{type:a,value:d},{type:b,tag:f,props:{},children:[{type:a,value:"Vous pouvez voir plus en détails l'implémentation dans Dans mon exemple pris de mon "},{type:b,tag:c,props:{href:"https:\u002F\u002Fgithub.com\u002Frenoirb\u002FPSSBlogBundle\u002Ftree\u002Fdevelop"},children:[{type:a,value:" "},{type:b,tag:e,props:{},children:[{type:a,value:"fork"}]},{type:a,value:" du bundle PSSBlogBundle"}]},{type:a,value:" qui sert a lire la base de donnée WordPress de mon site, et utiliser Symfony2\u002FDoctrine2\u002FTwig pour le devant de mon site ("},{type:b,tag:j,props:{},children:[{type:a,value:"beta"}]},{type:b,tag:g,props:{},children:[{type:a,value:".renoirboulannger.com"}]},{type:a,value:", à l'inverse de la version hébergée sur le domaine non \"beta\")."}]},{type:a,value:d},{type:b,tag:B,props:{lang:C},children:[{type:a,value:"\u003C ?php\nnamespace PSS\\Bundle\\BlogBundle\\Controller;\n\n\u002F\u002F Symfony\u002FDoctrine internal\nuse Symfony\\Bundle\\FrameworkBundle\\Controller\\Controller;\nuse Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Route;\nuse Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Template;\nuse Symfony\\Component\\HttpFoundation\\Request;\n\n\u002F\u002F Entities\nuse PSS\\Bundle\\BlogBundle\\Entity\\Post;\nuse PSS\\Bundle\\BlogBundle\\Entity\\Term;\n\n\u002F**\n * Base Blog Controller\n *\n * @Route(\"\u002Fblog\")\n *\u002F\nclass BlogController extends Controller\n{\n    \u002F**\n     * @Route(\"\u002F{year}\u002F{month}\u002F{slug}\")\n     * @Template()\n     *\u002F\n    public function showAction(Post $post, Request $request)\n    {\n        return array(\n            'post' =\u003E $post-\u003EonlyIfPublished(),\n            'comment_form' =\u003E $this-\u003Ecomment($request,$post)\n        );\n    }\n}"}]},{type:a,value:d},{type:b,tag:f,props:{},children:[{type:a,value:"Ok, toutes les lignes de codes sauvés sont devenues des lignes "},{type:b,tag:e,props:{},children:[{type:a,value:"use"}]},{type:a,value:" au haut de la page. Mais tout ceci a le mérite d'être très explicite. La magie se passe principalement dans l'annotation "},{type:b,tag:e,props:{},children:[{type:a,value:D}]},{type:a,value:" qui fait la relation avec l'entité "},{type:b,tag:e,props:{},children:[{type:a,value:"Post"}]},{type:a,value:" et va ajuster la requête de recherche dans le "},{type:b,tag:e,props:{},children:[{type:a,value:"PostRepository"}]},{type:a,value:" et limiter sa recherche au colones "},{type:b,tag:g,props:{},children:[{type:a,value:"slug"}]},{type:a,value:A},{type:b,tag:g,props:{},children:[{type:a,value:"year"}]},{type:a,value:", et "},{type:b,tag:g,props:{},children:[{type:a,value:"month"}]},{type:a,value:". Ces colones peuvent ne pas exister mais simplement être des méthodes. C'est la magie de Doctrine2 et totalement hors du sujet de ce billet."}]},{type:a,value:d},{type:b,tag:m,props:{},children:[{type:a,value:w}]},{type:a,value:d},{type:b,tag:p,props:{},children:[{type:b,tag:c,props:{href:"http:\u002F\u002Fsymfony.com\u002Fdoc\u002Fcurrent\u002Fbundles\u002FSensioFrameworkExtraBundle\u002Fannotations\u002Frouting.html"},children:[{type:a,value:D}]}]},{type:a,value:"\nCette annotation permet de contrôler les requis que l'adresse doit remplir pour être utilisée. Elle nous permet de spécifier quelle propriétée est liée a l'entitée déclarée dans la déclaration de la méthode du contrôleur.\n"},{type:b,tag:p,props:{},children:[{type:b,tag:c,props:{href:"http:\u002F\u002Fsymfony.com\u002Fdoc\u002Fcurrent\u002Fbundles\u002FSensioFrameworkExtraBundle\u002Fannotations\u002Fview.html"},children:[{type:a,value:q}]}]},{type:a,value:"\nLe "},{type:b,tag:e,props:{},children:[{type:a,value:q}]},{type:a,value:" annotation sur un controleur sert a remplacer les appels a "},{type:b,tag:e,props:{},children:[{type:a,value:"render"}]},{type:a,value:" avec nom de template et va suivre la convention du "},{type:b,tag:c,props:{href:"http:\u002F\u002Fsymfony.com\u002Fdoc\u002Fcurrent\u002Fbook\u002Frouting.html#controller-string-syntax"},children:[{type:a,value:"nom logique"}]},{type:a,value:", exemple:  "},{type:b,tag:j,props:{},children:[{type:a,value:"AcmeBlogBundle"}]},{type:a,value:E},{type:b,tag:e,props:{},children:[{type:a,value:"Blog"}]},{type:a,value:E},{type:b,tag:j,props:{},children:[{type:a,value:"show"}]},{type:a,value:" qui va aller chercher le fichier de template dans le dossier "},{type:b,tag:g,props:{},children:[{type:a,value:"Acme\u002FBlogBundle\u002FResources\u002FBlog\u002Fshow.html.twig"}]},{type:a,value:".\n"},{type:b,tag:f,props:{},children:[{type:a,value:"Il est bien de remarquer ici que par défaut l'engin de templating est Twig et la sortie est HTML. Mais tout peut être configuré. Puis j'aimerai ajouter l'emphase que le système peut permettre de fournir les requis de sortie sous format JSON et nous n'aurions qu'a créer un fichier au même nom mais insérer "},{type:b,tag:g,props:{},children:[{type:a,value:"json"}]},{type:a,value:" à la place de "},{type:b,tag:g,props:{},children:[{type:a,value:"html"}]},{type:a,value:", exemple:"}]},{type:a,value:d},{type:b,tag:f,props:{},children:[{type:a,value:"Donc, plus tard dans le projet, il sera faccile d'ajuster l'attribut \""},{type:b,tag:g,props:{},children:[{type:a,value:"_format"}]},{type:a,value:"\" puis dire si header is xmlhttprequest accept`"},{type:b,tag:g,props:{},children:[{type:a,value:"applcation\u002Fjson"}]},{type:a,value:", utilise le template au meme nom mais ...json.twig  et avoir les memes controlleurs repondre html ET JSON :)  la methode su controlleur qui a un "},{type:b,tag:e,props:{},children:[{type:a,value:q}]},{type:a,value:" s'attend a cwe que tu donne un array cle valeur que tu peut utiliser dans ton template."}]},{type:a,value:d},{type:b,tag:p,props:{},children:[{type:a,value:"@Observe"}]},{type:a,value:"\nCelle ci est ma découverte de la semaine avec "},{type:b,tag:j,props:{},children:[{type:a,value:"@Inject"}]},{type:a,value:". Au lieu de déclarer dans un fichier "},{type:b,tag:e,props:{},children:[{type:a,value:"services.yml"}]},{type:a,value:", il est possible de déclarer directement dans la méthode de la classe l'événement qu'elle est addressée à traiter.\n"},{type:b,tag:f,props:{},children:[{type:a,value:"On peut voir "},{type:b,tag:c,props:{href:"http:\u002F\u002Fstackoverflow.com\u002Fquestions\u002F10694315\u002Fsymfony2-where-to-set-a-user-defined-time-zone"},children:[{type:a,value:"dans cette réponse sur StackOverflow"}]},{type:a,value:" comment on peut ajuster le "},{type:b,tag:e,props:{},children:[{type:a,value:"TimeZone"}]},{type:a,value:" sans avoir a modifier d'autres fichiers dans le projet."}]},{type:a,value:d},{type:b,tag:m,props:{},children:[{type:a,value:x}]},{type:a,value:"\nMon fil delicious "},{type:b,tag:c,props:{href:"http:\u002F\u002Fdelicious.com\u002Finexisdotnet\u002Fsymfony2+very-helpful"},children:[{type:a,value:"delicious avec tags: "},{type:b,tag:e,props:{},children:[{type:a,value:"symfony2"}]},{type:a,value:" et "},{type:b,tag:e,props:{},children:[{type:a,value:"very-helpful"}]}]},{type:a,value:" vous donnera ma sélection de références que j'ai apprécié.\n"},{type:b,tag:m,props:{},children:[{type:a,value:y}]},{type:a,value:"\nQuelques autres références et billets qui m'ont inspiré et aidé a comprendre.\n"},{type:b,tag:r,props:{},children:[{type:a,value:h},{type:b,tag:i,props:{},children:[{type:b,tag:c,props:{href:z},children:[{type:a,value:"Présentations slideshare: AOP, Metaprogramming, Codegeneration or the way of throwing elephants to a blackbox"}]},{type:a,value:" by Serge Smertin"}]},{type:a,value:h},{type:b,tag:i,props:{},children:[{type:b,tag:c,props:{href:"http:\u002F\u002Fjmsyst.com\u002Fbundles\u002FJMSDiExtraBundle\u002Fmaster\u002Fannotations"},children:[{type:a,value:"Annotations de classes\u002Fméthodes du bundle JMSDiExtraBundle"}]},{type:a,value:" by Johanes Smith"}]},{type:a,value:h},{type:b,tag:i,props:{},children:[{type:b,tag:c,props:{href:"http:\u002F\u002Fwww.slideshare.net\u002Ffabpot\u002Fdependency-injection-in-php-5354"},children:[{type:a,value:"Dependency Injection with PHP 5.3 with a bit of PHP 5.4"}]},{type:a,value:" by Fabien Potencier"}]},{type:a,value:d}]},{type:a,value:"\nDes billets inspirants:\n"},{type:b,tag:r,props:{},children:[{type:a,value:h},{type:b,tag:i,props:{},children:[{type:b,tag:c,props:{href:"http:\u002F\u002Fwww.startuplessonslearned.com\u002F2009\u002F01\u002Fsharding-for-startups.html"},children:[{type:a,value:"Sharding for startups"}]},{type:a,value:" by Eric Ries"}]},{type:a,value:h},{type:b,tag:i,props:{},children:[{type:b,tag:c,props:{href:"http:\u002F\u002Fwww.zyxist.com\u002Fen\u002Farchives\u002F103"},children:[{type:a,value:"Symfony2 Event dispatcher"}]},{type:a,value:" by Thomasz Jedrzejewski"}]},{type:a,value:d}]},{type:a,value:"\nOutils à considérer\n"},{type:b,tag:r,props:{},children:[{type:a,value:h},{type:b,tag:i,props:{},children:[{type:b,tag:c,props:{href:"http:\u002F\u002Fautowiring-bundle.info\u002F"},children:[{type:a,value:"Autowriting bundle"}]}]},{type:a,value:h},{type:b,tag:i,props:{},children:[{type:b,tag:c,props:{href:"https:\u002F\u002Fgithub.com\u002Fdoctrine\u002Foxm"},children:[{type:a,value:"Doctrine Object to Xml Mapping (OXM) pour transférer des entitées converties en XML par de simples annotations"}]}]},{type:a,value:d}]}]},text:"---\nlocale: fr-CA\ntitle: \u003E-\n  Résumé d'une discussion et notes sur ce que j'aurai aimé comprendre plus\n  rapidement lors de mon apprentissage Symfony2 et Doctrine2\ncanonical: \u003E-\n  https:\u002F\u002Frenoirboulanger.com\u002Fblog\u002F2012\u002F08\u002Fresume-dune-discussion-et-notes-sur-ce-que-jaurai-aime-comprendre-plus-rapidement-lors-de-mon-apprentissage-symfony2-et-doctrine2\u002F\nstatus: publish\nrevising: true\nmigrateCode: true\nmigrateLinks: true\ncreated: '2012-08-10'\nupdated: '2013-03-27'\ntags: []\ncategories: []\nexcerpt: \u003E-\n  Ce billet est une compilation de courriels échangés avec un collaborateur de\n  la communauté des logiciels libres. Le thème de l'échange était à propos des\n  concepts architecturaux qu'utilise Symfony2. Du moins, ce que j'ai appris, et\n  . J'ai peut être tord sur certains points, mais a tout le moins, ces indices\n  peuvent peut-être vous aider autant que mon correspondant.\n---\n\nDurant les derniers mois j'ai lu et relu la documentation de \u003Ca href=\"http:\u002F\u002Fsymfony.com\u002F\"\u003ESymfony2\u003C\u002Fa\u003E et voici quelques éléments qui ont attiré mon attention et que j'aimerai partager avec vous.\n\nL'un des concepts architecturaux clé faisant que Symfony2 se démarque des autres frameworks PHP est l'usage des concepts de la \u003Ca title=\"Programmation Orienté Aspect sur Wikipedia\" href=\"http:\u002F\u002Ffr.wikipedia.org\u002Fwiki\u002FProgrammation_orient%C3%A9e_aspect\"\u003Eprogrammation orienté aspect (AOP)\u003C\u002Fa\u003E.\n\nL'idée directrice de la programmation orienté aspect est d'éviter au maximum dépendances fonctionnelles communes (appelé \u003Cstrong\u003Edépendances transversales\u003C\u002Fstrong\u003E). Ces fonctionnalités fréquentes comme l'accès a la base de donnée, par exemple. La manière de séparer ces besoins est de notamment utiliser les commentaires des classes et d'y ajouter des fonctionnalités avant ou apreès les méthodes. C'est ce qu'on appelle des \u003Cem\u003EIntercepteurs \u003C\u002Fem\u003Eet des \u003Cem\u003EPointcut\u003C\u002Fem\u003E.\n\nCe type d'architecture demande une capacité de compilation de code supporté par le langage de programmation.\n\nNous savons que PHP n'est \u003Cem\u003Epas\u003C\u002Fem\u003E un langage compilé. Il y a des alternatives, mais ce n'est pas comme ce qui peut être fait avec \u003Ca href=\"http:\u002F\u002Ffr.wikipedia.org\u002Fwiki\u002FAspectJ\"\u003EAspectJ\u003C\u002Fa\u003E et Spring AOP, pour Java, et ce qu'il existe pour le C#.\n\nPourtant, depuis peu, avec l'avènement de l'implémentation des normes \u003Ca title=\"PSR-0 étant le premier niveau de trois, voir la liste des fonctionnalités à supporter\" href=\"https:\u002F\u002Fgithub.com\u002Fphp-fig\u002Ffig-standards\u002Fblob\u002Fmaster\u002Faccepted\u002FPSR-0.md\"\u003EPSR-\u003Cem\u003Ex\u003C\u002Fem\u003E\u003C\u002Fa\u003E, et des librairies de \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fschmittjoh\u002Fcg-library\"\u003Egénération de code\u003C\u002Fa\u003E. \u003Ca title=\"AOP Meta programming and codegeneration with PHP\" href=\"http:\u002F\u002Fwww.slideshare.net\u002FSergeSmertin\u002Faop-metaprogramming-and-codegeneration-with-php\"\u003EC'est maintenant possible\u003C\u002Fa\u003E.\n\n\u003Ca title=\"Article anglais décrivant les changements a venir dans le domaine des CMS avec le partage du code\" href=\"http:\u002F\u002Fbergie.iki.fi\u002Fblog\u002Fmy_secret_agenda_for_php_content_management_systems\u002F\"\u003EBeaucoup de changements\u003C\u002Fa\u003E sont a venir dans le monde des CMS et pour beaucoup d'autres projets.\n\nLe mouvement est tellement fort que les communautés de d'autres projets libres s'impliquent: Ce projet s'appelle le \"\u003Ca href=\"http:\u002F\u002Fwww.php-fig.org\u002F\"\u003EPHP Framework Interoperability group\u003C\u002Fa\u003E\" Il y a notamment le projet Magento, Drupal, Joomla!, \u003Ca href=\"http:\u002F\u002Fmidgard-project.org\u002Fphpcr\u002F\"\u003EMidgard\u003C\u002Fa\u003E, \u003Ca title=\"Article écrit sur le blogue de Infoglobe parlant de T3CON discutant des progrès de Typo3\" href=\"http:\u002F\u002Fblogue.infoglobe.ca\u002F2011\u002F06\u002F10\u002Ft3con-%EF%BB%BFjour-1-fluent-development-with-flow3\u002F\"\u003ETypo3 (Flow3)\u003C\u002Fa\u003E, \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fphp-fig\u002Ffig-standards\"\u003Evoir la liste des groupes et du draft sur github\u003C\u002Fa\u003E.\n\nDonc, ces choses que j'ai beaucoup apprécié lors de ma découverte de Symfony2.\n\u003Ch3\u003EConversion des entités et éviter requêtes à la base de donnée\u003C\u002Fh3\u003E\n\u003Ca href=\"http:\u002F\u002Fsymfony.com\u002Fdoc\u002Fcurrent\u002Fbook\u002Fhttp_fundamentals.html\"\u003EComme la documentation le décrit\u003C\u002Fa\u003E, le travail d'une méthode de contrôleur est de convertir la requête qui lui a été demandée d'exécuter (via le routing). L'utilisation des patterns AOP vient permettre de maigrir énormément.\n\nAu lieu d'utiliser manuellement les Exception, le render, et les appels à Doctrine faits \"à bras\" dans le corps de la méthode comme suit.\n\u003Cpre lang=\"php\"\u003Enamespace PSS\\Bundle\\BlogBundle\\Controller;\n\nuse Symfony\\Bundle\\FrameworkBundle\\Controller\\Controller;\nuse Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Route;\n\n\u002F**\n * Blog Controller\n **\u002F\nclass BlogController extends Controller\n{\n\n    \u002F**\n     * @Route(\"\u002F{slug}\")\n     *\u002F\n    public function showAction($slug)\n    {\n        $entityManager = $this-&gt;get('doctrine.orm.entity_manager');\n        try {\n            $post = $entityManager\n                -&gt;getRepository('PSS\\Bundle\\BlogBundle\\Entity\\Post')\n                -&gt;findPublishedPostOrPage($slug);\n        } catch (\\Doctrine\\ORM\\NoResultException $exception) {\n            throw new \\Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException('Page Not Found');\n\n        }\n\n        return $this-&gt;render('PSSBlogBundle:Blog:show.html.twig', array('post' =&gt; $post));\n    }\n}\u003C\u002Fpre\u003E\nOn peut sauver des lignes de code et utiliser les \u003Cstrong\u003E@annotation\u003C\u002Fstrong\u003E pour définir le Template qui sera utilisé, va aller chercher l'entrée dans la base de donnée pour nous (via le \u003Ca href=\"http:\u002F\u002Fsymfony.com\u002Fdoc\u002Fcurrent\u002Fbundles\u002FSensioFrameworkExtraBundle\u002Fannotations\u002Fconverters.html\"\u003E@ParamConverter\u003C\u002Fa\u003E), retourner une Exception si elle existe pas.\n\nVous pouvez voir plus en détails l'implémentation dans Dans mon exemple pris de mon \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Frenoirb\u002FPSSBlogBundle\u002Ftree\u002Fdevelop\"\u003E \u003Cem\u003Efork\u003C\u002Fem\u003E du bundle PSSBlogBundle\u003C\u002Fa\u003E qui sert a lire la base de donnée WordPress de mon site, et utiliser Symfony2\u002FDoctrine2\u002FTwig pour le devant de mon site (\u003Cstrong\u003Ebeta\u003C\u002Fstrong\u003E\u003Ctt\u003E.renoirboulannger.com\u003C\u002Ftt\u003E, à l'inverse de la version hébergée sur le domaine non \"beta\").\n\u003Cpre lang=\"php\"\u003E&lt; ?php\nnamespace PSS\\Bundle\\BlogBundle\\Controller;\n\n\u002F\u002F Symfony\u002FDoctrine internal\nuse Symfony\\Bundle\\FrameworkBundle\\Controller\\Controller;\nuse Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Route;\nuse Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Template;\nuse Symfony\\Component\\HttpFoundation\\Request;\n\n\u002F\u002F Entities\nuse PSS\\Bundle\\BlogBundle\\Entity\\Post;\nuse PSS\\Bundle\\BlogBundle\\Entity\\Term;\n\n\u002F**\n * Base Blog Controller\n *\n * @Route(\"\u002Fblog\")\n *\u002F\nclass BlogController extends Controller\n{\n    \u002F**\n     * @Route(\"\u002F{year}\u002F{month}\u002F{slug}\")\n     * @Template()\n     *\u002F\n    public function showAction(Post $post, Request $request)\n    {\n        return array(\n            'post' =&gt; $post-&gt;onlyIfPublished(),\n            'comment_form' =&gt; $this-&gt;comment($request,$post)\n        );\n    }\n}\u003C\u002Fpre\u003E\nOk, toutes les lignes de codes sauvés sont devenues des lignes \u003Cem\u003Euse\u003C\u002Fem\u003E au haut de la page. Mais tout ceci a le mérite d'être très explicite. La magie se passe principalement dans l'annotation \u003Cem\u003E@Route\u003C\u002Fem\u003E qui fait la relation avec l'entité \u003Cem\u003EPost\u003C\u002Fem\u003E et va ajuster la requête de recherche dans le \u003Cem\u003EPostRepository\u003C\u002Fem\u003E et limiter sa recherche au colones \u003Ctt\u003Eslug\u003C\u002Ftt\u003E, \u003Ctt\u003Eyear\u003C\u002Ftt\u003E, et \u003Ctt\u003Emonth\u003C\u002Ftt\u003E. Ces colones peuvent ne pas exister mais simplement être des méthodes. C'est la magie de Doctrine2 et totalement hors du sujet de ce billet.\n\u003Ch3\u003EAutres annotations d'intérêt\u003C\u002Fh3\u003E\n\u003Ch4\u003E\u003Ca href=\"http:\u002F\u002Fsymfony.com\u002Fdoc\u002Fcurrent\u002Fbundles\u002FSensioFrameworkExtraBundle\u002Fannotations\u002Frouting.html\"\u003E@Route\u003C\u002Fa\u003E\u003C\u002Fh4\u003E\nCette annotation permet de contrôler les requis que l'adresse doit remplir pour être utilisée. Elle nous permet de spécifier quelle propriétée est liée a l'entitée déclarée dans la déclaration de la méthode du contrôleur.\n\u003Ch4\u003E\u003Ca href=\"http:\u002F\u002Fsymfony.com\u002Fdoc\u002Fcurrent\u002Fbundles\u002FSensioFrameworkExtraBundle\u002Fannotations\u002Fview.html\"\u003E@Template\u003C\u002Fa\u003E\u003C\u002Fh4\u003E\nLe \u003Cem\u003E@Template\u003C\u002Fem\u003E annotation sur un controleur sert a remplacer les appels a \u003Cem\u003Erender\u003C\u002Fem\u003E avec nom de template et va suivre la convention du \u003Ca href=\"http:\u002F\u002Fsymfony.com\u002Fdoc\u002Fcurrent\u002Fbook\u002Frouting.html#controller-string-syntax\"\u003Enom logique\u003C\u002Fa\u003E, exemple:  \u003Cstrong\u003EAcmeBlogBundle\u003C\u002Fstrong\u003E:\u003Cem\u003EBlog\u003C\u002Fem\u003E:\u003Cstrong\u003Eshow\u003C\u002Fstrong\u003E qui va aller chercher le fichier de template dans le dossier \u003Ctt\u003EAcme\u002FBlogBundle\u002FResources\u002FBlog\u002Fshow.html.twig\u003C\u002Ftt\u003E.\n\nIl est bien de remarquer ici que par défaut l'engin de templating est Twig et la sortie est HTML. Mais tout peut être configuré. Puis j'aimerai ajouter l'emphase que le système peut permettre de fournir les requis de sortie sous format JSON et nous n'aurions qu'a créer un fichier au même nom mais insérer \u003Ctt\u003Ejson\u003C\u002Ftt\u003E à la place de \u003Ctt\u003Ehtml\u003C\u002Ftt\u003E, exemple:\n\nDonc, plus tard dans le projet, il sera faccile d'ajuster l'attribut \"\u003Ctt\u003E_format\u003C\u002Ftt\u003E\" puis dire si header is xmlhttprequest accept`\u003Ctt\u003Eapplcation\u002Fjson\u003C\u002Ftt\u003E, utilise le template au meme nom mais ...json.twig  et avoir les memes controlleurs repondre html ET JSON :)  la methode su controlleur qui a un \u003Cem\u003E@Template\u003C\u002Fem\u003E s'attend a cwe que tu donne un array cle valeur que tu peut utiliser dans ton template.\n\u003Ch4\u003E@Observe\u003C\u002Fh4\u003E\nCelle ci est ma découverte de la semaine avec \u003Cstrong\u003E@Inject\u003C\u002Fstrong\u003E. Au lieu de déclarer dans un fichier \u003Cem\u003Eservices.yml\u003C\u002Fem\u003E, il est possible de déclarer directement dans la méthode de la classe l'événement qu'elle est addressée à traiter.\n\nOn peut voir \u003Ca href=\"http:\u002F\u002Fstackoverflow.com\u002Fquestions\u002F10694315\u002Fsymfony2-where-to-set-a-user-defined-time-zone\"\u003Edans cette réponse sur StackOverflow\u003C\u002Fa\u003E comment on peut ajuster le \u003Cem\u003ETimeZone\u003C\u002Fem\u003E sans avoir a modifier d'autres fichiers dans le projet.\n\u003Ch3\u003EMes autres références\u003C\u002Fh3\u003E\nMon fil delicious \u003Ca href=\"http:\u002F\u002Fdelicious.com\u002Finexisdotnet\u002Fsymfony2+very-helpful\"\u003Edelicious avec tags: \u003Cem\u003Esymfony2\u003C\u002Fem\u003E et \u003Cem\u003Every-helpful\u003C\u002Fem\u003E\u003C\u002Fa\u003E vous donnera ma sélection de références que j'ai apprécié.\n\u003Ch3\u003EPour comprendre plus\u003C\u002Fh3\u003E\nQuelques autres références et billets qui m'ont inspiré et aidé a comprendre.\n\u003Cul\u003E\n\t\u003Cli\u003E\u003Ca href=\"http:\u002F\u002Fwww.slideshare.net\u002FSergeSmertin\u002Faop-metaprogramming-and-codegeneration-with-php\"\u003EPrésentations slideshare: AOP, Metaprogramming, Codegeneration or the way of throwing elephants to a blackbox\u003C\u002Fa\u003E by Serge Smertin\u003C\u002Fli\u003E\n\t\u003Cli\u003E\u003Ca href=\"http:\u002F\u002Fjmsyst.com\u002Fbundles\u002FJMSDiExtraBundle\u002Fmaster\u002Fannotations\"\u003EAnnotations de classes\u002Fméthodes du bundle JMSDiExtraBundle\u003C\u002Fa\u003E by Johanes Smith\u003C\u002Fli\u003E\n\t\u003Cli\u003E\u003Ca href=\"http:\u002F\u002Fwww.slideshare.net\u002Ffabpot\u002Fdependency-injection-in-php-5354\"\u003EDependency Injection with PHP 5.3 with a bit of PHP 5.4\u003C\u002Fa\u003E by Fabien Potencier\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\nDes billets inspirants:\n\u003Cul\u003E\n\t\u003Cli\u003E\u003Ca href=\"http:\u002F\u002Fwww.startuplessonslearned.com\u002F2009\u002F01\u002Fsharding-for-startups.html\"\u003ESharding for startups\u003C\u002Fa\u003E by Eric Ries\u003C\u002Fli\u003E\n\t\u003Cli\u003E\u003Ca href=\"http:\u002F\u002Fwww.zyxist.com\u002Fen\u002Farchives\u002F103\"\u003ESymfony2 Event dispatcher\u003C\u002Fa\u003E by Thomasz Jedrzejewski\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\nOutils à considérer\n\u003Cul\u003E\n\t\u003Cli\u003E\u003Ca href=\"http:\u002F\u002Fautowiring-bundle.info\u002F\"\u003EAutowriting bundle\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\t\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fdoctrine\u002Foxm\"\u003EDoctrine Object to Xml Mapping (OXM) pour transférer des entitées converties en XML par de simples annotations\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n",dir:"\u002Fblog\u002F2012\u002F08",path:"\u002Fblog\u002F2012\u002F08\u002Fresume-dune-discussion-et-notes-sur-ce-que-jaurai-aime-comprendre-plus-rapidement-lors-de-mon-apprentissage-symfony2-et-doctrine2",extension:".md",slug:F,createdAt:G,updatedAt:G,category:s},coverImage:{toc:[],body:{type:o,children:[]},text:s},month:"08",next:{locale:u,title:"My answer to People asking whether they should or not use a framework on their programming language",path:"\u002Fblog\u002F2012\u002F08\u002Fmy-answer-to-people-asking-whether-they-should-or-not-use-a-framework-on-their-programming-language",slug:"my-answer-to-people-asking-whether-they-should-or-not-use-a-framework-on-their-programming-language"},preamble:{toc:[],body:{type:o,children:[]},text:s},prettyfiedTemporalDate:{prettified:"vendredi 10 août 2012",temporalDate:"2012-08-10"},prev:{locale:"en-CA",title:"Project manifest: Content management publishing platform to implement Accessibility, Semantic markup, and ease web publishing",path:"\u002Fblog\u002F2012\u002F08\u002Fproject-manifest-content-management-publishing-platform-to-implement-accessibility-semantic-markup-and-ease-web-publishing",slug:"project-manifest-content-management-publishing-platform-to-implement-accessibility-semantic-markup-and-ease-web-publishing"},slug:F,year:"2012"}],fetch:[],mutations:void 0}}("text","element","a","\n","em","p","tt","\n\t","li","strong",3,".","h3",true,"root","h4","@Template","ul","","https:\u002F\u002Frenoirboulanger.com\u002Fblog\u002F2012\u002F08\u002Fresume-dune-discussion-et-notes-sur-ce-que-jaurai-aime-comprendre-plus-rapidement-lors-de-mon-apprentissage-symfony2-et-doctrine2\u002F","fr-CA","Conversion des entités et éviter requêtes à la base de donnée","Autres annotations d'intérêt","Mes autres références","Pour comprendre plus","http:\u002F\u002Fwww.slideshare.net\u002FSergeSmertin\u002Faop-metaprogramming-and-codegeneration-with-php",", ","pre","php","@Route",":","resume-dune-discussion-et-notes-sur-ce-que-jaurai-aime-comprendre-plus-rapidement-lors-de-mon-apprentissage-symfony2-et-doctrine2","2024-10-24T19:50:04.920Z")));