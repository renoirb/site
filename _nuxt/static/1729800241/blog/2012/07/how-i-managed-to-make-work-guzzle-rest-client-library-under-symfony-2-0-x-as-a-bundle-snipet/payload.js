__NUXT_JSONP__("/blog/2012/07/how-i-managed-to-make-work-guzzle-rest-client-library-under-symfony-2-0-x-as-a-bundle-snipet", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v){return {data:[{},{},{},{canonical:l,content:{locale:m,title:"How I managed to make work Guzzle REST client library under Symfony 2.0.x as a bundle [Snipet]",canonical:l,status:"publish",revising:e,migrateCode:e,migrateLinks:e,created:"2012-07-11",updated:"2013-03-29",tags:["php","symfony2"],categories:[n],excerpt:"I spent a few days reading and re-reading the Guzzle PHP REST Client library to use at it's best posssible. It took me more time than I wished, but thanks to them, I understood more of the Symfony2 EventDispatcher mechanism. Here I publish the Gist that I am going to use to import to my project at work. Use for your own good.",toc:[{depth:f,text:o},{depth:f,text:p},{depth:f,text:q}],body:{type:g,children:[{type:b,tag:h,props:{},children:[{type:b,tag:r,props:{},children:[{type:a,value:"Warning"}]},{type:a,value:" This is not a cut and paste solution. But some notes I want to share on how I did and what I'd like to cover and remember when I will continue working with that aspect on my current projects."}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:"The problem i had was mostly that i had to see where to mix-and-match things between this wonderful library and Symfony2. I discovered after searching here that it's not that complicated, you just need to get through the learning curve of reading the code AND the documentation."}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:"I am posting here the hilight of what I have been struggling with and will re-read soon about how to use it and implement in into Symfony2."}]},{type:a,value:c},{type:b,tag:i,props:{},children:[{type:a,value:o}]},{type:a,value:c},{type:b,tag:"ul",props:{},children:[{type:a,value:j},{type:b,tag:k,props:{},children:[{type:a,value:"How to inject the configuration from symfony without hardcoding paths in my Managers\u002FControllers"}]},{type:a,value:j},{type:b,tag:k,props:{},children:[{type:a,value:"Why do the XML configuration file has nodes like "},{type:b,tag:"code",props:{},children:[{type:a,value:s}]},{type:a,value:" in the main project file, but it's not what triggers the "},{type:b,tag:d,props:{},children:[{type:a,value:"Command"}]},{type:a,value:". "},{type:b,tag:r,props:{},children:[{type:a,value:"Answer"}]},{type:a,value:": Use "},{type:b,tag:d,props:{},children:[{type:a,value:"ServiceDescription::factory($xmlFileFullPath)"}]},{type:a,value:" from the Client class. Yes, it has "},{type:b,tag:d,props:{},children:[{type:a,value:s}]},{type:a,value:" nodes... NO, they are not the same as in the client definition file xml (guzzleclients.xml)."}]},{type:a,value:j},{type:b,tag:k,props:{},children:[{type:a,value:"How to extend a "},{type:b,tag:d,props:{},children:[{type:a,value:"DynamicCommand"}]},{type:a,value:" from the ServiceDescription"}]},{type:a,value:c}]},{type:a,value:c},{type:a,value:c},{type:b,tag:i,props:{},children:[{type:a,value:p}]},{type:a,value:c},{type:b,tag:"script",props:{src:"https:\u002F\u002Fgist.github.com\u002F3074476.js"},children:[]},{type:a,value:c},{type:b,tag:i,props:{},children:[{type:a,value:q}]},{type:a,value:"\nActually, now that I went through all this, A simple yaml annotation with a simple service definition with "},{type:b,tag:d,props:{},children:[{type:a,value:"@MyBlogBundle\u002FResources\u002Fconfig\u002FserviceDescription.clientName.xml"}]},{type:a,value:" could had done the job."}]},text:"---\nlocale: en-CA\ntitle: \u003E-\n  How I managed to make work Guzzle REST client library under Symfony 2.0.x as a\n  bundle [Snipet]\ncanonical: \u003E-\n  https:\u002F\u002Frenoirboulanger.com\u002Fblog\u002F2012\u002F07\u002Fhow-i-managed-to-make-work-guzzle-rest-client-library-under-symfony-2-0-x-as-a-bundle-snipet\u002F\nstatus: publish\nrevising: true\nmigrateCode: true\nmigrateLinks: true\ncreated: '2012-07-11'\nupdated: '2013-03-29'\ntags:\n  - php\n  - symfony2\ncategories:\n  - programmation\nexcerpt: \u003E-\n  I spent a few days reading and re-reading the Guzzle PHP REST Client library\n  to use at it's best posssible. It took me more time than I wished, but thanks\n  to them, I understood more of the Symfony2 EventDispatcher mechanism. Here I\n  publish the Gist that I am going to use to import to my project at work. Use\n  for your own good.\n---\n\n\u003Cstrong\u003EWarning\u003C\u002Fstrong\u003E This is not a cut and paste solution. But some notes I want to share on how I did and what I'd like to cover and remember when I will continue working with that aspect on my current projects.\n\nThe problem i had was mostly that i had to see where to mix-and-match things between this wonderful library and Symfony2. I discovered after searching here that it's not that complicated, you just need to get through the learning curve of reading the code AND the documentation.\n\nI am posting here the hilight of what I have been struggling with and will re-read soon about how to use it and implement in into Symfony2.\n\n\n\u003Ch3\u003EThings I wished I understood faster\u003C\u002Fh3\u003E\n\u003Cul\u003E\n\t\u003Cli\u003EHow to inject the configuration from symfony without hardcoding paths in my Managers\u002FControllers\u003C\u002Fli\u003E\n\t\u003Cli\u003EWhy do the XML configuration file has nodes like \u003Ccode\u003E&lt;client&gt;\u003C\u002Fcode\u003E in the main project file, but it's not what triggers the \u003Ctt\u003ECommand\u003C\u002Ftt\u003E. \u003Cstrong\u003EAnswer\u003C\u002Fstrong\u003E: Use \u003Ctt\u003EServiceDescription::factory($xmlFileFullPath)\u003C\u002Ftt\u003E from the Client class. Yes, it has \u003Ctt\u003E&lt;client&gt;\u003C\u002Ftt\u003E nodes... NO, they are not the same as in the client definition file xml (guzzleclients.xml).\u003C\u002Fli\u003E\n\t\u003Cli\u003EHow to extend a \u003Ctt\u003EDynamicCommand\u003C\u002Ftt\u003E from the ServiceDescription\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\n\n\u003C!--#TODO-Display-Or-Migrate-Gists--\u003E\n\u003Ch3\u003EThe Gist\u003C\u002Fh3\u003E\n\u003Cscript src=\"https:\u002F\u002Fgist.github.com\u002F3074476.js\"\u003E\u003C\u002Fscript\u003E\n\n\n\n\u003Ch3\u003EImprovement paths\u003C\u002Fh3\u003E\nActually, now that I went through all this, A simple yaml annotation with a simple service definition with \u003Ctt\u003E@MyBlogBundle\u002FResources\u002Fconfig\u002FserviceDescription.clientName.xml\u003C\u002Ftt\u003E could had done the job.\n",dir:"\u002Fblog\u002F2012\u002F07",path:"\u002Fblog\u002F2012\u002F07\u002Fhow-i-managed-to-make-work-guzzle-rest-client-library-under-symfony-2-0-x-as-a-bundle-snipet",extension:".md",slug:t,createdAt:u,updatedAt:u,category:n},coverImage:{toc:[],body:{type:g,children:[]},text:v},month:"07",next:{locale:m,title:"A quick overview on the advantages to architect you HTML in an \"Object Oriented\" approach",path:"\u002Fblog\u002F2012\u002F07\u002Fa-quick-overview-on-the-advantages-to-architect-you-html-in-an-object-oriented-approach",slug:"a-quick-overview-on-the-advantages-to-architect-you-html-in-an-object-oriented-approach"},preamble:{toc:[],body:{type:g,children:[]},text:v},prettyfiedTemporalDate:{prettified:"Wednesday, July 11, 2012",temporalDate:"2012-07-11"},prev:{locale:"fr-CA",title:"My current Symfony 2.0.x (favourites) vendor dependencies",path:"\u002Fblog\u002F2012\u002F07\u002Fmy-current-symfony-2-0-x-favourites-vendor-dependencies",slug:"my-current-symfony-2-0-x-favourites-vendor-dependencies"},slug:t,year:"2012"}],fetch:[],mutations:void 0}}("text","element","\n","tt",true,3,"root","p","h3","\n\t","li","https:\u002F\u002Frenoirboulanger.com\u002Fblog\u002F2012\u002F07\u002Fhow-i-managed-to-make-work-guzzle-rest-client-library-under-symfony-2-0-x-as-a-bundle-snipet\u002F","en-CA","programmation","Things I wished I understood faster","The Gist","Improvement paths","strong","\u003Cclient\u003E","how-i-managed-to-make-work-guzzle-rest-client-library-under-symfony-2-0-x-as-a-bundle-snipet","2024-10-24T19:50:04.918Z","")));