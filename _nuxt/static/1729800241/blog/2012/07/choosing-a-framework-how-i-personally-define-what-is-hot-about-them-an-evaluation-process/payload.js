__NUXT_JSONP__("/blog/2012/07/choosing-a-framework-how-i-personally-define-what-is-hot-about-them-an-evaluation-process", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y){return {data:[{},{},{},{canonical:C,content:{title:"Choosing a framework, how I personally check as “hot” characteristics, my evaluation process",locale:"en-CA",created:"2012-07-23T00:00:00.000Z",updated:"2013-03-29T00:00:00.000Z",canonical:C,status:"publish",revising:true,categories:[D],tags:["architecture","frameworks","php","symfony2"],keywords:[w,"Framework","web","process","people","community",k,"quality"],coverImage:{src:E,alt:F,text:"Everything goes with PHP Sauce\n"},excerpt:"I do not want to say that I am an expert in programming languages, nor a PHP guru. But with my experience in web development and discussions with other community leaders from the Java, Ruby, Python, Javascript communities and with my own working in team, I learned stuff and here's some of what I consider \"hot\", in the PHP world, ~~right now~~ \u003Cins\u003Ein 2012\u003C\u002Fins\u003E.",preamble:{date:G,text:"I’m surprised to say, but this text aged well. I’m essentially saying that we need tooling to help separate concerns. What happens server-side versus client-side is wildly different.\nThis was written at the time way before full JavaScript frameworks such as Vue.js Angular, or React.\nBefore React JSX HTML tags, Facebook included this way of handling content update with XML tags\nnatively in PHP, called [XHP](https:\u002F\u002Fhacklang.org\u002F#:~:text=XHP%20provides,appropriate%20way) as part of their own superset of PHP called \"[Hack](https:\u002F\u002Fhacklang.org\u002F)\", which was in part of their complete rewrite of PHP in what was called \"Hip Hop VM\" ([HHVM](https:\u002F\u002Fhhvm.com\u002F)).\nAlso, during that epoch, Fabien Potencier had a few releases of Symfony framework\nvia Sensio Labs, the company he founded.\n"},toc:[{id:H,depth:q,text:I},{id:J,depth:q,text:K},{id:L,depth:q,text:M},{id:N,depth:q,text:O},{id:P,depth:q,text:Q},{id:R,depth:q,text:S}],body:{type:y,children:[{type:b,tag:j,props:{},children:[{type:a,value:"This post is all about what "},{type:b,tag:r,props:{},children:[{type:a,value:"I"}]},{type:a,value:" think should be used to define quality in your\nchoice of programming framework tool-set. This post is the first one of a\ncollection of (unknown for now) number of posts."}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:a,value:"This week, I had to bring to a team of people what I consider a good PHP\nframework and why I am sold. I am aware that I may sound blinded with my choice,\nbut this post is about explaining my own guidelines about my choice. I work with\nthem since many years and that made me try many in the PHP ecosystem."}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:a,value:"Things can get messy with PHP, that’s why we have to be very cautious on how we\nstructure and consider recommendations from other good programmers."}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:a,value:"Since we know that PHP can be a \"sauce where everything goes\". Structure is\n"},{type:b,tag:r,props:{},children:[{type:a,value:"crucial"}]},{type:a,value:". There is many frameworks, many libraries, and to be able to build\nsolutions that will solve more usefull and important matters, we need to agree\non how to collaborate."}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:a,value:"I do not claim to be a guru, I have done stuff and thanks to people I mention\nhere, I feel I am getting better at the craft and I thought my reflection\nprocess was worth sharing."}]},{type:a,value:c},{type:b,tag:s,props:{id:H},children:[{type:b,tag:d,props:{href:"#objective-behind-this-series",ariaHidden:l,tabIndex:m},children:[{type:b,tag:n,props:{className:[o,p]},children:[]}]},{type:a,value:I}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:a,value:"This post is "},{type:b,tag:r,props:{},children:[{type:a,value:"not "}]},{type:a,value:" an answer to a "},{type:b,tag:d,props:{href:"http:\u002F\u002Fwww.codinghorror.com\u002Fblog\u002F2012\u002F06\u002Fthe-php-singularity.html",rel:[f,g,h],target:i},children:[{type:a,value:"rant"}]},{type:a,value:" or an "},{type:b,tag:d,props:{href:"http:\u002F\u002Ffabien.potencier.org\u002Farticle\u002F64\u002Fphp-is-much-better-than-you-think#comments",rel:[f,g,h],target:i},children:[{type:a,value:"answer of a rant from a\nrant"}]},{type:a,value:"."}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:a,value:"Actually, I think that bashing (or flamewars) never really been productive. Not\nto forget that ranting on a blog post from "},{type:b,tag:d,props:{href:T,rel:[f,g,h],target:i},children:[{type:a,value:"Fabien"}]},{type:a,value:", one of the most\nimportant contributor to the PHP community, about how XXX feature is bad because\nof something else not related to the current topic. Is a display of disrespect\non his work and do not bring anything to the table."}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:a,value:"On the other hand, this blog post is my echo to many questions I saw on LinkedIn\nand discussions I happened to contribute and my own personnal process I use for\n"},{type:b,tag:U,props:{},children:[{type:a,value:"everything"}]},{type:a,value:" I try to do my work."}]},{type:a,value:c},{type:b,tag:s,props:{id:J},children:[{type:b,tag:d,props:{href:"#my-own-experience",ariaHidden:l,tabIndex:m},children:[{type:b,tag:n,props:{className:[o,p]},children:[]}]},{type:a,value:K}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:a,value:"Value of one’s word starts with the credentials. So, here’s a little bit about\nmy own personnal experience."}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:a,value:"Between 2002-2005 I created my own CMS and CRM that I was calling "},{type:b,tag:z,props:{to:"\u002Fblog\u002Ftag\u002Fgeranium"},children:[{type:a,value:"Geranium"}]},{type:a,value:".\nI did it alone, closed source, and "},{type:b,tag:r,props:{},children:[{type:a,value:"I was the only one using it"}]},{type:a,value:". This is to\nillustrate how I had the lesson learned. It was plain, procedural PHP 4, with\nlots of include and use of global variables."}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:a,value:"I have to say that the most of my experience is about web standards than\nprogramming."}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:a,value:"I always been about trying things and learning. Since then, to name a few, I\nworked with namely:"}]},{type:a,value:c},{type:b,tag:t,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"CMSes such as: WordPress, Drupal 5, MODx evolution"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"CodeIgniter, Kohana"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Zend Framework 1.09"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"symfony 1.1, 1.2, 1.4"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:a,value:"But, in my past I worked and had many discussions in either while I was\n"},{type:b,tag:z,props:{to:"\u002Fblog\u002F2010\u002F09\u002Flancement-de-lannee-2011-pour-la-conference-confoo"},children:[{type:a,value:"organizer"}]},{type:a,value:" at "},{type:b,tag:d,props:{href:"http:\u002F\u002Fconfoo.ca\u002Fen\u002F",rel:[f,g,h],target:i},children:[{type:a,value:"ConFoo"}]},{type:a,value:", and community events I was hosting "},{type:b,tag:z,props:{to:"\u002Fblog\u002Ftag\u002Fdevlab"},children:[{type:a,value:"during\ndevLABs"}]},{type:a,value:" and other kind of events) in clean code architecture and principles."}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:b,tag:d,props:{href:"https:\u002F\u002Fwww.w3schools.com\u002Fphp\u002Fdefault.asp",rel:[f,g,h],target:i},children:[{type:a,value:"PHP has a lot of bad code and tutorials"}]},{type:a,value:" (W3School’s is one of them that pops\nright in my mind). If you follow these, please stop right now!"}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:a,value:"But nowadays, there is good quality tools and efforts to enforce. And, quite\nfrankly, without the work of "},{type:b,tag:U,props:{},children:[{type:a,value:"my favourites contributors"}]},{type:a,value:", I would probably had\nswitched to an other language."}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:a,value:"Like Fabien Potencier outlined, PHP has a lot of great stuff to offer nowadays."}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:a,value:"Bottom line, if you are using old principles, why not start using tool-sets that\nactively teaches and promotes improved techniques."}]},{type:a,value:c},{type:b,tag:s,props:{id:L},children:[{type:b,tag:d,props:{href:"#warning",ariaHidden:l,tabIndex:m},children:[{type:b,tag:n,props:{className:[o,p]},children:[]}]},{type:a,value:M}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:a,value:"Just to put it straight at the beginning. PHP is the language I use since a long\nwhile and I prefer to stick to it for a while as I am perfecting my skills in\nsoftware architecture."}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:a,value:"I have to say, I am sold to Symfony2. For the exact reasons of the ones I\nexplain in this post."}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:a,value:"I am personally open to other web technologies and will even give a try to\n"},{type:b,tag:k,props:{},children:[{type:a,value:"Python"}]},{type:a,value:x},{type:b,tag:k,props:{},children:[{type:a,value:"Ruby"}]},{type:a,value:" or "},{type:b,tag:k,props:{},children:[{type:a,value:"Scala"}]},{type:a,value:" some day. After "},{type:b,tag:k,props:{},children:[{type:a,value:"Node.js"}]},{type:a,value:", of course."}]},{type:a,value:c},{type:b,tag:s,props:{id:N},children:[{type:b,tag:d,props:{href:"#what-i-defines-a-good-project-library-to-use",ariaHidden:l,tabIndex:m},children:[{type:b,tag:n,props:{className:[o,p]},children:[]}]},{type:a,value:O}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:a,value:"Going to the \"real meat\" now, shall we."}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:a,value:"I think what is important in a programming language framework is the quality of\nthe contribution, the steps taken to go forward and improve things, and promote\nquality. In the PHP world, there is many very competent contributors that\nexactly do that. I could name a few, but I would loose the goal of this post."}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:a,value:"So what is really important in when you consider building a project."}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:a,value:"To my opinion it is:"}]},{type:a,value:c},{type:b,tag:t,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Quality of the code contribution"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"The community of people around it"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Reference to other work from people from other languages and concepts (not\nstay within your own flock and ignore the rest)"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Well written recommendations of architecture to use"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Guidelines of a way to implement, and more importantly why some other is being\ndeprecated"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Clean OOP, namespaces, organization, "},{type:b,tag:d,props:{href:"https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FSingle_responsibility_principle",rel:[f,g,h],target:i},children:[{type:a,value:"Single responsibility"}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Enforce typing as much as possible (method signatures anyone?)"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Scaffolding, Database abstraction, Object Relational Mapping, Repositories,\nValidation, etc"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Use of exting automation tools"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:a,value:"A part from that, "},{type:b,tag:d,props:{href:"https:\u002F\u002Fstackoverflow.com\u002Fquestions\u002F9467828\u002Fwhich-one-to-go-yii-or-symfony\u002F11621120#answer-11621120",rel:[f,g,h],target:i},children:[{type:a,value:"I opened a community Wiki answer on stack overflow"}]},{type:a,value:" with\nthe following:"}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:a,value:"Make sure what you use has, a way to:"}]},{type:a,value:c},{type:b,tag:t,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"send to the log (Monolog is a good one)"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"parse text only config (YAML is a good one)"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"logic-less templating, with some convention ("},{type:b,tag:k,props:{},children:[{type:a,value:"Mustach"}]},{type:a,value:x},{type:b,tag:d,props:{href:"http:\u002F\u002Ftwig.sensiolabs.org\u002F",rel:[f,g,h],target:i},children:[{type:a,value:"Twig"}]},{type:a,value:", NOT Smarty\n(please))"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"dependencies definition manifests (Composer is the way to go, very similar to\n"},{type:b,tag:k,props:{},children:[{type:a,value:"package.json"}]},{type:a,value:" that NodeJs offers)"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"define common \"service\" instantiation mechanism ("},{type:b,tag:d,props:{href:"https:\u002F\u002Fsymfony.com\u002Fdoc\u002Fcurrent\u002Fcomponents\u002Fdependency_injection\u002Fintroduction.html",rel:[f,g,h],target:i},children:[{type:a,value:"DependencyInjection"}]},{type:a,value:",\n"},{type:b,tag:d,props:{href:"http:\u002F\u002Fphemto.sourceforge.net\u002F",rel:[f,g,h],target:i},children:[{type:a,value:"Phemto"}]},{type:a,value:" are some)"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"abstracted way to load libraries ("},{type:b,tag:d,props:{href:"https:\u002F\u002Fsymfony.com\u002Fdoc\u002Fcurrent\u002Fcomponents\u002Fclass_loader.html",rel:[f,g,h],target:i},children:[{type:a,value:"ClassLoader"}]},{type:a,value:" component is a good one.\nYou know, no hardcoded "},{type:b,tag:k,props:{},children:[{type:a,value:"require_once"}]},{type:a,value:A}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Localization management (see "},{type:b,tag:d,props:{href:"https:\u002F\u002Fsymfony.com\u002Fdoc\u002Fcurrent\u002Fbook\u002Ftranslation.html",rel:[f,g,h],target:i},children:[{type:a,value:"Symfony2\u002FTwig documentation"}]},{type:a,value:A}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"abstract database calls without hardcoding database vendor specific\n(Doctrine2, Propel)"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Unit testing structure, usage and conventions (PHP Unit, Behat, Mink)"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Database code doesn’t use \""},{type:b,tag:k,props:{},children:[{type:a,value:"mysql"}]},{type:a,value:"\" and istead uses "},{type:b,tag:k,props:{},children:[{type:a,value:"mysqli"}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Code generation mechanisms (also known as \"Scaffolding\"), see: "},{type:b,tag:d,props:{href:"https:\u002F\u002Fgithub.com\u002Fdaylerees\u002Flaravel-bob",rel:[f,g,h],target:i},children:[{type:a,value:"Bob"}]},{type:a,value:", and\nthe ones built in Doctrine2 and Symfony2"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Code generation based on functionnal requirement description, see "},{type:b,tag:d,props:{href:"http:\u002F\u002Fcukes.info\u002F",rel:[f,g,h],target:i},children:[{type:a,value:"(Ruby’s)\nCucumber"}]},{type:a,value:"\u002F"},{type:b,tag:d,props:{href:"http:\u002F\u002Frspec.info\u002F",rel:[f,g,h],target:i},children:[{type:a,value:"RSpec"}]},{type:a,value:", in PHP it’s called "},{type:b,tag:d,props:{href:"http:\u002F\u002Fbehat.org\u002F",rel:[f,g,h],target:i},children:[{type:a,value:"Behat"}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Database object class is as most possible vanilla (doesn’t extend ORM’s)"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:a,value:"And all of that distinct functionality packages that you can mix and match\naligned with what is not to be deprecated and the "},{type:b,tag:d,props:{href:"http:\u002F\u002Fwww.php.net\u002Fmanual\u002Fen\u002Fmigration54.changes.php",rel:[f,g,h],target:i},children:[{type:a,value:"latest php features"}]}]},{type:a,value:c},{type:b,tag:s,props:{id:P},children:[{type:b,tag:d,props:{href:"#thats-all-for-now",ariaHidden:l,tabIndex:m},children:[{type:b,tag:n,props:{className:[o,p]},children:[]}]},{type:a,value:Q}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:a,value:"I could go on and on with a list. Stay tuned for my next post about my analysis\non what I think great about those next generation PHP framework and tools. And\nmost importantly, "},{type:b,tag:r,props:{},children:[{type:a,value:"WHAT"}]},{type:a,value:" make’s them attention worthy."}]},{type:a,value:c},{type:b,tag:s,props:{id:R},children:[{type:b,tag:d,props:{href:"#reference",ariaHidden:l,tabIndex:m},children:[{type:b,tag:n,props:{className:[o,p]},children:[]}]},{type:a,value:S}]},{type:a,value:c},{type:b,tag:V,props:{id:"some-good-guidelines"},children:[{type:b,tag:d,props:{href:"#some-good-guidelines",ariaHidden:l,tabIndex:m},children:[{type:b,tag:n,props:{className:[o,p]},children:[]}]},{type:a,value:"Some good guidelines"}]},{type:a,value:c},{type:b,tag:t,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{href:"http:\u002F\u002Fwww.phptherightway.com\u002F",rel:[f,g,h],target:i},children:[{type:a,value:"PHP The Right Way"}]},{type:a,value:" ("},{type:b,tag:d,props:{href:"https:\u002F\u002Fgithub.com\u002Fcodeguy\u002Fphp-the-right-way",rel:[f,g,h],target:i},children:[{type:a,value:"contribute with a pull request here"}]},{type:a,value:A}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{href:"http:\u002F\u002Fwww.php-fig.org\u002F",rel:[f,g,h],target:i},children:[{type:a,value:"PHP Framework Interop Group"}]},{type:a,value:"’s PSR recommendation reference"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:V,props:{id:"my-favorites-contributors"},children:[{type:b,tag:d,props:{href:"#my-favorites-contributors",ariaHidden:l,tabIndex:m},children:[{type:b,tag:n,props:{className:[o,p]},children:[]}]},{type:a,value:"My favorites contributors"}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:a,value:"This is my list of favourites contributors I look for when I read documentation\nand projects."}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:a,value:"As it happens, I had the chance to meet them during my two last years as\norganizer of the ConFoo conference."}]},{type:a,value:c},{type:b,tag:t,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{href:T,rel:[f,g,h],target:i},children:[{type:a,value:"Fabien Potencier"}]},{type:a,value:x},{type:b,tag:d,props:{href:"https:\u002F\u002Fsymfony.com\u002F",rel:[f,g,h],target:i},children:[{type:a,value:"Symfony framework"}]},{type:a,value:" creator, and SensioLabs founder"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Doctrine2’s cookbook on "},{type:b,tag:d,props:{href:"http:\u002F\u002Fwww.doctrine-project.org\u002Fen\u002Flatest\u002Ftutorials\u002Fgetting-started.html",rel:[f,g,h],target:i},children:[{type:a,value:"CodeFirst approach"}]},{type:a,value:x},{type:b,tag:d,props:{href:"http:\u002F\u002Fdocs.doctrine-project.org\u002Fen\u002Flatest\u002Freference\u002Finheritance-mapping.html",rel:[f,g,h],target:i},children:[{type:a,value:"Object entity mapping and\ninheritance (aka. Inheritance mapping), and the others."}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{href:"http:\u002F\u002Fschlitt.info\u002Fopensource\u002Fblog.html",rel:[f,g,h],target:i},children:[{type:a,value:"Tobias Schlitt"}]},{type:a,value:". Be sure to read "},{type:b,tag:d,props:{href:"http:\u002F\u002Fschlitt.info\u002Fopensource\u002Fblog\u002F0709_defining_a_framework.html",rel:[f,g,h],target:i},children:[{type:a,value:"his definition of a framework"}]},{type:a,value:" it\nis quite exhaustive."}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{href:"http:\u002F\u002Fwww.jwage.com\u002F",rel:[f,g,h],target:i},children:[{type:a,value:"Jonathan H. Wage"}]},{type:a,value:", creator of the best database abstraction layer,\n"},{type:b,tag:r,props:{},children:[{type:a,value:"Doctrine"}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Sebastian Bergmann and his peers at "},{type:b,tag:d,props:{href:"https:\u002F\u002Fthephp.cc\u002Fportfolio",rel:[f,g,h],target:i},children:[{type:a,value:"thePHP.cc"}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{href:"https:\u002F\u002Fgithub.com\u002Fstof",rel:[f,g,h],target:i},children:[{type:a,value:"Christophe Coevoet"}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{href:"https:\u002F\u002Fgithub.com\u002Fschmittjoh",rel:[f,g,h],target:i},children:[{type:a,value:"Johanes Schmitt"}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{href:"http:\u002F\u002Fnelm.io\u002Fjordi",rel:[f,g,h],target:i},children:[{type:a,value:"Jordi Boggiano"}]},{type:a,value:", and a big thanks for Composer"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:W},{type:b,tag:d,props:{href:"http:\u002F\u002Frocketlab.liip.ch\u002F",rel:[f,g,h],target:i},children:[{type:a,value:"Liip, their blog and projects"}]},{type:a,value:" is very informative"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:W},{type:b,tag:d,props:{href:"http:\u002F\u002Fknplabs.com\u002F",rel:[f,g,h],target:i},children:[{type:a,value:"KnpLabs, their contributions, Behat, and other projects"}]},{type:a,value:" are\nalso very informative"}]},{type:a,value:c}]}]},text:"---\ntitle:\n  Choosing a framework, how I personally check as “hot” characteristics, my\n  evaluation process\nlocale: en-CA\ncreated: 2012-07-23\nupdated: 2013-03-29\ncanonical: 'https:\u002F\u002Frenoirboulanger.com\u002Fblog\u002F2012\u002F07\u002Fchoosing-a-framework-how-i-personally-define-what-is-hot-about-them-an-evaluation-process\u002F'\nstatus: publish\nrevising: true\ncategories:\n  - web-integration-review\ntags:\n  - architecture\n  - frameworks\n  - php\n  - symfony2\nkeywords:\n  - PHP\n  - Framework\n  - web\n  - process\n  - people\n  - community\n  - code\n  - quality\ncoverImage:\n  src: ~\u002Fassets\u002Fcontent\u002Fblog\u002F2012\u002F07\u002Feverything-with-php-sauce.png\n  alt: Everything goes with PHP Sauce\n  text: |\n    Everything goes with PHP Sauce\nexcerpt: \u003E-\n  I do not want to say that I am an expert in programming languages, nor a PHP\n  guru. But with my experience in web development and discussions with other\n  community leaders from the Java, Ruby, Python, Javascript communities and with\n  my own working in team, I learned stuff and here's some of what I consider\n  \"hot\", in the PHP world, ~~right now~~ \u003Cins\u003Ein 2012\u003C\u002Fins\u003E.\npreamble:\n  date: 2024-09-12\n  text: |\n    I’m surprised to say, but this text aged well. I’m essentially saying that we need tooling to help separate concerns. What happens server-side versus client-side is wildly different.\n    This was written at the time way before full JavaScript frameworks such as Vue.js Angular, or React.\n    Before React JSX HTML tags, Facebook included this way of handling content update with XML tags\n    natively in PHP, called [XHP](https:\u002F\u002Fhacklang.org\u002F#:~:text=XHP%20provides,appropriate%20way) as part of their own superset of PHP called \"[Hack](https:\u002F\u002Fhacklang.org\u002F)\", which was in part of their complete rewrite of PHP in what was called \"Hip Hop VM\" ([HHVM](https:\u002F\u002Fhhvm.com\u002F)).\n    Also, during that epoch, Fabien Potencier had a few releases of Symfony framework\n    via Sensio Labs, the company he founded.\n---\n\nThis post is all about what **I** think should be used to define quality in your\nchoice of programming framework tool-set. This post is the first one of a\ncollection of (unknown for now) number of posts.\n\nThis week, I had to bring to a team of people what I consider a good PHP\nframework and why I am sold. I am aware that I may sound blinded with my choice,\nbut this post is about explaining my own guidelines about my choice. I work with\nthem since many years and that made me try many in the PHP ecosystem.\n\nThings can get messy with PHP, that’s why we have to be very cautious on how we\nstructure and consider recommendations from other good programmers.\n\nSince we know that PHP can be a \"sauce where everything goes\". Structure is\n**crucial**. There is many frameworks, many libraries, and to be able to build\nsolutions that will solve more usefull and important matters, we need to agree\non how to collaborate.\n\nI do not claim to be a guru, I have done stuff and thanks to people I mention\nhere, I feel I am getting better at the craft and I thought my reflection\nprocess was worth sharing.\n\n### Objective behind this series\n\nThis post is **not ** an answer to a [rant][0] or an [answer of a rant from a\nrant][1].\n\nActually, I think that bashing (or flamewars) never really been productive. Not\nto forget that ranting on a blog post from [Fabien][2], one of the most\nimportant contributor to the PHP community, about how XXX feature is bad because\nof something else not related to the current topic. Is a display of disrespect\non his work and do not bring anything to the table.\n\nOn the other hand, this blog post is my echo to many questions I saw on LinkedIn\nand discussions I happened to contribute and my own personnal process I use for\n_everything_ I try to do my work.\n\n### My own experience\n\nValue of one’s word starts with the credentials. So, here’s a little bit about\nmy own personnal experience.\n\nBetween 2002-2005 I created my own CMS and CRM that I was calling [Geranium][3].\nI did it alone, closed source, and **I was the only one using it**. This is to\nillustrate how I had the lesson learned. It was plain, procedural PHP 4, with\nlots of include and use of global variables.\n\nI have to say that the most of my experience is about web standards than\nprogramming.\n\nI always been about trying things and learning. Since then, to name a few, I\nworked with namely:\n\n- CMSes such as: WordPress, Drupal 5, MODx evolution\n- CodeIgniter, Kohana\n- Zend Framework 1.09\n- symfony 1.1, 1.2, 1.4\n\nBut, in my past I worked and had many discussions in either while I was\n[organizer][4] at [ConFoo][5], and community events I was hosting [during\ndevLABs][6] and other kind of events) in clean code architecture and principles.\n\n[PHP has a lot of bad code and tutorials][7] (W3School’s is one of them that pops\nright in my mind). If you follow these, please stop right now!\n\nBut nowadays, there is good quality tools and efforts to enforce. And, quite\nfrankly, without the work of _my favourites contributors_, I would probably had\nswitched to an other language.\n\nLike Fabien Potencier outlined, PHP has a lot of great stuff to offer nowadays.\n\nBottom line, if you are using old principles, why not start using tool-sets that\nactively teaches and promotes improved techniques.\n\n### Warning\n\nJust to put it straight at the beginning. PHP is the language I use since a long\nwhile and I prefer to stick to it for a while as I am perfecting my skills in\nsoftware architecture.\n\nI have to say, I am sold to Symfony2\\. For the exact reasons of the ones I\nexplain in this post.\n\nI am personally open to other web technologies and will even give a try to\n`Python`, `Ruby` or `Scala` some day. After `Node.js`, of course.\n\n### What I defines a good project library to use\n\nGoing to the \"real meat\" now, shall we.\n\nI think what is important in a programming language framework is the quality of\nthe contribution, the steps taken to go forward and improve things, and promote\nquality. In the PHP world, there is many very competent contributors that\nexactly do that. I could name a few, but I would loose the goal of this post.\n\nSo what is really important in when you consider building a project.\n\nTo my opinion it is:\n\n- Quality of the code contribution\n- The community of people around it\n- Reference to other work from people from other languages and concepts (not\n  stay within your own flock and ignore the rest)\n- Well written recommendations of architecture to use\n- Guidelines of a way to implement, and more importantly why some other is being\n  deprecated\n- Clean OOP, namespaces, organization, [Single responsibility][9]\n- Enforce typing as much as possible (method signatures anyone?)\n- Scaffolding, Database abstraction, Object Relational Mapping, Repositories,\n  Validation, etc\n- Use of exting automation tools\n\nA part from that, [I opened a community Wiki answer on stack overflow][10] with\nthe following:\n\nMake sure what you use has, a way to:\n\n- send to the log (Monolog is a good one)\n- parse text only config (YAML is a good one)\n- logic-less templating, with some convention (`Mustach`, [Twig][11], NOT Smarty\n  (please))\n- dependencies definition manifests (Composer is the way to go, very similar to\n  `package.json` that NodeJs offers)\n- define common \"service\" instantiation mechanism ([DependencyInjection][12],\n  [Phemto][13] are some)\n- abstracted way to load libraries ([ClassLoader][14] component is a good one.\n  You know, no hardcoded `require_once`)\n- Localization management (see [Symfony2\u002FTwig documentation][15])\n- abstract database calls without hardcoding database vendor specific\n  (Doctrine2, Propel)\n- Unit testing structure, usage and conventions (PHP Unit, Behat, Mink)\n- Database code doesn’t use \"`mysql`\" and istead uses `mysqli`\n- Code generation mechanisms (also known as \"Scaffolding\"), see: [Bob][16], and\n  the ones built in Doctrine2 and Symfony2\n- Code generation based on functionnal requirement description, see [(Ruby’s)\n  Cucumber][17]\u002F[RSpec][18], in PHP it’s called [Behat][19]\n- Database object class is as most possible vanilla (doesn’t extend ORM’s)\n\nAnd all of that distinct functionality packages that you can mix and match\naligned with what is not to be deprecated and the [latest php features][20]\n\n### That’s all for now\n\nI could go on and on with a list. Stay tuned for my next post about my analysis\non what I think great about those next generation PHP framework and tools. And\nmost importantly, **WHAT** make’s them attention worthy.\n\n### Reference\n\n#### Some good guidelines\n\n- [PHP The Right Way][21] ([contribute with a pull request here][22])\n- [PHP Framework Interop Group][23]’s PSR recommendation reference\n\n#### My favorites contributors\n\nThis is my list of favourites contributors I look for when I read documentation\nand projects.\n\nAs it happens, I had the chance to meet them during my two last years as\norganizer of the ConFoo conference.\n\n- [Fabien Potencier][2], [Symfony framework][24] creator, and SensioLabs founder\n- Doctrine2’s cookbook on [CodeFirst approach][25], [Object entity mapping and\n  inheritance (aka. Inheritance mapping), and the others.][26]\n- [Tobias Schlitt][27]. Be sure to read [his definition of a framework][28] it\n  is quite exhaustive.\n- [Jonathan H. Wage][29], creator of the best database abstraction layer,\n  **Doctrine**\n- Sebastian Bergmann and his peers at [thePHP.cc][30]\n- [Christophe Coevoet][31]\n- [Johanes Schmitt][32]\n- [Jordi Boggiano][33], and a big thanks for Composer\n- People at [Liip, their blog and projects][34] is very informative\n- People at [KnpLabs, their contributions, Behat, and other projects][35] are\n  also very informative\n\n[0]: http:\u002F\u002Fwww.codinghorror.com\u002Fblog\u002F2012\u002F06\u002Fthe-php-singularity.html\n[1]:\n  http:\u002F\u002Ffabien.potencier.org\u002Farticle\u002F64\u002Fphp-is-much-better-than-you-think#comments\n[2]: http:\u002F\u002Ffabien.potencier.org\u002F\n[3]: \u002Fblog\u002Ftag\u002Fgeranium\n[4]: \u002Fblog\u002F2010\u002F09\u002Flancement-de-lannee-2011-pour-la-conference-confoo\n[5]: http:\u002F\u002Fconfoo.ca\u002Fen\u002F\n[6]: \u002Fblog\u002Ftag\u002Fdevlab\n[7]: https:\u002F\u002Fwww.w3schools.com\u002Fphp\u002Fdefault.asp\n[9]: https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FSingle_responsibility_principle\n[10]:\n  https:\u002F\u002Fstackoverflow.com\u002Fquestions\u002F9467828\u002Fwhich-one-to-go-yii-or-symfony\u002F11621120#answer-11621120\n[11]: http:\u002F\u002Ftwig.sensiolabs.org\u002F\n[12]:\n  https:\u002F\u002Fsymfony.com\u002Fdoc\u002Fcurrent\u002Fcomponents\u002Fdependency_injection\u002Fintroduction.html\n[13]: http:\u002F\u002Fphemto.sourceforge.net\u002F\n[14]: https:\u002F\u002Fsymfony.com\u002Fdoc\u002Fcurrent\u002Fcomponents\u002Fclass_loader.html\n[15]: https:\u002F\u002Fsymfony.com\u002Fdoc\u002Fcurrent\u002Fbook\u002Ftranslation.html\n[16]: https:\u002F\u002Fgithub.com\u002Fdaylerees\u002Flaravel-bob\n[17]: http:\u002F\u002Fcukes.info\u002F\n[18]: http:\u002F\u002Frspec.info\u002F\n[19]: http:\u002F\u002Fbehat.org\u002F\n[20]: http:\u002F\u002Fwww.php.net\u002Fmanual\u002Fen\u002Fmigration54.changes.php\n[21]: http:\u002F\u002Fwww.phptherightway.com\u002F\n[22]: https:\u002F\u002Fgithub.com\u002Fcodeguy\u002Fphp-the-right-way\n[23]: http:\u002F\u002Fwww.php-fig.org\u002F\n[24]: https:\u002F\u002Fsymfony.com\u002F\n[25]: http:\u002F\u002Fwww.doctrine-project.org\u002Fen\u002Flatest\u002Ftutorials\u002Fgetting-started.html\n[26]:\n  http:\u002F\u002Fdocs.doctrine-project.org\u002Fen\u002Flatest\u002Freference\u002Finheritance-mapping.html\n[27]: http:\u002F\u002Fschlitt.info\u002Fopensource\u002Fblog.html\n[28]: http:\u002F\u002Fschlitt.info\u002Fopensource\u002Fblog\u002F0709_defining_a_framework.html\n[29]: http:\u002F\u002Fwww.jwage.com\u002F\n[30]: https:\u002F\u002Fthephp.cc\u002Fportfolio\n[31]: https:\u002F\u002Fgithub.com\u002Fstof\n[32]: https:\u002F\u002Fgithub.com\u002Fschmittjoh\n[33]: http:\u002F\u002Fnelm.io\u002Fjordi\n[34]: http:\u002F\u002Frocketlab.liip.ch\u002F\n[35]: http:\u002F\u002Fknplabs.com\u002F\n",dir:"\u002Fblog\u002F2012\u002F07",path:"\u002Fblog\u002F2012\u002F07\u002Fchoosing-a-framework-how-i-personally-define-what-is-hot-about-them-an-evaluation-process",extension:".md",slug:X,createdAt:"2024-10-24T19:50:04.917Z",updatedAt:"2024-10-24T19:50:04.918Z",category:D},coverImage:{toc:[],body:{type:y,children:[{type:b,tag:j,props:{},children:[{type:a,value:"Everything goes with "},{type:b,tag:u,props:{lang:v,title:B},children:[{type:a,value:w}]},{type:a,value:" Sauce"}]}]},text:"Everything goes with \u003Cabbr lang=\"en\" title=\"Hypertext Pre Processor Programming language\"\u003EPHP\u003C\u002Fabbr\u003E Sauce\n",src:E,alt:F},month:"07",next:{locale:Y,title:"My current Symfony 2.0.x (favourites) vendor dependencies",path:"\u002Fblog\u002F2012\u002F07\u002Fmy-current-symfony-2-0-x-favourites-vendor-dependencies",slug:"my-current-symfony-2-0-x-favourites-vendor-dependencies"},preamble:{toc:[],body:{type:y,children:[{type:b,tag:j,props:{},children:[{type:a,value:"I’m surprised to say, but this text aged well. I’m essentially saying that we need tooling to help separate concerns. What happens server-side versus client-side is wildly different.\nThis was written at the time way before full JavaScript frameworks such as Vue.js Angular, or React.\nBefore React JSX "},{type:b,tag:u,props:{lang:v,title:"Hyper Text Markup Language"},children:[{type:a,value:"HTML"}]},{type:a,value:" tags, Facebook included this way of handling content update with "},{type:b,tag:u,props:{lang:v,title:"eXtensible Markup Language"},children:[{type:a,value:"XML"}]},{type:a,value:" tags\nnatively in PHP, called "},{type:b,tag:d,props:{href:"https:\u002F\u002Fhacklang.org\u002F#:~:text=XHP%20provides,appropriate%20way",rel:[f,g,h],target:i},children:[{type:a,value:"XHP"}]},{type:a,value:" as part of their own superset of "},{type:b,tag:u,props:{lang:v,title:B},children:[{type:a,value:w}]},{type:a,value:" called \""},{type:b,tag:d,props:{href:"https:\u002F\u002Fhacklang.org\u002F",rel:[f,g,h],target:i},children:[{type:a,value:"Hack"}]},{type:a,value:"\", which was in part of their complete rewrite of "},{type:b,tag:u,props:{lang:v,title:B},children:[{type:a,value:w}]},{type:a,value:" in what was called \"Hip Hop VM\" ("},{type:b,tag:d,props:{href:"https:\u002F\u002Fhhvm.com\u002F",rel:[f,g,h],target:i},children:[{type:a,value:"HHVM"}]},{type:a,value:").\nAlso, during that epoch, Fabien Potencier had a few releases of Symfony framework\nvia Sensio Labs, the company he founded."}]}]},text:"I’m surprised to say, but this text aged well. I’m essentially saying that we need tooling to help separate concerns. What happens server-side versus client-side is wildly different.\nThis was written at the time way before full JavaScript frameworks such as Vue.js Angular, or React.\nBefore React JSX \u003Cabbr lang=\"en\" title=\"Hyper Text Markup Language\"\u003EHTML\u003C\u002Fabbr\u003E tags, Facebook included this way of handling content update with \u003Cabbr lang=\"en\" title=\"eXtensible Markup Language\"\u003EXML\u003C\u002Fabbr\u003E tags\nnatively in PHP, called [XHP](https:\u002F\u002Fhacklang.org\u002F#:~:text=XHP%20provides,appropriate%20way) as part of their own superset of \u003Cabbr lang=\"en\" title=\"Hypertext Pre Processor Programming language\"\u003EPHP\u003C\u002Fabbr\u003E called \"[Hack](https:\u002F\u002Fhacklang.org\u002F)\", which was in part of their complete rewrite of \u003Cabbr lang=\"en\" title=\"Hypertext Pre Processor Programming language\"\u003EPHP\u003C\u002Fabbr\u003E in what was called \"Hip Hop VM\" ([HHVM](https:\u002F\u002Fhhvm.com\u002F)).\nAlso, during that epoch, Fabien Potencier had a few releases of Symfony framework\nvia Sensio Labs, the company he founded.\n",date:G},prettyfiedTemporalDate:{prettified:"Monday, July 23, 2012",temporalDate:"2012-07-23"},prev:{locale:Y,title:"Trying to find templating engine library of markup generating schema.org\u002FRDFa content",path:"\u002Fblog\u002F2012\u002F06\u002Ftrying-to-find-templating-engine-library-of-markup-generating-schema-orgrdfa-content",slug:"trying-to-find-templating-engine-library-of-markup-generating-schema-orgrdfa-content"},slug:X,year:"2012"}],fetch:[],mutations:void 0}}("text","element","\n","a","li","nofollow","noopener","noreferrer","_blank","p","code","true",-1,"span","icon","icon-link",3,"strong","h3","ul","abbr","en","PHP",", ","root","nuxt-link",")","Hypertext Pre Processor Programming language","https:\u002F\u002Frenoirboulanger.com\u002Fblog\u002F2012\u002F07\u002Fchoosing-a-framework-how-i-personally-define-what-is-hot-about-them-an-evaluation-process\u002F","web-integration-review","~\u002Fassets\u002Fcontent\u002Fblog\u002F2012\u002F07\u002Feverything-with-php-sauce.png","Everything goes with PHP Sauce","2024-09-12T00:00:00.000Z","objective-behind-this-series","Objective behind this series","my-own-experience","My own experience","warning","Warning","what-i-defines-a-good-project-library-to-use","What I defines a good project library to use","thats-all-for-now","That’s all for now","reference","Reference","http:\u002F\u002Ffabien.potencier.org\u002F","em","h4","People at ","choosing-a-framework-how-i-personally-define-what-is-hot-about-them-an-evaluation-process","fr-CA")));