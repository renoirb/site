__NUXT_JSONP__("/blog/2013/08/procedure-to-create-a-re-usable-configuration-export-script-to-move-virtual-machine-configuration-to-a-new-one", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y){return {data:[{},{},{},{canonical:o,content:{locale:"fr-CA",title:"Procedure to create a re-usable configuration export script to move a virtual machine configuration to a new one",canonical:o,status:"publish",revising:p,migrateCode:p,created:q,updated:q,tags:["linux","logiciel-libre"],categories:[],excerpt:"This procedure guides you through some steps on a way to commission or decomission your web app. At least to move essential configuration files.",toc:[{depth:j,text:r},{depth:j,text:"2. Clone the New VM that will replace the Old"},{depth:j,text:s},{depth:j,text:"3. Prepare the New VM to use the Original VM"},{depth:j,text:t}],body:{type:l,children:[{type:b,tag:h,props:{},children:[{type:a,value:"The following procedure is about deprecating an old Linux server, and \nmove crucial configuration to a new fresh install that has the desired \nconfiguration by cloning it, then applying the "},{type:b,tag:i,props:{},children:[{type:a,value:u}]},{type:a,value:"'s configuration."}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:"The steps will go as follows:"}]},{type:a,value:c},{type:b,tag:"ol",props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Grab the original machine's configuration"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Clone the "},{type:b,tag:i,props:{},children:[{type:a,value:m}]},{type:a,value:v}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Disable the "},{type:b,tag:i,props:{},children:[{type:a,value:u}]},{type:a,value:" web application"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:k,props:{},children:[{type:a,value:r}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:"The steps will create a tar file with the configurations."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Connect to the production vm (morpheus) through the cloud provider console (e.g. vSphere client, or VCloud director webapp or Open Stack console)\n"},{type:b,tag:f,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Connect through Putty, or your local development VM terminal the follwing lines (the console do not share the clipboard)"}]},{type:a,value:c}]}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:"ssh username@morpheus.networkname.net\n"}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Create this file"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:"vi ~\u002Fmake-migrate.sh\n"}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Enter in vim paste mode"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:":set paste\n"}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Paste this content"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:"#!\u002Fbin\u002Fbash \ncd ~ \nmkdir -p ~\u002Fmigrate\u002Fetc\u002Fnetwork \nsudo cp \u002Fetc\u002Fnetwork\u002Finterfaces ~\u002Fmigrate\u002Fetc\u002Fnetwork\u002F \nsudo cp \u002Fetc\u002Fhostname ~\u002Fmigrate\u002Fetc\u002F \nsudo cp \u002Fetc\u002Fresolv.conf ~\u002Fmigrate\u002Fetc\u002F \nmkdir -p ~\u002Fmigrate\u002Fetc\u002Fssh \nsudo cp \u002Fetc\u002Fssh\u002Fssh_host* ~\u002Fmigrate\u002Fetc\u002Fssh\u002F \nmkdir -p ~\u002Fmigrate\u002Fhome\u002Fusername\u002F.ssh \ncp ~\u002F.ssh\u002F* ~\u002Fmigrate\u002Fhome\u002Fusername\u002F.ssh\u002F \nmkdir -p ~\u002Fmigrate\u002Fhome\u002Fusername\u002F_prod\u002Fapp\u002Fconfig \ncp ~\u002F_prod\u002Fapp\u002Fconfig\u002Fparameters.ini ~\u002Fmigrate\u002Fhome\u002Fusername\u002F_prod\u002Fapp\u002Fconfig \nmkdir -p ~\u002Fmigrate\u002Fetc\u002Fapache2\u002Fsites-available \nsudo cp \u002Fetc\u002Fapache2\u002Fsites-available\u002F* ~\u002Fmigrate\u002Fetc\u002Fapache2\u002Fsites-available\u002F \nsudo cp \u002Fetc\u002Fresolv.conf ~\u002Fmigrate\u002Fetc\u002F \nsudo chown -R username:username ~\u002Fmigrate \ntar cfz ~\u002Fmigrate.tar.gz ~\u002Fmigrate \nmv migrate.tar.gz _prod\u002Fweb\u002F\n"}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Execute it"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:"\u002Fbin\u002Fbash ~\u002Fmake-migrate.sh\n"}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"The latter moves into the "}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Download https:\u002F\u002Fmorpheus.networkname.net\u002Fmigrate.tar.gz"}]},{type:a,value:c}]},{type:a,value:c},{type:a,value:c},{type:b,tag:k,props:{},children:[{type:a,value:"2. Clone the "},{type:b,tag:i,props:{},children:[{type:a,value:m}]},{type:a,value:v}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:"This step is about cloning the functionnal VM."}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:"Since it is specific to your cloud management system, I will not describe any way to do so."}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:"Important points to consider while doing so, ensure that you:"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"disable or isolate networking"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"have access to an alternate console"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:"Otherwise you might just create conflicts."}]},{type:a,value:c},{type:b,tag:k,props:{},children:[{type:a,value:s}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:"You should have a copy of the original VM (e.g. morpheus-stg) with the config working the way you want."}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:"This step is specific to the way you might commission or decomission your web app."}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:"You may even not need to decomission it if you have multiple database servers not on the same host."}]},{type:a,value:c},{type:b,tag:k,props:{},children:[{type:a,value:"3. Prepare the "},{type:b,tag:i,props:{},children:[{type:a,value:m}]},{type:a,value:" to use the "},{type:b,tag:i,props:{},children:[{type:a,value:"Original VM"}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Start the cloned VM"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Connect through the vCenter console"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Download the file, sorry, no cut in paste in the cloud provider console :("}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Assuming you are in "},{type:b,tag:e,props:{},children:[{type:a,value:"\u002Fhome\u002Fusername"}]}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:"pwd\n\u002Fhome\u002Fusername\nwget --no-check-certificate https:\u002F\u002Fmorpheus.networkname.net\u002Fmigrate.tar.gz\n"}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Get the migrate folder from the extracted archive (it will be in a 'home' folder after extracting)"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:"tar xfz migrate.tar.gz\nmv home\u002Fusername\u002Fmigrate .\nrm -rf home\n"}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Disable the network configuration"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:"  sudo \u002Fetc\u002Finit.d\u002Fnetworking stop\n"}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Run the following commands:\n"},{type:b,tag:f,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Echo the content of the files inside the "},{type:b,tag:e,props:{},children:[{type:a,value:"migrate\u002F"}]},{type:a,value:" folder, into their original locations"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"See the file  listing:"}]},{type:a,value:c}]}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:"find migrate\u002F -type f\n"}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Create the migrate file original contents"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:"cd migrate\nfind . -type f \u003E prepare.sh\n"}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Warning, the following commands we will be using vim to prepare our import script, follow the keyboard types in that sequence:"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:"vim prepare.sh\n"}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"(in the top left corner, where it starts), do:"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"NOTE: "},{type:b,tag:i,props:{},children:[{type:b,tag:i,props:{},children:[{type:a,value:"FOLLOW BLINDLY THOSE VIM COMMANDS"}]}]},{type:a,value:" ... they written in the form of {modifier key}+{letter}, such as: CTRL+v, SHIFT+A, means the key combination like you would on a Graphical user interface, the + in this list is only to mean together."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:"dd\nCTRL+v\n100j\n$\ny\nSHIFT+A\n"}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Add a few spaces, to make the cursor go further than the longest line"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:"ESC\np\n"}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"The following commands, you have to be in ESC mode, and press ENTER when finished:"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:":%s\u002F  \\.\u002F \u002F\n:%s\u002F\\.\u002Fcp \\.\u002F\n"}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"All is done, write and quit"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:":wq\n"}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Check the file"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:"cat prepare.sh\n"}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"You will end up with a file similar to"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:"cp .\u002Fhome\u002Fusername\u002F_prod\u002Fapp\u002Fconfig\u002Fparameters.ini    \u002Fhome\u002Fusername\u002F_prod\u002Fapp\u002Fconfig\u002Fparameters.ini  \ncp .\u002Fhome\u002Fusername\u002F.ssh\u002Fid_rsa                        \u002Fhome\u002Fusername\u002F.ssh\u002Fid_rsa  \ncp .\u002Fhome\u002Fusername\u002F.ssh\u002Fgeritt_dsa.pub                \u002Fhome\u002Fusername\u002F.ssh\u002Fgeritt_dsa.pub  \ncp .\u002Fhome\u002Fusername\u002F.ssh\u002Fgeritt_dsa                    \u002Fhome\u002Fusername\u002F.ssh\u002Fgeritt_dsa  \ncp .\u002Fhome\u002Fusername\u002F.ssh\u002Fauthorized_keys2              \u002Fhome\u002Fusername\u002F.ssh\u002Fauthorized_keys2  \ncp .\u002Fhome\u002Fusername\u002F.ssh\u002Fconfig                        \u002Fhome\u002Fusername\u002F.ssh\u002Fconfig  \ncp .\u002Fhome\u002Fusername\u002F.ssh\u002Fknown_hosts                   \u002Fhome\u002Fusername\u002F.ssh\u002Fknown_hosts \ncp .\u002Fhome\u002Fusername\u002F.ssh\u002Fid_rsa.pub                    \u002Fhome\u002Fusername\u002F.ssh\u002Fid_rsa.pub \ncp .\u002Fetc\u002Fssh\u002Fssh_host_rsa_key.pub                     \u002Fetc\u002Fssh\u002Fssh_host_rsa_key.pub  \ncp .\u002Fetc\u002Fssh\u002Fssh_host_dsa_key                         \u002Fetc\u002Fssh\u002Fssh_host_dsa_key \ncp .\u002Fetc\u002Fssh\u002Fssh_host_dsa_key.pub                     \u002Fetc\u002Fssh\u002Fssh_host_dsa_key.pub  \ncp .\u002Fetc\u002Fssh\u002Fssh_host_ecdsa_key.pub                   \u002Fetc\u002Fssh\u002Fssh_host_ecdsa_key.pub \ncp .\u002Fetc\u002Fssh\u002Fssh_host_rsa_key                         \u002Fetc\u002Fssh\u002Fssh_host_rsa_key  \ncp .\u002Fetc\u002Fssh\u002Fssh_host_ecdsa_key                       \u002Fetc\u002Fssh\u002Fssh_host_ecdsa_key \ncp .\u002Fetc\u002Fhostname                                     \u002Fetc\u002Fhostname  \ncp .\u002Fetc\u002Fresolv.conf                                  \u002Fetc\u002Fresolv.conf  \ncp .\u002Fetc\u002Fnetwork\u002Finterfaces                           \u002Fetc\u002Fnetwork\u002Finterfaces\n"}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Execute that newly created script, first check you are in "},{type:b,tag:e,props:{},children:[{type:a,value:"\u002Fhome\u002Fusername\u002Fmigrate"}]}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:"pwd\n\u002Fhome\u002Fusername\u002Fmigrate\n"}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"We'll run as root"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:"sudo -s\n"}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Echo a file or two, to test BEFORE-\u003EAFTER"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:"cat \u002Fetc\u002Fnetwork\u002Finterfaces\n...\ncat \u002Fetc\u002Fhostname\nmorpheus-stg\n"}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Now, run the file"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:"\u002Fbin\u002Fbash .\u002Fprepare.sh\n"}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"they should be different :)"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:"cat \u002Fetc\u002Fnetwork\u002Finterfaces\n...\ncat \u002Fetc\u002Fhostname\nmorpheus.networkname.net\n"}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Make sure the "},{type:b,tag:e,props:{},children:[{type:a,value:"\u002Fetc\u002Fhosts"}]},{type:a,value:" file reflects, and points at "},{type:b,tag:e,props:{},children:[{type:a,value:"127.0.0.1"}]}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:"127.0.0.1   localhost morpheus.networkname.net morpheus\n"}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"You can use vim regex like so:"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:"sudo vim \u002Fetc\u002Fhosts\n:%s\u002Fmorpheus-stg\u002Fmorpheus\u002F\n:wq\n"}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Use apache command tools to disable the old site and enable the prod ones:"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:"sudo ll \u002Fetc\u002Fapache\u002Fsites-available\n...\n-rw-r--r-- 1 root root 1052 Feb 20 19:19 \u002Fetc\u002Fapache2\u002Fsites-available\u002Fdefault\n-rw-r--r-- 1 root root 7469 Feb  6  2012 \u002Fetc\u002Fapache2\u002Fsites-available\u002Fdefault-ssl\n-rw-r--r-- 1 root root 1917 Feb 20 15:48 \u002Fetc\u002Fapache2\u002Fsites-available\u002Fssl\n"}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Enable only "},{type:b,tag:e,props:{},children:[{type:a,value:"ssl"}]},{type:a,value:", and "},{type:b,tag:e,props:{},children:[{type:a,value:"default"}]},{type:a,value:" (NOT '"},{type:b,tag:e,props:{},children:[{type:a,value:"default-ssl"}]},{type:a,value:"')"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:"sudo a2dissite\n10-project.local.conf\nsudo a2ensite\ndefault ssl\n"}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Restart the server"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:"sudo service apache2 restart\n"}]}]},{type:a,value:c},{type:b,tag:k,props:{},children:[{type:a,value:t}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:"This is, again, specific to the way you might commission or decomission your web app"}]}]},text:"---\nlocale: fr-CA\ntitle: \u003E-\n  Procedure to create a re-usable configuration export script to move a virtual\n  machine configuration to a new one\ncanonical: \u003E-\n  https:\u002F\u002Frenoirboulanger.com\u002Fblog\u002F2013\u002F08\u002Fprocedure-to-create-a-re-usable-configuration-export-script-to-move-virtual-machine-configuration-to-a-new-one\u002F\nstatus: publish\nrevising: true\nmigrateCode: true\ncreated: '2013-08-07'\nupdated: '2013-08-07'\ntags:\n  - linux\n  - logiciel-libre\ncategories: []\nexcerpt: \u003E-\n  This procedure guides you through some steps on a way to commission or\n  decomission your web app. At least to move essential configuration files.\n---\n\n\u003Cp\u003EThe following procedure is about deprecating an old Linux server, and \nmove crucial configuration to a new fresh install that has the desired \nconfiguration by cloning it, then applying the \u003Cem\u003EOld VM\u003C\u002Fem\u003E's configuration.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThe steps will go as follows:\u003C\u002Fp\u003E\n\n\u003Col\u003E\n\u003Cli\u003EGrab the original machine's configuration\u003C\u002Fli\u003E\n\u003Cli\u003EClone the \u003Cem\u003ENew VM\u003C\u002Fem\u003E that will replace the Old\u003C\u002Fli\u003E\n\u003Cli\u003EDisable the \u003Cem\u003EOld VM\u003C\u002Fem\u003E web application\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\n\u003Ch3\u003E1. Grab the original machine's configuration\u003C\u002Fh3\u003E\n\n\u003Cp\u003EThe steps will create a tar file with the configurations.\u003C\u002Fp\u003E\n\n\u003Cul\u003E\n\u003Cli\u003EConnect to the production vm (morpheus) through the cloud provider console (e.g. vSphere client, or VCloud director webapp or Open Stack console)\n\n\u003Cul\u003E\n\u003Cli\u003EConnect through Putty, or your local development VM terminal the follwing lines (the console do not share the clipboard)\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cpre\u003E\u003Ccode\u003Essh username@morpheus.networkname.net\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\u003Cul\u003E\n\u003Cli\u003ECreate this file\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cpre\u003E\u003Ccode\u003Evi ~\u002Fmake-migrate.sh\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\u003Cul\u003E\n\u003Cli\u003EEnter in vim paste mode\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cpre\u003E\u003Ccode\u003E:set paste\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\u003Cul\u003E\n\u003Cli\u003EPaste this content\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cpre\u003E\u003Ccode\u003E#!\u002Fbin\u002Fbash \ncd ~ \nmkdir -p ~\u002Fmigrate\u002Fetc\u002Fnetwork \nsudo cp \u002Fetc\u002Fnetwork\u002Finterfaces ~\u002Fmigrate\u002Fetc\u002Fnetwork\u002F \nsudo cp \u002Fetc\u002Fhostname ~\u002Fmigrate\u002Fetc\u002F \nsudo cp \u002Fetc\u002Fresolv.conf ~\u002Fmigrate\u002Fetc\u002F \nmkdir -p ~\u002Fmigrate\u002Fetc\u002Fssh \nsudo cp \u002Fetc\u002Fssh\u002Fssh_host* ~\u002Fmigrate\u002Fetc\u002Fssh\u002F \nmkdir -p ~\u002Fmigrate\u002Fhome\u002Fusername\u002F.ssh \ncp ~\u002F.ssh\u002F* ~\u002Fmigrate\u002Fhome\u002Fusername\u002F.ssh\u002F \nmkdir -p ~\u002Fmigrate\u002Fhome\u002Fusername\u002F_prod\u002Fapp\u002Fconfig \ncp ~\u002F_prod\u002Fapp\u002Fconfig\u002Fparameters.ini ~\u002Fmigrate\u002Fhome\u002Fusername\u002F_prod\u002Fapp\u002Fconfig \nmkdir -p ~\u002Fmigrate\u002Fetc\u002Fapache2\u002Fsites-available \nsudo cp \u002Fetc\u002Fapache2\u002Fsites-available\u002F* ~\u002Fmigrate\u002Fetc\u002Fapache2\u002Fsites-available\u002F \nsudo cp \u002Fetc\u002Fresolv.conf ~\u002Fmigrate\u002Fetc\u002F \nsudo chown -R username:username ~\u002Fmigrate \ntar cfz ~\u002Fmigrate.tar.gz ~\u002Fmigrate \nmv migrate.tar.gz _prod\u002Fweb\u002F\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\u003Cul\u003E\n\u003Cli\u003EExecute it\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cpre\u003E\u003Ccode\u003E\u002Fbin\u002Fbash ~\u002Fmake-migrate.sh\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\u003Cul\u003E\n\u003Cli\u003EThe latter moves into the \u003C\u002Fli\u003E\n\u003Cli\u003EDownload https:\u002F\u002Fmorpheus.networkname.net\u002Fmigrate.tar.gz\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003C!--#TODO-Import-Code-From-External--\u003E\n\n\u003Ch3\u003E2. Clone the \u003Cem\u003ENew VM\u003C\u002Fem\u003E that will replace the Old\u003C\u002Fh3\u003E\n\n\u003Cp\u003EThis step is about cloning the functionnal VM.\u003C\u002Fp\u003E\n\n\u003Cp\u003ESince it is specific to your cloud management system, I will not describe any way to do so.\u003C\u002Fp\u003E\n\n\u003Cp\u003EImportant points to consider while doing so, ensure that you:\u003C\u002Fp\u003E\n\n\u003Cul\u003E\n\u003Cli\u003Edisable or isolate networking\u003C\u002Fli\u003E\n\u003Cli\u003Ehave access to an alternate console\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cp\u003EOtherwise you might just create conflicts.\u003C\u002Fp\u003E\n\n\u003Ch3\u003E2. Render the production machine unavailable\u003C\u002Fh3\u003E\n\n\u003Cp\u003EYou should have a copy of the original VM (e.g. morpheus-stg) with the config working the way you want.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThis step is specific to the way you might commission or decomission your web app.\u003C\u002Fp\u003E\n\n\u003Cp\u003EYou may even not need to decomission it if you have multiple database servers not on the same host.\u003C\u002Fp\u003E\n\n\u003Ch3\u003E3. Prepare the \u003Cem\u003ENew VM\u003C\u002Fem\u003E to use the \u003Cem\u003EOriginal VM\u003C\u002Fem\u003E\u003C\u002Fh3\u003E\n\n\u003Cul\u003E\n\u003Cli\u003EStart the cloned VM\u003C\u002Fli\u003E\n\u003Cli\u003EConnect through the vCenter console\u003C\u002Fli\u003E\n\u003Cli\u003EDownload the file, sorry, no cut in paste in the cloud provider console :(\u003C\u002Fli\u003E\n\u003Cli\u003EAssuming you are in \u003Ccode\u003E\u002Fhome\u002Fusername\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cpre\u003E\u003Ccode\u003Epwd\n\u002Fhome\u002Fusername\nwget --no-check-certificate https:\u002F\u002Fmorpheus.networkname.net\u002Fmigrate.tar.gz\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\u003Cul\u003E\n\u003Cli\u003EGet the migrate folder from the extracted archive (it will be in a 'home' folder after extracting)\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cpre\u003E\u003Ccode\u003Etar xfz migrate.tar.gz\nmv home\u002Fusername\u002Fmigrate .\nrm -rf home\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\u003Cul\u003E\n\u003Cli\u003EDisable the network configuration\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cpre\u003E\u003Ccode\u003E  sudo \u002Fetc\u002Finit.d\u002Fnetworking stop\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\u003Cul\u003E\n\u003Cli\u003ERun the following commands:\n\n\u003Cul\u003E\n\u003Cli\u003EEcho the content of the files inside the \u003Ccode\u003Emigrate\u002F\u003C\u002Fcode\u003E folder, into their original locations\u003C\u002Fli\u003E\n\u003Cli\u003ESee the file  listing:\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cpre\u003E\u003Ccode\u003Efind migrate\u002F -type f\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\u003Cul\u003E\n\u003Cli\u003ECreate the migrate file original contents\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cpre\u003E\u003Ccode\u003Ecd migrate\nfind . -type f &gt; prepare.sh\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\u003Cul\u003E\n\u003Cli\u003EWarning, the following commands we will be using vim to prepare our import script, follow the keyboard types in that sequence:\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cpre\u003E\u003Ccode\u003Evim prepare.sh\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\u003Cul\u003E\n\u003Cli\u003E(in the top left corner, where it starts), do:\u003C\u002Fli\u003E\n\u003Cli\u003ENOTE: \u003Cem\u003E\u003Cem\u003EFOLLOW BLINDLY THOSE VIM COMMANDS\u003C\u002Fem\u003E\u003C\u002Fem\u003E ... they written in the form of {modifier key}+{letter}, such as: CTRL+v, SHIFT+A, means the key combination like you would on a Graphical user interface, the + in this list is only to mean together.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cpre\u003E\u003Ccode\u003Edd\nCTRL+v\n100j\n$\ny\nSHIFT+A\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\u003Cul\u003E\n\u003Cli\u003EAdd a few spaces, to make the cursor go further than the longest line\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cpre\u003E\u003Ccode\u003EESC\np\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\u003Cul\u003E\n\u003Cli\u003EThe following commands, you have to be in ESC mode, and press ENTER when finished:\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cpre\u003E\u003Ccode\u003E:%s\u002F  \\.\u002F \u002F\n:%s\u002F\\.\u002Fcp \\.\u002F\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\u003Cul\u003E\n\u003Cli\u003EAll is done, write and quit\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cpre\u003E\u003Ccode\u003E:wq\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\u003Cul\u003E\n\u003Cli\u003ECheck the file\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cpre\u003E\u003Ccode\u003Ecat prepare.sh\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\u003Cul\u003E\n\u003Cli\u003EYou will end up with a file similar to\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cpre\u003E\u003Ccode\u003Ecp .\u002Fhome\u002Fusername\u002F_prod\u002Fapp\u002Fconfig\u002Fparameters.ini    \u002Fhome\u002Fusername\u002F_prod\u002Fapp\u002Fconfig\u002Fparameters.ini  \ncp .\u002Fhome\u002Fusername\u002F.ssh\u002Fid_rsa                        \u002Fhome\u002Fusername\u002F.ssh\u002Fid_rsa  \ncp .\u002Fhome\u002Fusername\u002F.ssh\u002Fgeritt_dsa.pub                \u002Fhome\u002Fusername\u002F.ssh\u002Fgeritt_dsa.pub  \ncp .\u002Fhome\u002Fusername\u002F.ssh\u002Fgeritt_dsa                    \u002Fhome\u002Fusername\u002F.ssh\u002Fgeritt_dsa  \ncp .\u002Fhome\u002Fusername\u002F.ssh\u002Fauthorized_keys2              \u002Fhome\u002Fusername\u002F.ssh\u002Fauthorized_keys2  \ncp .\u002Fhome\u002Fusername\u002F.ssh\u002Fconfig                        \u002Fhome\u002Fusername\u002F.ssh\u002Fconfig  \ncp .\u002Fhome\u002Fusername\u002F.ssh\u002Fknown_hosts                   \u002Fhome\u002Fusername\u002F.ssh\u002Fknown_hosts \ncp .\u002Fhome\u002Fusername\u002F.ssh\u002Fid_rsa.pub                    \u002Fhome\u002Fusername\u002F.ssh\u002Fid_rsa.pub \ncp .\u002Fetc\u002Fssh\u002Fssh_host_rsa_key.pub                     \u002Fetc\u002Fssh\u002Fssh_host_rsa_key.pub  \ncp .\u002Fetc\u002Fssh\u002Fssh_host_dsa_key                         \u002Fetc\u002Fssh\u002Fssh_host_dsa_key \ncp .\u002Fetc\u002Fssh\u002Fssh_host_dsa_key.pub                     \u002Fetc\u002Fssh\u002Fssh_host_dsa_key.pub  \ncp .\u002Fetc\u002Fssh\u002Fssh_host_ecdsa_key.pub                   \u002Fetc\u002Fssh\u002Fssh_host_ecdsa_key.pub \ncp .\u002Fetc\u002Fssh\u002Fssh_host_rsa_key                         \u002Fetc\u002Fssh\u002Fssh_host_rsa_key  \ncp .\u002Fetc\u002Fssh\u002Fssh_host_ecdsa_key                       \u002Fetc\u002Fssh\u002Fssh_host_ecdsa_key \ncp .\u002Fetc\u002Fhostname                                     \u002Fetc\u002Fhostname  \ncp .\u002Fetc\u002Fresolv.conf                                  \u002Fetc\u002Fresolv.conf  \ncp .\u002Fetc\u002Fnetwork\u002Finterfaces                           \u002Fetc\u002Fnetwork\u002Finterfaces\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\u003Cul\u003E\n\u003Cli\u003EExecute that newly created script, first check you are in \u003Ccode\u003E\u002Fhome\u002Fusername\u002Fmigrate\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cpre\u003E\u003Ccode\u003Epwd\n\u002Fhome\u002Fusername\u002Fmigrate\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\u003Cul\u003E\n\u003Cli\u003EWe'll run as root\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cpre\u003E\u003Ccode\u003Esudo -s\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\u003Cul\u003E\n\u003Cli\u003EEcho a file or two, to test BEFORE-\u003EAFTER\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cpre\u003E\u003Ccode\u003Ecat \u002Fetc\u002Fnetwork\u002Finterfaces\n...\ncat \u002Fetc\u002Fhostname\nmorpheus-stg\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\u003Cul\u003E\n\u003Cli\u003ENow, run the file\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cpre\u003E\u003Ccode\u003E\u002Fbin\u002Fbash .\u002Fprepare.sh\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\u003Cul\u003E\n\u003Cli\u003Ethey should be different :)\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cpre\u003E\u003Ccode\u003Ecat \u002Fetc\u002Fnetwork\u002Finterfaces\n...\ncat \u002Fetc\u002Fhostname\nmorpheus.networkname.net\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\u003Cul\u003E\n\u003Cli\u003EMake sure the \u003Ccode\u003E\u002Fetc\u002Fhosts\u003C\u002Fcode\u003E file reflects, and points at \u003Ccode\u003E127.0.0.1\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cpre\u003E\u003Ccode\u003E127.0.0.1   localhost morpheus.networkname.net morpheus\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\u003Cul\u003E\n\u003Cli\u003EYou can use vim regex like so:\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cpre\u003E\u003Ccode\u003Esudo vim \u002Fetc\u002Fhosts\n:%s\u002Fmorpheus-stg\u002Fmorpheus\u002F\n:wq\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\u003Cul\u003E\n\u003Cli\u003EUse apache command tools to disable the old site and enable the prod ones:\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cpre\u003E\u003Ccode\u003Esudo ll \u002Fetc\u002Fapache\u002Fsites-available\n...\n-rw-r--r-- 1 root root 1052 Feb 20 19:19 \u002Fetc\u002Fapache2\u002Fsites-available\u002Fdefault\n-rw-r--r-- 1 root root 7469 Feb  6  2012 \u002Fetc\u002Fapache2\u002Fsites-available\u002Fdefault-ssl\n-rw-r--r-- 1 root root 1917 Feb 20 15:48 \u002Fetc\u002Fapache2\u002Fsites-available\u002Fssl\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\u003Cul\u003E\n\u003Cli\u003EEnable only \u003Ccode\u003Essl\u003C\u002Fcode\u003E, and \u003Ccode\u003Edefault\u003C\u002Fcode\u003E (NOT '\u003Ccode\u003Edefault-ssl\u003C\u002Fcode\u003E')\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cpre\u003E\u003Ccode\u003Esudo a2dissite\n10-project.local.conf\nsudo a2ensite\ndefault ssl\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\u003Cul\u003E\n\u003Cli\u003ERestart the server\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cpre\u003E\u003Ccode\u003Esudo service apache2 restart\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\u003Ch3\u003E3. Decomission the original, use the new VM as the new Production\u003C\u002Fh3\u003E\n\n\u003Cp\u003EThis is, again, specific to the way you might commission or decomission your web app\u003C\u002Fp\u003E",dir:"\u002Fblog\u002F2013\u002F08",path:"\u002Fblog\u002F2013\u002F08\u002Fprocedure-to-create-a-re-usable-configuration-export-script-to-move-virtual-machine-configuration-to-a-new-one",extension:".md",slug:w,createdAt:x,updatedAt:x,category:n},coverImage:{toc:[],body:{type:l,children:[]},text:n},month:"08",next:{locale:y,title:"How to create a patch and ensure it is applied within Salt Stack",path:"\u002Fblog\u002F2013\u002F09\u002Fhow-to-create-a-patch-and-ensure-it-is-applied-within-salt-stack",slug:"how-to-create-a-patch-and-ensure-it-is-applied-within-salt-stack"},preamble:{toc:[],body:{type:l,children:[]},text:n},prettyfiedTemporalDate:{prettified:"mercredi 7 août 2013",temporalDate:q},prev:{title:"I am joining W3C to work on the WebPlatform project!",locale:y,path:"\u002Fblog\u002F2013\u002F08\u002Fi-am-joining-w3c-to-work-on-the-webplatform-project",slug:"i-am-joining-w3c-to-work-on-the-webplatform-project"},slug:w,year:"2013"}],fetch:[],mutations:void 0}}("text","element","\n","li","code","ul","pre","p","em",3,"h3","root","New VM","","https:\u002F\u002Frenoirboulanger.com\u002Fblog\u002F2013\u002F08\u002Fprocedure-to-create-a-re-usable-configuration-export-script-to-move-virtual-machine-configuration-to-a-new-one\u002F",true,"2013-08-07","1. Grab the original machine's configuration","2. Render the production machine unavailable","3. Decomission the original, use the new VM as the new Production","Old VM"," that will replace the Old","procedure-to-create-a-re-usable-configuration-export-script-to-move-virtual-machine-configuration-to-a-new-one","2024-10-24T19:43:51.719Z","en-CA")));