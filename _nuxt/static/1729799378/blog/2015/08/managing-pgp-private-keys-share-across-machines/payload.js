__NUXT_JSONP__("/blog/2015/08/managing-pgp-private-keys-share-across-machines", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){return {data:[{},{},{},{canonical:o,content:{title:"Managing my PGP\u002FOpenPGP keys and share across many machines",locale:l,created:"2015-08-06T00:00:00.000Z",updated:"2023-02-18T00:00:00.000Z",canonical:o,status:"publish",revising:k,migrateLinks:m,migrateImages:k,gallery:k,caption:k,categories:[p],tags:["linux","vulgarization","operations","security","webplatform"],keywords:["PGP","subkey","OpenPGP"],excerpt:"A solution to the idea of sharing PGP private keys without risking to lose everything if one of the machines you shared it had been accessed.",preamble:{disable:m,text:q},toc:[],body:{type:n,children:[{type:b,tag:d,props:{},children:[{type:a,value:"With "},{type:b,tag:"nuxt-link",props:{to:"\u002Fblog\u002F2015\u002F07\u002Fleaving-w3c\u002F"},children:[{type:a,value:"my previous position just finished"}]},{type:a,value:", I'm cleaning up my credential data\nI've stored on my computer. While doing so, I needed to update my PGP keys and I\nlearned something that I'm glad existed."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"When you use PGP to encrypt and\u002For sign your messages, you can only read\nmessages sent to you from the machine you have the private key. Right?"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"The obvious solution would be to copy that private key everywhere; You mobile,\nservers, laptops."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"WRONG!"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"The problem is that security experts would say that you shouldn't do that unless\nyou are certain things are \"safe\". But what is safe anyway, once somebody else,\nor a zombie process, accessed your machine, it's possible somebody gained access\nto your keys."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"OpenPGP has a way to address this issue and it's called \"SubKeys\". Quoting\n"},{type:b,tag:e,props:{href:"https:\u002F\u002Fwww.gnupg.org\u002Fgph\u002Fen\u002Fmanual.html#AEN526",rel:[f,g,h],target:i},children:[{type:a,value:"gnupg.org manual"}]}]},{type:a,value:c},{type:b,tag:"blockquote",props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"By default, a DSA master signing key and an ElGamal encryption subkey are\ngenerated when you create a new keypair. This is convenient, because the roles\nof the two keys are different, (...). The master signing key is used to make\ndigital signatures (...). The encryption key is used only for decrypting\nencrypted documents sent to you."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"This made me think I should make sure that I create a subkey, backup my main\nidentity, erase any traces of it from my main computer, then import the new\nsubkey."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"That way, I would only need to use the main key to update the data on key\nservers and to edit my keys."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"A nice effect of this way of working is that we can revoke a subkey. Since\nsubkeys, signatures and revocation are part of the public key that you sync with\nkey on keyservers, you can make the compromised subkey invalid."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"The compromised key will be able to decrypt messages sent for that private\nsubkey, provided the attacker can also gain access to where the messages are\nstored, but you won't lose the most important part of the identity system.\nYou'll be able to create another subkey and keep the same identity."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"I hope I got it right. If I'm wrong, don't hesitate to tell me and I'll adjust!"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"I got to read more about all of this, but I am glad I learned about subkeys."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Here are some notes I found that helped me understand this all better."}]},{type:a,value:c},{type:b,tag:"ul",props:{},children:[{type:a,value:c},{type:b,tag:j,props:{},children:[{type:b,tag:e,props:{href:"https:\u002F\u002Falexcabal.com\u002Fcreating-the-perfect-gpg-keypair\u002F",rel:[f,g,h],target:i},children:[{type:a,value:"AlexCabal: Creating the perfect GPG keypair"}]}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:b,tag:e,props:{href:"https:\u002F\u002Fwiki.debian.org\u002FSubkeys",rel:[f,g,h],target:i},children:[{type:a,value:"Debian Wiki: Using OpenPGP subkeys"}]}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:b,tag:e,props:{href:"http:\u002F\u002Firtfweb.ifa.hawaii.edu\u002F~lockhart\u002Fgpg\u002F",rel:[f,g,h],target:i},children:[{type:a,value:"GPG quick cheat sheet"}]}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:b,tag:e,props:{href:"https:\u002F\u002Fsuperuser.com\u002Fquestions\u002F466396\u002Fhow-to-manage-gpg-keys-across-multiple-systems",rel:[f,g,h],target:i},children:[{type:a,value:"SuperUser: How to manage GPG keys across multiple systems"}]}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:b,tag:e,props:{href:"https:\u002F\u002Fhelp.riseup.net\u002Fen\u002Fsecurity\u002Fmessage-security\u002Fopenpgp\u002Fbest-practices",rel:[f,g,h],target:i},children:[{type:a,value:"OpenPGP best practices"}]}]},{type:a,value:c}]}]},text:"---\ntitle: Managing my PGP\u002FOpenPGP keys and share across many machines\nlocale: en-CA\ncreated: 2015-08-06\nupdated: 2023-02-18\ncanonical: \u003E-\n  https:\u002F\u002Frenoirboulanger.com\u002Fblog\u002F2015\u002F08\u002Fmanaging-pgp-private-keys-share-across-machines\u002F\nstatus: publish\nrevising: false\nmigrateLinks: true\nmigrateImages: false\ngallery: false\ncaption: false\ncategories:\n  - procedure\ntags:\n  - linux\n  - vulgarization\n  - operations\n  - security\n  - webplatform\nkeywords:\n  - PGP\n  - subkey\n  - OpenPGP\nexcerpt: \u003E-\n  A solution to the idea of sharing PGP private keys without risking to lose\n  everything if one of the machines you shared it had been accessed.\npreamble:\n  disable: true\n  text: ' '\n---\n\nWith [my previous position just finished][0], I'm cleaning up my credential data\nI've stored on my computer. While doing so, I needed to update my PGP keys and I\nlearned something that I'm glad existed.\n\nWhen you use PGP to encrypt and\u002For sign your messages, you can only read\nmessages sent to you from the machine you have the private key. Right?\n\nThe obvious solution would be to copy that private key everywhere; You mobile,\nservers, laptops.\n\nWRONG!\n\nThe problem is that security experts would say that you shouldn't do that unless\nyou are certain things are \"safe\". But what is safe anyway, once somebody else,\nor a zombie process, accessed your machine, it's possible somebody gained access\nto your keys.\n\nOpenPGP has a way to address this issue and it's called \"SubKeys\". Quoting\n[gnupg.org manual][1]\n\n\u003E By default, a DSA master signing key and an ElGamal encryption subkey are\n\u003E generated when you create a new keypair. This is convenient, because the roles\n\u003E of the two keys are different, (...). The master signing key is used to make\n\u003E digital signatures (...). The encryption key is used only for decrypting\n\u003E encrypted documents sent to you.\n\nThis made me think I should make sure that I create a subkey, backup my main\nidentity, erase any traces of it from my main computer, then import the new\nsubkey.\n\nThat way, I would only need to use the main key to update the data on key\nservers and to edit my keys.\n\nA nice effect of this way of working is that we can revoke a subkey. Since\nsubkeys, signatures and revocation are part of the public key that you sync with\nkey on keyservers, you can make the compromised subkey invalid.\n\nThe compromised key will be able to decrypt messages sent for that private\nsubkey, provided the attacker can also gain access to where the messages are\nstored, but you won't lose the most important part of the identity system.\nYou'll be able to create another subkey and keep the same identity.\n\nI hope I got it right. If I'm wrong, don't hesitate to tell me and I'll adjust!\n\nI got to read more about all of this, but I am glad I learned about subkeys.\n\nHere are some notes I found that helped me understand this all better.\n\n- [AlexCabal: Creating the perfect GPG keypair][2]\n- [Debian Wiki: Using OpenPGP subkeys][3]\n- [GPG quick cheat sheet][4]\n- [SuperUser: How to manage GPG keys across multiple systems][5]\n- [OpenPGP best practices][6]\n\n[0]: \u002Fblog\u002F2015\u002F07\u002Fleaving-w3c\u002F\n[1]: https:\u002F\u002Fwww.gnupg.org\u002Fgph\u002Fen\u002Fmanual.html#AEN526\n[2]: https:\u002F\u002Falexcabal.com\u002Fcreating-the-perfect-gpg-keypair\u002F\n[3]: https:\u002F\u002Fwiki.debian.org\u002FSubkeys\n[4]: http:\u002F\u002Firtfweb.ifa.hawaii.edu\u002F~lockhart\u002Fgpg\u002F\n[5]:\n  https:\u002F\u002Fsuperuser.com\u002Fquestions\u002F466396\u002Fhow-to-manage-gpg-keys-across-multiple-systems\n[6]: https:\u002F\u002Fhelp.riseup.net\u002Fen\u002Fsecurity\u002Fmessage-security\u002Fopenpgp\u002Fbest-practices\n",dir:"\u002Fblog\u002F2015\u002F08",path:"\u002Fblog\u002F2015\u002F08\u002Fmanaging-pgp-private-keys-share-across-machines",extension:".md",slug:r,createdAt:s,updatedAt:s,category:p},coverImage:{toc:[],body:{type:n,children:[]},text:""},month:"08",next:{title:"Thoughts about improving load resiliency for CMS driven Websites",locale:l,path:"\u002Fblog\u002F2015\u002F08\u002Fthoughts-improving-load-resiliency-cms-driven-websites",slug:"thoughts-improving-load-resiliency-cms-driven-websites"},preamble:{toc:[],body:{type:n,children:[]},text:q,disable:m},prettyfiedTemporalDate:{prettified:"Thursday, August 6, 2015",temporalDate:"2015-08-06"},prev:{title:"Leaving W3C",locale:l,path:"\u002Fblog\u002F2015\u002F07\u002Fleaving-w3c",slug:"leaving-w3c"},slug:r,year:"2015"}],fetch:[],mutations:void 0}}("text","element","\n","p","a","nofollow","noopener","noreferrer","_blank","li",false,"en-CA",true,"root","https:\u002F\u002Frenoirboulanger.com\u002Fblog\u002F2015\u002F08\u002Fmanaging-pgp-private-keys-share-across-machines\u002F","procedure"," ","managing-pgp-private-keys-share-across-machines","2024-10-24T19:43:51.728Z")));