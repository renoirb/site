__NUXT_JSONP__("/blog/2015/05/make-discourse-long-polling-work-behind-fastly", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai){return {data:[{},{},{},{canonical:K,content:{title:"Make Discourse “long polling” work behind Fastly or Varnish",locale:A,created:"2015-05-03T00:00:00.000Z",updated:"2023-02-18T00:00:00.000Z",canonical:K,status:"publish",revising:u,caption:B,caracteresBizzares:B,gallery:B,migrateCode:u,migrateImages:u,migrateLinks:u,categories:[L],tags:["linux","operations","webplatform","cloud-computing"],keywords:["Discourse","Docker","Fastly","Long Polling behind Varnish","Varnish"],excerpt:"In the Discourse forums, if you’ve seen something saying that you have to provide a different origin to make long polling work, maybe you didn’t understand what you have to do. Here are the details of why and how to do it correctly.",coverImage:{src:M,text:N},preamble:{text:O},toc:[{id:P,depth:2,text:Q}],body:{type:C,children:[{type:b,tag:f,props:{},children:[{type:a,value:"While working on deploying Discourse, "},{type:b,tag:n,props:{href:"https:\u002F\u002Fmeta.discourse.org\u002Ft\u002Ffull-site-cdn-acceleration-for-discourse\u002F21467\u002F4",rel:[p,q,r],target:s},children:[{type:a,value:"I've came across a statement that took\ntime for me to understand"}]},{type:a,value:". Discourse has a subsystem that's similar to\nWebSocket and Server Sent events which takes care to automatically update the\npage asynchronously. Note that this post "},{type:b,tag:n,props:{href:"https:\u002F\u002Fmeta.discourse.org\u002Ft\u002Ffull-site-cdn-acceleration-for-discourse\u002F21467",rel:[p,q,r],target:s},children:[{type:a,value:"is canonical version of my answer"}]},{type:a,value:D}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"The confusing part was;"}]},{type:a,value:c},{type:b,tag:R,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:n,props:{href:S,rel:[p,q,r],target:s},children:[{type:a,value:T}]},{type:a,value:" To server \"long polling\" requests from a different domain, set the\nSite Setting long polling base url to the origin server. For example, if your\nCDN is pulling from \""},{type:b,tag:g,props:{},children:[{type:a,value:"http:\u002F\u002Fexample.org"}]},{type:a,value:"\" be sure to plug in\n"},{type:b,tag:g,props:{},children:[{type:a,value:U}]},{type:a,value:" into the site setting. If you don't your site will be\nbroken."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"This post is about clarifying why and how to work around this particular\nproblem."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"The confusing part is that if \""},{type:b,tag:g,props:{},children:[{type:a,value:U}]},{type:a,value:"\". If you are behind Fastly,\nyou have to use a CNAME entry and then you have to have a sub domain name and\nnot the top level."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:"Background:"}]},{type:a,value:" In DNS, a top level domain name (i.e. \"example.org\") can "},{type:b,tag:E,props:{},children:[{type:a,value:"only"}]},{type:a,value:"\nhave "},{type:b,tag:g,props:{},children:[{type:a,value:w}]},{type:a,value:" records. Since Fastly requires we use a "},{type:b,tag:g,props:{},children:[{type:a,value:F}]},{type:a,value:" entry, we have no\nchoice but to use a sub domain name."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Let's say that we will then use \""},{type:b,tag:g,props:{},children:[{type:a,value:"http:\u002F\u002Fdiscourse.example.org\u002F"}]},{type:a,value:"\" to serve our\nDiscourse forum so we can use Fastly."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Now there's this thing called \"long polling\" which is basically an "},{type:b,tag:g,props:{},children:[{type:a,value:"OPTION"}]},{type:a,value:" HTTP\nrequest with a long time before returning anything. If we use the Fastly or\nVarnish address, as Discourse would by default, Varnish will time out and \"long\npolling\" won't work."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:"More background:"}]},{type:a,value:" Varnish has this option to bypass in known contexts through\n"},{type:b,tag:g,props:{},children:[{type:a,value:"vcl_pipe"}]},{type:a,value:" which is roughly a raw TCP socket. But Fastly doesn't offer it\n"},{type:b,tag:n,props:{href:"https:\u002F\u002Fcommunity.fastly.com\u002Ft\u002Fvcl-pipe-heads-up\u002F163",rel:[p,q,r],target:s},children:[{type:a,value:"because of the "},{type:b,tag:E,props:{},children:[{type:a,value:"size"}]},{type:a,value:" of their setup"}]},{type:a,value:D}]},{type:a,value:c},{type:b,tag:"h2",props:{id:P},children:[{type:b,tag:n,props:{href:"#proposed-setup",ariaHidden:"true",tabIndex:-1},children:[{type:b,tag:d,props:{className:["icon","icon-link"]},children:[]}]},{type:a,value:Q}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Let's enable long polling and expose our site under Fastly. We'll need two\nnames, one pointing to Fastly's and the other to the IP addresses we give within\nthe service dashboard."}]},{type:a,value:c},{type:b,tag:V,props:{},children:[{type:a,value:c},{type:b,tag:t,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:"discourse.example.org"}]},{type:a,value:" that's our desired Discourse site domain name"}]},{type:a,value:c},{type:b,tag:t,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:W}]},{type:a,value:" (pick any name) that we'll configure in\nDiscourse to access directly to our public facing frontend web server"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"In my case, I generally have many web apps running that are only accessible from\nmy internal network. I refer to them as \"upstream\"; the same term NGINX uses in\ntheir config. Since this number of web apps you would host on a site can\nfluctuate, you might still want the number public IP address to remain stable.\nThat's why I setup a NGINX server in front that proxies to internal web app\nserver. I refer to them as \"frontends\"."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Let's say you have two public facing frontends running NGINX."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Those would be the ones you setup in Fastly like this."}]},{type:a,value:c},{type:b,tag:G,props:{style:H,src:"~\u002Fassets\u002Fcontent\u002Fblog\u002F2015\u002F04\u002Fdiscuss-fastly-origins.png",figcaption:l},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Fastly service configuration, at Hosts tab"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Here we see two "},{type:b,tag:E,props:{},children:[{type:a,value:"Backends"}]},{type:a,value:" in Fastly pannel at "},{type:b,tag:g,props:{},children:[{type:a,value:"Configure -\u003E Hosts"}]},{type:a,value:D}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Notice that in this example i'm using "},{type:b,tag:g,props:{},children:[{type:a,value:X}]},{type:a,value:" port because my backends are\nconfigured to communicate between Fastly and my frontends through TLS. But you\ndon't need to."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Quoting again @sam;"}]},{type:a,value:c},{type:b,tag:R,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:n,props:{href:S,rel:[p,q,r],target:s},children:[{type:a,value:T}]},{type:a,value:" To server \"long polling\" requests from a different domain, set the\nSite Setting long polling base url to the origin server."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Really means here is that we would have to put one of those IP addresses in\nDiscourse settings."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"What I'd recommend is to create a list of "},{type:b,tag:g,props:{},children:[{type:a,value:w}]},{type:a,value:" entries for all your frontends."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"In the end we need three things:"}]},{type:a,value:c},{type:b,tag:V,props:{},children:[{type:a,value:c},{type:b,tag:t,props:{},children:[{type:a,value:"What's the public name that Fastly will serve"}]},{type:a,value:c},{type:b,tag:t,props:{},children:[{type:a,value:"Which IPs are the frontends"}]},{type:a,value:c},{type:b,tag:t,props:{},children:[{type:a,value:"Which hostname we want to use for long polling and we'll add it to our\nVirtualHost"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"The zone file would look like this;"}]},{type:a,value:c},{type:b,tag:Y,props:{className:[Z]},children:[{type:b,tag:_,props:{className:[$,"language-dns-zone-file"]},children:[{type:b,tag:g,props:{},children:[{type:a,value:"# The public facing URL\ndiscourse.example.org.  "},{type:b,tag:d,props:{className:[e,x,h]},children:[{type:a,value:y}]},{type:a,value:l},{type:b,tag:d,props:{className:[e,z,h]},children:[{type:a,value:F}]},{type:a,value:" global.prod.fastly.net.\n\n# The list of IP addresses you’d give to Fastly as origins\u002Fbackends\nfrontends.example.org.  "},{type:b,tag:d,props:{className:[e,x,h]},children:[{type:a,value:y}]},{type:a,value:l},{type:b,tag:d,props:{className:[e,z,h]},children:[{type:a,value:w}]},{type:a,value:" 8.8.8.113\nfrontends.example.org.  "},{type:b,tag:d,props:{className:[e,x,h]},children:[{type:a,value:y}]},{type:a,value:l},{type:b,tag:d,props:{className:[e,z,h]},children:[{type:a,value:w}]},{type:a,value:" 8.8.8.115\n\n# The long polling URL entry\ndiscoursepolling.example.org.  "},{type:b,tag:d,props:{className:[e,x,h]},children:[{type:a,value:y}]},{type:a,value:l},{type:b,tag:d,props:{className:[e,z,h]},children:[{type:a,value:F}]},{type:a,value:" frontends.example.org.\n"}]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"That way you can setup the \"long polling base url\" correctly without setting a\nsingle point of failure."}]},{type:a,value:c},{type:b,tag:G,props:{style:H,src:"~\u002Fassets\u002Fcontent\u002Fblog\u002F2015\u002F05\u002Fdiscourse-polling-ui.png",figcaption:"In Discourse admin, adjust long polling base url setting"},children:[{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Then, we can go in Discourse admin zone and adjust the \"long polling base url\"\nto our other domain name."}]},{type:a,value:c},{type:b,tag:Y,props:{className:[Z]},children:[{type:b,tag:_,props:{className:[$,"language-nginx"]},children:[{type:b,tag:g,props:{},children:[{type:b,tag:d,props:{className:[e,m]},children:[{type:a,value:"# \u002Fetc\u002Fnginx\u002Fsites-enabled\u002F10-discourse"}]},{type:a,value:c},{type:b,tag:d,props:{className:[e,m]},children:[{type:a,value:"# Let’s redirect to SSL, in case somebody tries to access the direct IP with"}]},{type:a,value:c},{type:b,tag:d,props:{className:[e,m]},children:[{type:a,value:"# host header."}]},{type:a,value:c},{type:b,tag:d,props:{className:[e,k]},children:[{type:b,tag:d,props:{className:[e,h]},children:[{type:a,value:aa}]}]},{type:a,value:l},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:ab}]},{type:a,value:j},{type:b,tag:d,props:{className:[e,k]},children:[{type:b,tag:d,props:{className:[e,h]},children:[{type:a,value:ac}]},{type:a,value:I},{type:b,tag:d,props:{className:[e,J]},children:[{type:a,value:"80"}]}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:o}]},{type:a,value:j},{type:b,tag:d,props:{className:[e,k]},children:[{type:b,tag:d,props:{className:[e,h]},children:[{type:a,value:ad}]},{type:a,value:ae}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:o}]},{type:a,value:j},{type:b,tag:d,props:{className:[e,k]},children:[{type:b,tag:d,props:{className:[e,h]},children:[{type:a,value:"include"}]},{type:a,value:"     common_params"}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:o}]},{type:a,value:j},{type:b,tag:d,props:{className:[e,k]},children:[{type:b,tag:d,props:{className:[e,h]},children:[{type:a,value:"return"}]},{type:a,value:I},{type:b,tag:d,props:{className:[e,J]},children:[{type:a,value:"301"}]},{type:a,value:" https:\u002F\u002F"},{type:b,tag:d,props:{className:[e,af]},children:[{type:a,value:"$server_name"}]},{type:b,tag:d,props:{className:[e,af]},children:[{type:a,value:"$request_uri"}]}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:o}]},{type:a,value:c},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:ag}]},{type:a,value:c},{type:b,tag:d,props:{className:[e,k]},children:[{type:b,tag:d,props:{className:[e,h]},children:[{type:a,value:aa}]}]},{type:a,value:l},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:ab}]},{type:a,value:j},{type:b,tag:d,props:{className:[e,k]},children:[{type:b,tag:d,props:{className:[e,h]},children:[{type:a,value:ac}]},{type:a,value:I},{type:b,tag:d,props:{className:[e,J]},children:[{type:a,value:X}]},{type:a,value:" ssl"}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:o}]},{type:a,value:j},{type:b,tag:d,props:{className:[e,k]},children:[{type:b,tag:d,props:{className:[e,h]},children:[{type:a,value:ad}]},{type:a,value:ae}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:o}]},{type:a,value:j},{type:b,tag:d,props:{className:[e,m]},children:[{type:a,value:"# Rest of NGINX server block"}]},{type:a,value:j},{type:b,tag:d,props:{className:[e,m]},children:[{type:a,value:"# Also, I would make a condition if we are in discoursepolling but not"}]},{type:a,value:j},{type:b,tag:d,props:{className:[e,m]},children:[{type:a,value:"# under using anything specific to polling."}]},{type:a,value:j},{type:b,tag:d,props:{className:[e,m]},children:[{type:a,value:"# #TODO; find paths specific to polling"}]},{type:a,value:c},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:ag}]},{type:a,value:c}]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"To see if it works; look at your web browser developer tool \"Network inspector\"\nfor "},{type:b,tag:g,props:{},children:[{type:a,value:"\u002Fpoll"}]},{type:a,value:" calls on "},{type:b,tag:g,props:{},children:[{type:a,value:W}]},{type:a,value:", and see if you have\n"},{type:b,tag:g,props:{},children:[{type:a,value:"200 OK"}]},{type:a,value:" status code."}]},{type:a,value:c},{type:b,tag:G,props:{style:H,src:"~\u002Fassets\u002Fcontent\u002Fblog\u002F2015\u002F05\u002Fdiscourse-polling.png",figcaption:"Use your web browser developer tools and inspect network traffic to see if requests made to discoursepolling worked"},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Note that this screenshot is showing "},{type:b,tag:g,props:{},children:[{type:a,value:"webplatform.org"}]},{type:a,value:" but that's beside the\npoint i'm trying to illustrate."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Hope this helped."}]}]},text:"---\ntitle: Make Discourse “long polling” work behind Fastly or Varnish\nlocale: en-CA\ncreated: 2015-05-03\nupdated: 2023-02-18\ncanonical: \u003E-\n  https:\u002F\u002Frenoirboulanger.com\u002Fblog\u002F2015\u002F05\u002Fmake-discourse-long-polling-work-behind-fastly\u002F\nstatus: publish\nrevising: true\ncaption: false\ncaracteresBizzares: false\ngallery: false\nmigrateCode: true\nmigrateImages: true\nmigrateLinks: true\ncategories:\n  - projects\ntags:\n  - linux\n  - operations\n  - webplatform\n  - cloud-computing\nkeywords:\n  - Discourse\n  - Docker\n  - Fastly\n  - Long Polling behind Varnish\n  - Varnish\nexcerpt: \u003E-\n  In the Discourse forums, if you’ve seen something saying that you have to\n  provide a different origin to make long polling work, maybe you didn’t\n  understand what you have to do. Here are the details of why and how to do it\n  correctly.\ncoverImage:\n  src: ~\u002Fassets\u002Fcontent\u002Fblog\u002F2015\u002F11\u002Fdiscourse_migration_list_gravatar_images.png\n  text: |\n    Side by side comparison while working on migrating Discourse\n    with WICG\npreamble:\n  text: |\n    It is possible the code shown here no longer works.\n    Maybe the code shown here uses parts of Discourse that no longer exists.\n---\n\nWhile working on deploying Discourse, [I've came across a statement that took\ntime for me to understand][0]. Discourse has a subsystem that's similar to\nWebSocket and Server Sent events which takes care to automatically update the\npage asynchronously. Note that this post [is canonical version of my answer][1].\n\nThe confusing part was;\n\n\u003E [@sam][2] To server \"long polling\" requests from a different domain, set the\n\u003E Site Setting long polling base url to the origin server. For example, if your\n\u003E CDN is pulling from \"`http:\u002F\u002Fexample.org`\" be sure to plug in\n\u003E `http:\u002F\u002Fexample.org\u002F` into the site setting. If you don't your site will be\n\u003E broken.\n\nThis post is about clarifying why and how to work around this particular\nproblem.\n\nThe confusing part is that if \"`http:\u002F\u002Fexample.org\u002F`\". If you are behind Fastly,\nyou have to use a CNAME entry and then you have to have a sub domain name and\nnot the top level.\n\n**Background:** In DNS, a top level domain name (i.e. \"example.org\") can _only_\nhave `A` records. Since Fastly requires we use a `CNAME` entry, we have no\nchoice but to use a sub domain name.\n\nLet's say that we will then use \"`http:\u002F\u002Fdiscourse.example.org\u002F`\" to serve our\nDiscourse forum so we can use Fastly.\n\nNow there's this thing called \"long polling\" which is basically an `OPTION` HTTP\nrequest with a long time before returning anything. If we use the Fastly or\nVarnish address, as Discourse would by default, Varnish will time out and \"long\npolling\" won't work.\n\n**More background:** Varnish has this option to bypass in known contexts through\n`vcl_pipe` which is roughly a raw TCP socket. But Fastly doesn't offer it\n[because of the _size_ of their setup][3].\n\n## Proposed setup\n\nLet's enable long polling and expose our site under Fastly. We'll need two\nnames, one pointing to Fastly's and the other to the IP addresses we give within\nthe service dashboard.\n\n1. **discourse.example.org** that's our desired Discourse site domain name\n2. **discoursepolling.example.org** (pick any name) that we'll configure in\n   Discourse to access directly to our public facing frontend web server\n\nIn my case, I generally have many web apps running that are only accessible from\nmy internal network. I refer to them as \"upstream\"; the same term NGINX uses in\ntheir config. Since this number of web apps you would host on a site can\nfluctuate, you might still want the number public IP address to remain stable.\nThat's why I setup a NGINX server in front that proxies to internal web app\nserver. I refer to them as \"frontends\".\n\nLet's say you have two public facing frontends running NGINX.\n\nThose would be the ones you setup in Fastly like this.\n\n\u003Capp-image style=\"float:unset;\" src=\"~\u002Fassets\u002Fcontent\u002Fblog\u002F2015\u002F04\u002Fdiscuss-fastly-origins.png\" figcaption=\" \"\u003E\n\nFastly service configuration, at Hosts tab\n\n\u003C\u002Fapp-image\u003E\n\nHere we see two _Backends_ in Fastly pannel at `Configure -\u003E Hosts`.\n\nNotice that in this example i'm using `443` port because my backends are\nconfigured to communicate between Fastly and my frontends through TLS. But you\ndon't need to.\n\nQuoting again @sam;\n\n\u003E [@sam][2] To server \"long polling\" requests from a different domain, set the\n\u003E Site Setting long polling base url to the origin server.\n\nReally means here is that we would have to put one of those IP addresses in\nDiscourse settings.\n\nWhat I'd recommend is to create a list of `A` entries for all your frontends.\n\nIn the end we need three things:\n\n1. What's the public name that Fastly will serve\n2. Which IPs are the frontends\n3. Which hostname we want to use for long polling and we'll add it to our\n   VirtualHost\n\nThe zone file would look like this;\n\n```dns-zone-file\n# The public facing URL\ndiscourse.example.org.  IN CNAME global.prod.fastly.net.\n\n# The list of IP addresses you’d give to Fastly as origins\u002Fbackends\nfrontends.example.org.  IN A 8.8.8.113\nfrontends.example.org.  IN A 8.8.8.115\n\n# The long polling URL entry\ndiscoursepolling.example.org.  IN CNAME frontends.example.org.\n```\n\nThat way you can setup the \"long polling base url\" correctly without setting a\nsingle point of failure.\n\n\u003Capp-image style=\"float:unset;\" src=\"~\u002Fassets\u002Fcontent\u002Fblog\u002F2015\u002F05\u002Fdiscourse-polling-ui.png\" figcaption=\"In Discourse admin, adjust long polling base url setting\"\u003E\n\u003C\u002Fapp-image\u003E\n\nThen, we can go in Discourse admin zone and adjust the \"long polling base url\"\nto our other domain name.\n\n```nginx\n# \u002Fetc\u002Fnginx\u002Fsites-enabled\u002F10-discourse\n# Let’s redirect to SSL, in case somebody tries to access the direct IP with\n# host header.\nserver {\n    listen      80;\n    server_name discoursepolling.example.org discourse.example.org;\n    include     common_params;\n    return      301 https:\u002F\u002F$server_name$request_uri;\n}\nserver {\n    listen      443 ssl;\n    server_name discoursepolling.example.org discourse.example.org;\n    # Rest of NGINX server block\n    # Also, I would make a condition if we are in discoursepolling but not\n    # under using anything specific to polling.\n    # #TODO; find paths specific to polling\n}\n```\n\nTo see if it works; look at your web browser developer tool \"Network inspector\"\nfor `\u002Fpoll` calls on `discoursepolling.example.org`, and see if you have\n`200 OK` status code.\n\n\u003Capp-image style=\"float:unset;\" src=\"~\u002Fassets\u002Fcontent\u002Fblog\u002F2015\u002F05\u002Fdiscourse-polling.png\" figcaption=\"Use your web browser developer tools and inspect network traffic to see if requests made to discoursepolling worked\"\u003E\n\nNote that this screenshot is showing `webplatform.org` but that's beside the\npoint i'm trying to illustrate.\n\n\u003C\u002Fapp-image\u003E\n\nHope this helped.\n\n[0]:\n  https:\u002F\u002Fmeta.discourse.org\u002Ft\u002Ffull-site-cdn-acceleration-for-discourse\u002F21467\u002F4\n[1]: https:\u002F\u002Fmeta.discourse.org\u002Ft\u002Ffull-site-cdn-acceleration-for-discourse\u002F21467\n[2]:\n  https:\u002F\u002Fmeta.discourse.org\u002Ft\u002Ffull-site-cdn-acceleration-for-discourse\u002F21467\u002F1\n[3]: https:\u002F\u002Fcommunity.fastly.com\u002Ft\u002Fvcl-pipe-heads-up\u002F163\n",dir:"\u002Fblog\u002F2015\u002F05",path:"\u002Fblog\u002F2015\u002F05\u002Fmake-discourse-long-polling-work-behind-fastly",extension:".md",slug:ah,createdAt:ai,updatedAt:ai,category:L},coverImage:{toc:[],body:{type:C,children:[{type:b,tag:f,props:{},children:[{type:a,value:"Side by side comparison while working on migrating Discourse\nwith WICG"}]}]},text:N,src:M},month:"05",next:{title:"Run a NodeJS process through forever from within a Docker container",locale:A,path:"\u002Fblog\u002F2015\u002F05\u002Frun-nodejs-process-forever-within-docker-container",slug:"run-nodejs-process-forever-within-docker-container"},preamble:{toc:[],body:{type:C,children:[{type:b,tag:f,props:{},children:[{type:a,value:"It is possible the code shown here no longer works.\nMaybe the code shown here uses parts of Discourse that no longer exists."}]}]},text:O},prettyfiedTemporalDate:{prettified:"Sunday, May 3, 2015",temporalDate:"2015-05-03"},prev:{title:"Setting up Discourse with Fastly as a CDN provider and TLS",locale:A,path:"\u002Fblog\u002F2015\u002F04\u002Fsetting-discourse-fastly-cdn-provider-ssl",slug:"setting-discourse-fastly-cdn-provider-ssl"},slug:ah,year:"2015"}],fetch:[],mutations:void 0}}("text","element","\n","span","token","p","code","keyword","punctuation","\n    ","directive"," ","comment","a",";","nofollow","noopener","noreferrer","_blank","li",true,"strong","A","class","IN","type","en-CA",false,"root",".","em","CNAME","app-image","float:unset;","      ","number","https:\u002F\u002Frenoirboulanger.com\u002Fblog\u002F2015\u002F05\u002Fmake-discourse-long-polling-work-behind-fastly\u002F","projects","~\u002Fassets\u002Fcontent\u002Fblog\u002F2015\u002F11\u002Fdiscourse_migration_list_gravatar_images.png","Side by side comparison while working on migrating Discourse\nwith WICG\n","It is possible the code shown here no longer works.\nMaybe the code shown here uses parts of Discourse that no longer exists.\n","proposed-setup","Proposed setup","blockquote","https:\u002F\u002Fmeta.discourse.org\u002Ft\u002Ffull-site-cdn-acceleration-for-discourse\u002F21467\u002F1","@sam","http:\u002F\u002Fexample.org\u002F","ol","discoursepolling.example.org","443","div","nuxt-content-highlight","pre","line-numbers","server","{","listen","server_name"," discoursepolling.example.org discourse.example.org","variable","}","make-discourse-long-polling-work-behind-fastly","2024-10-24T19:43:51.726Z")));