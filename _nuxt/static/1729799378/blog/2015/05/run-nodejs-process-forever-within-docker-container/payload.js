__NUXT_JSONP__("/blog/2015/05/run-nodejs-process-forever-within-docker-container", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS,aT,aU,aV,aW,aX,aY,aZ,a_,a$,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm){return {data:[{},{},{},{canonical:aA,content:{title:"Run a NodeJS process through forever from within a Docker container",locale:ak,created:"2015-05-12T00:00:00.000Z",updated:"2023-02-18T00:00:00.000Z",canonical:aA,status:"publish",revising:ac,migrateLinks:ac,categories:[aB],tags:["linux",Q,"open-source","operations","procedure","webplatform"],coverImage:{src:aC,alt:aD,text:aE},excerpt:"I’ve recently been through the steps to make a NodeJS web app to run from inside a Docker container. The objective of this project was to simplify the deployment of a web app that had many moving parts by making it a re-deployable service that is self-contained.",preamble:{disable:ac,text:f},toc:[{id:aF,depth:2,text:"Run publican inside Docker"},{id:aG,depth:al,text:aH},{id:aI,depth:al,text:aJ},{id:aK,depth:al,text:aL}],body:{type:U,children:[{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"One of the components that I worked on "},{type:b,tag:"nuxt-link",props:{to:"\u002Fblog\u002Ftag\u002Fwebplatform-docs"},children:[{type:a,value:"during my time on the WebPlatform\nproject"}]},{type:a,value:aM},{type:b,tag:o,props:{href:am,rel:[z,A,B],target:C},children:[{type:a,value:an}]},{type:a,value:", that I had to manage has many moving parts. The\nend product of that component is basically static HTML documents that ends up on\n"},{type:b,tag:o,props:{href:"https:\u002F\u002Fspecs.webplatform.org\u002F",rel:[z,A,B],target:C},children:[{type:a,value:"specs.webplatform.org"}]},{type:a,value:ao}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"Since we need to have many packages installed in very specific version, and\nautomating the installation wouldn't bring any more benefit than being\nself-contained, I thought it would be best to go through the steps of converting\nit into a Docker container."}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"The following is a procedure I wrote to teach "},{type:b,tag:o,props:{href:"https:\u002F\u002Fwww.w3.org\u002Fstaff\u002Falumni\u002F#robin-berjon",rel:[z,A,B],target:C},children:[{type:a,value:"my colleague"}]},{type:a,value:aM},{type:b,tag:o,props:{href:"https:\u002F\u002Fberjon.com\u002F",rel:[z,A,B],target:C},children:[{type:a,value:"Robin\nBerjon"}]},{type:a,value:", how to run his system called "},{type:b,tag:o,props:{href:am,rel:[z,A,B],target:C},children:[{type:a,value:an}]},{type:a,value:" from within a Docker\ncontainer. Publican is basically a GitHub hook listener that generates specs\nwritten to be parsed by "},{type:b,tag:o,props:{href:"https:\u002F\u002Fgithub.com\u002Fw3c\u002Frespec",rel:[z,A,B],target:C},children:[{type:a,value:"ReSpec"}]},{type:a,value:ap},{type:b,tag:o,props:{href:"https:\u002F\u002Fgithub.com\u002Ftabatkins\u002Fbikeshed",rel:[z,A,B],target:C},children:[{type:a,value:"Bikeshed"}]}]},{type:a,value:e},{type:b,tag:"h2",props:{id:aF},children:[{type:b,tag:o,props:{href:"#run-publican-inside-docker",ariaHidden:K,tabIndex:M},children:[{type:b,tag:c,props:{className:[N,O]},children:[]}]},{type:a,value:"Run "},{type:b,tag:V,props:{},children:[{type:a,value:"publican"}]},{type:a,value:" inside Docker"}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"What this'll do is basically build a VM that'll run a Docker container. The\ncontainer will write in files outside of it."}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"You'll quickly notice that the paths will look the same, its confusing, sorry\nabout that. Fortunately for us, the paths in the procedure are the ones that\nwill be mounted through Docker Volume (the "},{type:b,tag:h,props:{},children:[{type:a,value:W}]},{type:a,value:" option when you call "},{type:b,tag:h,props:{},children:[{type:a,value:Q}]},{type:a,value:")\nand will, in the end, be the same files."}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"Once you have a Docker container running on a VM, it'll replicate how a\nproduction VM will run the tasks. Since we know where the container will write\nfiles, we'll have our frontend servers to forward requests to publican, and\nserve files it generated."}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"Doing all this removes the need to do any rsync. NGINX within the VM that'll run\nDocker will take care of serving static files, and frontend server will expose\nit to the public."}]},{type:a,value:e},{type:b,tag:aq,props:{id:aG},children:[{type:b,tag:o,props:{href:"#steps",ariaHidden:K,tabIndex:M},children:[{type:b,tag:c,props:{className:[N,O]},children:[]}]},{type:a,value:aH}]},{type:a,value:e},{type:b,tag:ad,props:{},children:[{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:"Have "},{type:b,tag:o,props:{href:"https:\u002F\u002Fwww.vagrantup.com\u002F",rel:[z,A,B],target:C},children:[{type:a,value:"Vagrant"}]},{type:a,value:" and "},{type:b,tag:o,props:{href:"https:\u002F\u002Fwww.virtualbox.org\u002F",rel:[z,A,B],target:C},children:[{type:a,value:"VirtualBox"}]},{type:a,value:" installed"}]},{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:"Follow what's in "},{type:b,tag:o,props:{href:"https:\u002F\u002Fgithub.com\u002Frenoirb\u002Fsalt-basesystem",rel:[z,A,B],target:C},children:[{type:a,value:"renoirb\u002Fsalt-basesystem README.md"}]}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:L,props:{},children:[{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"Make sure you follow "},{type:b,tag:o,props:{href:"https:\u002F\u002Fgithub.com\u002Frenoirb\u002Fsalt-basesystem#vagrant-sandbox-utilities",rel:[z,A,B],target:C},children:[{type:a,value:"Vagrant Sandbox utilities"}]},{type:a,value:" part"}]},{type:a,value:e},{type:b,tag:m,props:{className:[p]},children:[{type:b,tag:q,props:{className:[r,v]},children:[{type:b,tag:h,props:{},children:[{type:a,value:aN},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aO}]},{type:a,value:aP},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:ar}]},{type:a,value:" salt-call state.highstate\n "},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:ar}]},{type:a,value:" salt-call state.sls vagrantsandbox.docker\n "},{type:b,tag:c,props:{className:[d,F,G]},children:[{type:a,value:as}]},{type:a,value:e}]}]}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"Reboot the VM by doing "},{type:b,tag:h,props:{},children:[{type:a,value:"vagrant reload"}]}]},{type:a,value:e},{type:b,tag:m,props:{className:[p]},children:[{type:b,tag:q,props:{className:[r,v]},children:[{type:b,tag:h,props:{},children:[{type:a,value:" vagrant reload\n"}]}]}]},{type:a,value:e}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:ad,props:{},children:[{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:e},{type:b,tag:g,props:{},children:[{type:b,tag:P,props:{},children:[{type:a,value:"No need"}]},{type:a,value:" to follow what's in "},{type:b,tag:o,props:{href:"https:\u002F\u002Fgithub.com\u002Fwebplatform\u002Fpublican\u002Fblob\u002Ftask-based-docker\u002FDOCKER.md",rel:[z,A,B],target:C},children:[{type:a,value:"webplatform\u002Fpublican DOCKER.md file"}]},{type:a,value:".\nThose are notes to show how to build a container. For this time, we'll "},{type:b,tag:o,props:{href:"https:\u002F\u002Fregistry.hub.docker.com\u002Fu\u002Fwebspecs\u002Fpublican\u002F",rel:[z,A,B],target:C},children:[{type:a,value:"use a\ncontainer I already built and pushed on "},{type:b,tag:P,props:{},children:[{type:a,value:"Docker hub"}]}]},{type:a,value:"!"}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"Setup what's required to run the container"}]},{type:a,value:e},{type:b,tag:m,props:{className:[p]},children:[{type:b,tag:q,props:{className:[r,v]},children:[{type:b,tag:h,props:{},children:[{type:a,value:aN},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aO}]},{type:a,value:e}]}]}]},{type:a,value:e}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:L,props:{},children:[{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"Prepare the folders;"}]},{type:a,value:e},{type:b,tag:m,props:{className:[p]},children:[{type:b,tag:q,props:{className:[r,v]},children:[{type:b,tag:h,props:{},children:[{type:a,value:f},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:ar}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,w,i]},children:[{type:a,value:"-s"}]},{type:a,value:aP},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aQ}]},{type:a,value:" webapps\n "},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"id"}]},{type:a,value:e}]}]}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"You should see"}]},{type:a,value:e},{type:b,tag:m,props:{className:[p]},children:[{type:b,tag:q,props:{className:[r,"language-text"]},children:[{type:b,tag:h,props:{},children:[{type:a,value:" uid=990(webapps) gid=990(webapps) groups=990(webapps),33(www-data),998(docker)\n"}]}]}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"Prepare the folders"}]},{type:a,value:e},{type:b,tag:m,props:{className:[p]},children:[{type:b,tag:q,props:{className:[r,v]},children:[{type:b,tag:h,props:{},children:[{type:a,value:f},{type:b,tag:c,props:{className:[d,F,G]},children:[{type:a,value:ae}]},{type:a,value:" \u002Fsrv\u002Fwebapps "},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:at}]},{type:a,value:" publican\u002Fdata "},{type:b,tag:c,props:{className:[d,F,G]},children:[{type:a,value:ae}]},{type:a,value:" publican\n"}]}]}]},{type:a,value:e},{type:b,tag:L,props:{},children:[{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"If all went well so far; you should be able to do "},{type:b,tag:h,props:{},children:[{type:a,value:"docker ps"}]},{type:a,value:" as the\n"},{type:b,tag:h,props:{},children:[{type:a,value:"webapps"}]},{type:a,value:" user. Otherwise reboot and\u002For run "},{type:b,tag:h,props:{},children:[{type:a,value:"salt-call"}]},{type:a,value:" with both\n"},{type:b,tag:h,props:{},children:[{type:a,value:"state.highstate"}]},{type:a,value:f},{type:b,tag:h,props:{},children:[{type:a,value:"state.sls vagrantsandbox.docker"}]},{type:a,value:" states. There should be\nnothing left to do."}]},{type:a,value:e},{type:b,tag:m,props:{className:[p]},children:[{type:b,tag:q,props:{className:[r,v]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:Q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"ps"}]},{type:a,value:"\n\nCONTAINER ID IMAGE COMMAND CREATED\n"},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:".."}]},{type:a,value:".\n"}]}]}]},{type:a,value:e}]},{type:a,value:e}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"Pull the publican Docker image I built (it'll take about 10 minutes)"}]},{type:a,value:e},{type:b,tag:m,props:{className:[p]},children:[{type:b,tag:q,props:{className:[r,v]},children:[{type:b,tag:h,props:{},children:[{type:a,value:f},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:Q}]},{type:a,value:" pull webspecs\u002Fpublican:wip\n"}]}]}]},{type:a,value:e}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:ad,props:{},children:[{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:"Copy the other files in this Gist in your local coputer where you cloned the\n"},{type:b,tag:P,props:{},children:[{type:a,value:"salt-basesystem"}]},{type:a,value:" repository. From that folder you can move them inside the\nVagrant VM where you need."}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:L,props:{},children:[{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"Copy publican config"}]},{type:a,value:e},{type:b,tag:m,props:{className:[p]},children:[{type:b,tag:q,props:{className:[r,v]},children:[{type:b,tag:h,props:{},children:[{type:a,value:f},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"cp"}]},{type:a,value:" \u002Fvagrant\u002Fconfig.json data\u002F\n"}]}]}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:e},{type:b,tag:g,props:{},children:[{type:b,tag:"del",props:{},children:[{type:a,value:"Download Bikeshed stuff that i didn't figure out yet what's important to\nkeep, extract it in "},{type:b,tag:h,props:{},children:[{type:a,value:"\u002Fsrv\u002Fwebapps\u002Fpublican\u002Fspec-data\u002F"}]}]},{type:a,value:ao}]},{type:a,value:e}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:"rb-notice-box",props:{className:["my-5"],variant:"info"},children:[{type:a,value:e},{type:b,tag:P,props:{slot:"header"},children:[{type:a,value:"Archive mentioned no longer exists"}]},{type:a,value:"\nThe archive used in the initial procedure no longer exists, it was a series of W3C specification Git repository working copies that Publican was expecting.\n"}]},{type:a,value:e},{type:b,tag:L,props:{},children:[{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"You can open up another terminal session and connect to the Vagrant VM\n"},{type:b,tag:h,props:{},children:[{type:a,value:"vagrant ssh"}]},{type:a,value:" (e.g. if you don't use "},{type:b,tag:h,props:{},children:[{type:a,value:"tmux"}]},{type:a,value:ap},{type:b,tag:h,props:{},children:[{type:a,value:"screen"}]},{type:a,value:X}]},{type:a,value:e},{type:b,tag:m,props:{className:[p]},children:[{type:b,tag:q,props:{className:[r,v]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:at}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,w,i]},children:[{type:a,value:Y}]},{type:a,value:" spec-data\u002Freadonly\u002F\n"},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:at}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,w,i]},children:[{type:a,value:Y}]},{type:a,value:" data\u002F"},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Z}]},{type:a,value:"gits,logs,publish,queue,temp"},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:_}]},{type:a,value:e}]}]}]},{type:a,value:e}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:ad,props:{},children:[{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"Run the container"}]},{type:a,value:e},{type:b,tag:m,props:{className:[p]},children:[{type:b,tag:q,props:{className:[r,v]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:Q}]},{type:a,value:au},{type:b,tag:c,props:{className:[d,w,i]},children:[{type:a,value:av}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,w,i]},children:[{type:a,value:aw}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,w,i]},children:[{type:a,value:W}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:af},{type:b,tag:c,props:{className:[d,i]},children:[{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:ag}]},{type:b,tag:c,props:{className:[d,F,G]},children:[{type:a,value:ah}]},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:X}]}]},{type:a,value:aR}]},{type:a,value:aS},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:u}]},{type:a,value:ai},{type:b,tag:c,props:{className:[d,w,i]},children:[{type:a,value:W}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:af},{type:b,tag:c,props:{className:[d,i]},children:[{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:ag}]},{type:b,tag:c,props:{className:[d,F,G]},children:[{type:a,value:ah}]},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:X}]}]},{type:a,value:aT}]},{type:a,value:aU},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:u}]},{type:a,value:ai},{type:b,tag:c,props:{className:[d,w,i]},children:[{type:a,value:Y}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,$]},children:[{type:a,value:ax}]},{type:a,value:aV}]}]}]},{type:a,value:e}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:L,props:{},children:[{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"If you see the following, you're in the Docker container!!"}]},{type:a,value:e},{type:b,tag:m,props:{className:[p]},children:[{type:b,tag:q,props:{className:[r,v]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"webapps@2f33f5c6e183:~$\n"}]}]}]},{type:a,value:e},{type:b,tag:S,props:{src:"~\u002Fassets\u002Fcontent\u002Fblog\u002F2015\u002F05\u002Fpublican-init.png",alt:"A terminal window with a few commands and a build process status and green lines, no errors",figcaption:f},children:[{type:a,value:"\n  Launching the container\n"}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"Initiate the empty shell we just created (it'll create stuff in the "},{type:b,tag:h,props:{},children:[{type:a,value:"data\u002F"}]},{type:a,value:"\nfolder "},{type:b,tag:V,props:{},children:[{type:a,value:aW}]},{type:a,value:" of the container)"}]},{type:a,value:e}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:m,props:{className:[p]},children:[{type:b,tag:q,props:{className:[r,v]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"publican.js init\n"}]}]}]},{type:a,value:e},{type:b,tag:L,props:{},children:[{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:aX},{type:b,tag:V,props:{},children:[{type:a,value:"Launching the container"}]},{type:a,value:aY}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"Once done, exit the container. Notice that by doing this, you lose the state\nof the VM and anything that has been written in the container. But, since we\nuse volumes (notice the "},{type:b,tag:h,props:{},children:[{type:a,value:"-v \u002Fhost\u002Fpath:\u002Fcontainer\u002Fpath"}]},{type:a,value:"), we actually wrote\n"},{type:b,tag:V,props:{},children:[{type:a,value:aW}]},{type:a,value:" of the container."}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"We can "},{type:b,tag:P,props:{},children:[{type:a,value:"exit the container"}]}]},{type:a,value:e},{type:b,tag:m,props:{className:[p]},children:[{type:b,tag:q,props:{className:[r,v]},children:[{type:b,tag:h,props:{},children:[{type:a,value:f},{type:b,tag:c,props:{className:[d,F,G]},children:[{type:a,value:as}]},{type:a,value:e}]}]}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"At this stage, we had publican and bikeshed to generate files (we may call\nthis a \"cache warmup\" of softs). Now, let's prepare the Vagrant VM to serve\nthe static content. Notice that the next commands are there only for the\npurpose of a local workspace, in production this step will also be managed\nautomatically."}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"Let's get back as the "},{type:b,tag:P,props:{},children:[{type:a,value:U}]},{type:a,value:" user, and create a quick web server;"}]},{type:a,value:e},{type:b,tag:m,props:{className:[p]},children:[{type:b,tag:q,props:{className:[r,v]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:c,props:{className:[d,F,G]},children:[{type:a,value:as}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"apt-get"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,w,i]},children:[{type:a,value:"-yqq"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"install"}]},{type:a,value:"\nnginx "},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"mv"}]},{type:a,value:" \u002Fvagrant\u002Fdefault.conf \u002Fetc\u002Fnginx\u002Fsites-available\u002Fdefault\n"},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"service"}]},{type:a,value:" restart nginx\n"}]}]}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"Let's return back to "},{type:b,tag:P,props:{},children:[{type:a,value:"as the webapps user and launch the runner"}]}]},{type:a,value:e},{type:b,tag:m,props:{className:[p]},children:[{type:b,tag:q,props:{className:[r,v]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aQ}]},{type:a,value:" webapps "},{type:b,tag:c,props:{className:[d,F,G]},children:[{type:a,value:ae}]},{type:a,value:" \u002Fsrv\u002Fwebapps\u002Fpublican\u002F\n"}]}]}]},{type:a,value:e},{type:b,tag:S,props:{src:"~\u002Fassets\u002Fcontent\u002Fblog\u002F2015\u002F05\u002Fpublican-run-hook.png",alt:"A terminal window with a build process status and green lines, no errors",figcaption:f},children:[{type:a,value:"\nStarting a build process\n"}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:e},{type:b,tag:g,props:{},children:[{type:b,tag:P,props:{},children:[{type:a,value:aZ}]},{type:a,value:"; this will also be managed automatically in\nproduction."}]},{type:a,value:e}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:m,props:{className:[p]},children:[{type:b,tag:q,props:{className:[r,"language-shell"]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:Q}]},{type:a,value:au},{type:b,tag:c,props:{className:[d,w,i]},children:[{type:a,value:av}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,w,i]},children:[{type:a,value:aw}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,w,i]},children:[{type:a,value:W}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:af},{type:b,tag:c,props:{className:[d,i]},children:[{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:ag}]},{type:b,tag:c,props:{className:[d,F,G]},children:[{type:a,value:ah}]},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:X}]}]},{type:a,value:aR}]},{type:a,value:aS},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:u}]},{type:a,value:a_},{type:b,tag:c,props:{className:[d,w,i]},children:[{type:a,value:W}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:af},{type:b,tag:c,props:{className:[d,i]},children:[{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:ag}]},{type:b,tag:c,props:{className:[d,F,G]},children:[{type:a,value:ah}]},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:X}]}]},{type:a,value:aT}]},{type:a,value:aU},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:u}]},{type:a,value:a_},{type:b,tag:c,props:{className:[d,w,i]},children:[{type:a,value:Y}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,$]},children:[{type:a,value:ax}]},{type:a,value:aV}]}]}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:aX},{type:b,tag:V,props:{},children:[{type:a,value:aZ}]},{type:a,value:aY}]},{type:a,value:e},{type:b,tag:L,props:{},children:[{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"get your Vagrant VM IP address"}]},{type:a,value:e},{type:b,tag:m,props:{className:[p]},children:[{type:b,tag:q,props:{className:[r,v]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"ifconfig"}]},{type:a,value:e}]}]}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:k,props:{},children:[{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"Should start by "},{type:b,tag:h,props:{},children:[{type:a,value:"172..."}]},{type:a,value:ap},{type:b,tag:h,props:{},children:[{type:a,value:"192..."}]},{type:a,value:"; visit a browser to that address"}]},{type:a,value:e}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:aq,props:{id:aI},children:[{type:b,tag:o,props:{href:"#gists",ariaHidden:K,tabIndex:M},children:[{type:b,tag:c,props:{className:[N,O]},children:[]}]},{type:a,value:aJ}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"Here are the files mentioned in this post"}]},{type:a,value:e},{type:a,value:e},{type:b,tag:ay,props:{id:"configjson"},children:[{type:b,tag:o,props:{href:"#configjson",ariaHidden:K,tabIndex:M},children:[{type:b,tag:c,props:{className:[N,O]},children:[]}]},{type:a,value:"config.json"}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:b,tag:o,props:{href:am,rel:[z,A,B],target:C},children:[{type:a,value:an}]},{type:a,value:" expects this file as "},{type:b,tag:h,props:{},children:[{type:a,value:"data\u002Fconfig.json"}]},{type:a,value:ao}]},{type:a,value:e},{type:b,tag:m,props:{className:[p]},children:[{type:b,tag:q,props:{className:[r,"language-json"]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Z}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:"\"bikeshed\""}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:I}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"\"\u002Fopt\u002Fbikeshed\u002Fbikeshed.py\""}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:J}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:"\"rsyncPath\""}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:I}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"\"\u002Fsrv\u002Fwebapps\u002Fpublican\u002F\""}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:J}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:"\"python\""}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:I}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"\"python2\""}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:J}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:"\"logFile\""}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:I}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"\"logs\u002Fall.log\""}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:J}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:"\"email\""}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:I}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Z}]},{type:a,value:aa},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:"\"to\""}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:I}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:a$}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:J}]},{type:a,value:aa},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:"\"from\""}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:I}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:a$}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:J}]},{type:a,value:aa},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:"\"host\""}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:I}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"\"localhost\""}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:J}]},{type:a,value:aa},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:"\"level\""}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:I}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"\"error\""}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:J}]},{type:a,value:aa},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:"\"handleExceptions\""}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:I}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,"boolean"]},children:[{type:a,value:K}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:_}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:J}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:"\"purgeAllURL\""}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:I}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"\"https:\u002F\u002Fapi.fastly.com\u002Fservice\u002Ffooo\u002Fpurge_all\""}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:J}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:"\"purgeAllKey\""}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:I}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"\"baar\""}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:_}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:ay,props:{id:"defaultconf"},children:[{type:b,tag:o,props:{href:"#defaultconf",ariaHidden:K,tabIndex:M},children:[{type:b,tag:c,props:{className:[N,O]},children:[]}]},{type:a,value:"default.conf"}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"A minimal NGINX web server digging for static content that Publican generates."}]},{type:a,value:e},{type:b,tag:m,props:{className:[p]},children:[{type:b,tag:q,props:{className:[r,"language-nginx"]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"# file: \u002Fetc\u002Fnginx\u002Fsites-enabled\u002Fdefault"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,R]},children:[{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:"server"}]}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Z}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,R]},children:[{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:"listen"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,$]},children:[{type:a,value:"80"}]},{type:a,value:" default_server"}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:ab}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,R]},children:[{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:U}]},{type:a,value:" \u002Fsrv\u002Fwebapps\u002Fpublican\u002Fdata\u002Fpublish"}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:ab}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,R]},children:[{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:"index"}]},{type:a,value:" index.html index.htm"}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:ab}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,R]},children:[{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:"server_name"}]},{type:a,value:" localhost"}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:ab}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,R]},children:[{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:"location"}]},{type:a,value:" \u002F"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Z}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,R]},children:[{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:"try_files"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:ba}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:ba}]},{type:a,value:"\u002F =404"}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:ab}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:_}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:_}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:"h5",props:{id:"dockerfile"},children:[{type:b,tag:o,props:{href:"#dockerfile",ariaHidden:K,tabIndex:M},children:[{type:b,tag:c,props:{className:[N,O]},children:[]}]},{type:a,value:"Dockerfile"}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"Here is the project's Dockerfile I created. I think it should be smaller, but\nPublican works with the following script."}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"Each step in a Dockerfile creates a \"commit\", make sure you have as few of them\nas possible, and also make sure that you clean after yourself. Remember that a\nDocker container is re-deployable and smallest the size of the container, the\nbetter!"}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"Notice a few details;"}]},{type:a,value:e},{type:b,tag:L,props:{},children:[{type:a,value:e},{type:b,tag:k,props:{},children:[{type:b,tag:h,props:{},children:[{type:a,value:"ENV DEBIAN_FRONTEND=noninteractive"}]},{type:a,value:" helps with dialogs"}]},{type:a,value:e},{type:b,tag:k,props:{},children:[{type:b,tag:h,props:{},children:[{type:a,value:"USER webapps"}]},{type:a,value:" tells \"where\" the rest of the script will make commands as a\ndifferent user than root. Make sure what's required by root to be done before!"}]},{type:a,value:e},{type:b,tag:k,props:{},children:[{type:b,tag:h,props:{},children:[{type:a,value:"COPY ..."}]},{type:a,value:" this is basically how you import content inside the container (i.e.\nmake the container heavier)"}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:m,props:{className:[p]},children:[{type:b,tag:q,props:{className:[r,"language-dockerfile"]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:bb}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"# Publican Docker runner"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:bb}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"# See also:"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"#   * https:\u002F\u002Fgithub.com\u002Fnodesource\u002Fdocker-node\u002Fblob\u002Fmaster\u002Fubuntu\u002Ftrusty\u002Fnode\u002F0.10.36\u002FDockerfile"}]},{type:a,value:D},{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:"FROM"}]},{type:a,value:" nodesource\u002Ftrusty:0.10.36"}]},{type:a,value:D},{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:"MAINTAINER"}]},{type:a,value:" Renoir Boulanger \u003Crenoir@w3.org\u003E"}]},{type:a,value:D},{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:T}]},{type:a,value:" DEBIAN_FRONTEND=noninteractive"}]},{type:a,value:D},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"# Dependencies: Bikeshed, PhantomJS, Bikshed’s lxml"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:az}]},{type:a,value:" apt-get update && apt-get -y upgrade && "},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:u}]},{type:a,value:"\n    apt-get install -yqq git python2.7 python-dev python-pip libxslt1-dev libxml2-dev zlib1g-dev && "},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:u}]},{type:a,value:"\n    apt-get install -yqq libfontconfig1 libfreetype6 curl && "},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:u}]},{type:a,value:"\n    apt-get autoremove -yqq --purge && "},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:u}]},{type:a,value:"\n    pip install --upgrade lxml"}]},{type:a,value:D},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"# Copy everything we have locally into the container"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"# REMINDER: Make sure you run `make clone-bikeshed`, we prefer to keep a copy locally outside"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"# of the data volume. Otherwise it would make problems saying that bikeshed clone is not in the"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"# same filesystem."}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:"COPY"}]},{type:a,value:" . \u002Fsrv\u002Fwebapps\u002Fpublican\u002F"}]},{type:a,value:D},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"# Make sure we have a \"non root\" user and"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"# delete any local workbench data\u002F directory"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:az}]},{type:a,value:" \u002Fusr\u002Fsbin\u002Fgroupadd --system --gid 990 webapps && "},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:u}]},{type:a,value:"\n    \u002Fusr\u002Fsbin\u002Fuseradd --system --gid 990 --uid 990 -G sudo --home-dir \u002Fsrv\u002Fwebapps --shell \u002Fbin\u002Fbash webapps && "},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:u}]},{type:a,value:"\n    sed -i "},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"'\u002F^%sudo\u002Fd'"}]},{type:a,value:" \u002Fetc\u002Fsudoers && "},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:u}]},{type:a,value:"\n    echo "},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"'%sudo ALL=NOPASSWD: ALL'"}]},{type:a,value:" \u003E\u003E \u002Fetc\u002Fsudoers && "},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:u}]},{type:a,value:"\n    mv \u002Fsrv\u002Fwebapps\u002Fpublican\u002Fbikeshed \u002Fopt && "},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:u}]},{type:a,value:"\n    rm -rf data && "},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:u}]},{type:a,value:"\n    mkdir -p data\u002Ftemp && "},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:u}]},{type:a,value:"\n    rm -rf Dockerfile Makefile .git .gitignore DOCKER.md && "},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:u}]},{type:a,value:"\n    chown -R webapps:webapps \u002Fsrv\u002Fwebapps\u002Fpublican && "},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:u}]},{type:a,value:"\n    chown -R webapps:webapps \u002Fopt\u002Fbikeshed"}]},{type:a,value:D},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"# Switch from root to webapps system user"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"# It **HAS to be** the SAME uid\u002Fgid as the owner on the host from which we’ll use as volume"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:"USER"}]},{type:a,value:" webapps"}]},{type:a,value:D},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"# Where the session will start from"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:"WORKDIR"}]},{type:a,value:" \u002Fsrv\u002Fwebapps\u002Fpublican"}]},{type:a,value:D},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"# Environment variables"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:T}]},{type:a,value:" PATH \u002Fsrv\u002Fwebapps\u002Fpublican\u002Fnode_modules\u002F.bin:\u002Fsrv\u002Fwebapps\u002Fpublican\u002Fbin:\u002Fsrv\u002Fwebapps\u002Fpublican\u002F.local\u002Fbin:"},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:"$PATH"}]}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:T}]},{type:a,value:" HOME \u002Fsrv\u002Fwebapps\u002Fpublican"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:T}]},{type:a,value:" TMPDIR \u002Fsrv\u002Fwebapps\u002Fpublican\u002Fdata\u002Ftemp"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:T}]},{type:a,value:" NODE_ENV production"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:T}]},{type:a,value:" GIT_DISCOVERY_ACROSS_FILESYSTEM true"}]},{type:a,value:D},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"# Run what `make deps` would do"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:az}]},{type:a,value:" pip install --upgrade --user --editable \u002Fopt\u002Fbikeshed && "},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:u}]},{type:a,value:"\n    mkdir -p node_modules && npm install"}]},{type:a,value:D},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"# Declare which port we expect to expose"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:"EXPOSE"}]},{type:a,value:" 7002"}]},{type:a,value:D},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"# Allow cli entry for debug, but make sure docker-compose.yml uses \"command: bin\u002Frun.sh\""}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:"ENTRYPOINT"}]},{type:a,value:" ["},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"\"\u002Fbin\u002Fbash\""}]},{type:a,value:"]"}]},{type:a,value:D},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"# Note leftover: Ideally, it should exclusively run"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"#ENTRYPOINT [\"\u002Fbin\u002Fbash\", \"\u002Fsrv\u002Fwebapps\u002Fpublican\u002Fbin\u002Frun.sh\"]"}]},{type:a,value:D},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"# Note leftover: What it ends up doing"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"#CMD [\"node_modules\u002Fforever\u002Fbin\u002Fforever\", \"--fifo\", \"logs\", \"0\"]"}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:ay,props:{id:"forever-start-script"},children:[{type:b,tag:o,props:{href:"#forever-start-script",ariaHidden:K,tabIndex:M},children:[{type:b,tag:c,props:{className:[N,O]},children:[]}]},{type:a,value:"Forever start script"}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"If you notice in the Docker run command, I call a file "},{type:b,tag:h,props:{},children:[{type:a,value:"bin\u002Frun.sh"}]},{type:a,value:", here it is."}]},{type:a,value:e},{type:b,tag:m,props:{className:[p]},children:[{type:b,tag:q,props:{className:[r,v]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:Q}]},{type:a,value:au},{type:b,tag:c,props:{className:[d,w,i]},children:[{type:a,value:av}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:u}]},{type:a,value:ai},{type:b,tag:c,props:{className:[d,w,i]},children:[{type:a,value:aw}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:u}]},{type:a,value:ai},{type:b,tag:c,props:{className:[d,w,i]},children:[{type:a,value:Y}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,$]},children:[{type:a,value:ax}]},{type:a,value:":7002 "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:u}]},{type:a,value:"\n       webspecs\u002Fpublican:latest "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:u}]},{type:a,value:"\n       bin\u002Frun.sh\n"}]}]}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"Publican runs its process using "},{type:b,tag:o,props:{href:"https:\u002F\u002Fgithub.com\u002Fforeverjs\u002Fforever",rel:[z,A,B],target:C},children:[{type:a,value:"Forever"}]},{type:a,value:". The objective of forever is to\nkeep a process to run at all times."}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"While this isn't ideal for NodeJS services, in the present use-case of a Docker\ncontainer who has the only purpose to run a process; Forever apt for the job!"}]},{type:a,value:e},{type:b,tag:m,props:{className:[p]},children:[{type:b,tag:q,props:{className:[r,v]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:c,props:{className:[d,"shebang","important"]},children:[{type:a,value:"#!\u002Fbin\u002Fbash"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,F,G]},children:[{type:a,value:"export"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,"assign-left",i]},children:[{type:a,value:"RUNDIR"}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:"="}]},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"\"\u002Fsrv\u002Fwebapps\u002Fpublican\""}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,F,G]},children:[{type:a,value:ae}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:bc}]},{type:a,value:"\nnode_modules\u002Fforever\u002Fbin\u002Fforever start "},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:bc}]},{type:a,value:"\u002Fbin\u002Fserver.js\nnode_modules\u002Fforever\u002Fbin\u002Fforever "},{type:b,tag:c,props:{className:[d,w,i]},children:[{type:a,value:"--fifo"}]},{type:a,value:" logs "},{type:b,tag:c,props:{className:[d,$]},children:[{type:a,value:"0"}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"That’s it, it’s all I had."}]},{type:a,value:e},{type:b,tag:aq,props:{id:aK},children:[{type:b,tag:o,props:{href:"#screenshots",ariaHidden:K,tabIndex:M},children:[{type:b,tag:c,props:{className:[N,O]},children:[]}]},{type:a,value:aL}]},{type:a,value:e},{type:a,value:e},{type:b,tag:m,props:{style:bd,className:[be,bf,bg,bh,bi]},children:[{type:a,value:e},{type:b,tag:S,props:{className:[aj],src:bj,alt:"A W3C Specification preview where we can see on the left the specification, and on the right the source highlighting changes in the source",figcaption:f},children:[{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"W3C Publican prototype build process helping with specification change tracking during review process"}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:S,props:{className:[aj],src:bk,figcaption:f},children:[{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:bl}]},{type:a,value:e}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:m,props:{style:bd,className:[be,bf,bg,bh,bi]},children:[{type:a,value:e},{type:b,tag:S,props:{className:[aj],src:bj,alt:"...",figcaption:f},children:[{type:a,value:"\n...\n"}]},{type:a,value:e},{type:b,tag:S,props:{className:[aj],src:bk,figcaption:f},children:[{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:bl}]},{type:a,value:e}]},{type:a,value:e}]}]},text:"---\ntitle: Run a NodeJS process through forever from within a Docker container\nlocale: en-CA\ncreated: 2015-05-12\nupdated: 2023-02-18\ncanonical: \u003E-\n  https:\u002F\u002Frenoirboulanger.com\u002Fblog\u002F2015\u002F05\u002Frun-nodejs-process-forever-within-docker-container\u002F\nstatus: publish\nrevising: true\nmigrateLinks: true\ncategories:\n  - projects\ntags:\n  - linux\n  - docker\n  - open-source\n  - operations\n  - procedure\n  - webplatform\ncoverImage:\n  src: ~\u002Fassets\u002Fcontent\u002Fblog\u002F2015\u002F05\u002Fpublican-spec-rangefinder.png\n  alt: 'Screen capture of the RangeFinder API using Publican'\n  text: |\n    Specification Document for RangeFinder API\nexcerpt: \u003E-\n  I’ve recently been through the steps to make a NodeJS web app to run from\n  inside a Docker container. The objective of this project was to simplify the\n  deployment of a web app that had many moving parts by making it a\n  re-deployable service that is self-contained.\npreamble:\n  disable: true\n  text: ' '\n---\n\u003C!--\nmigrateLinks:\n  external: 2\n  waybackMachine:\n  - specs.webplatform.org\nmigrateImages:\n  flickr:\n  - 1111111111_0000000000\n  should have total: 4\n--\u003E\n\nOne of the components that I worked on [during my time on the WebPlatform\nproject][wpd], [Publican][0], that I had to manage has many moving parts. The\nend product of that component is basically static HTML documents that ends up on\n[specs.webplatform.org][1].\n\nSince we need to have many packages installed in very specific version, and\nautomating the installation wouldn't bring any more benefit than being\nself-contained, I thought it would be best to go through the steps of converting\nit into a Docker container.\n\nThe following is a procedure I wrote to teach [my colleague][2], [Robin\nBerjon][3], how to run his system called [Publican][0] from within a Docker\ncontainer. Publican is basically a GitHub hook listener that generates specs\nwritten to be parsed by [ReSpec][4] or [Bikeshed][5]\n\n## Run _publican_ inside Docker\n\nWhat this'll do is basically build a VM that'll run a Docker container. The\ncontainer will write in files outside of it.\n\nYou'll quickly notice that the paths will look the same, its confusing, sorry\nabout that. Fortunately for us, the paths in the procedure are the ones that\nwill be mounted through Docker Volume (the `-v` option when you call `docker`)\nand will, in the end, be the same files.\n\nOnce you have a Docker container running on a VM, it'll replicate how a\nproduction VM will run the tasks. Since we know where the container will write\nfiles, we'll have our frontend servers to forward requests to publican, and\nserve files it generated.\n\nDoing all this removes the need to do any rsync. NGINX within the VM that'll run\nDocker will take care of serving static files, and frontend server will expose\nit to the public.\n\n### Steps\n\n1. Have [Vagrant][6] and [VirtualBox][7] installed\n2. Follow what's in [renoirb\u002Fsalt-basesystem README.md][8]\n\n- Make sure you follow [Vagrant Sandbox utilities][9] part\n\n  ```bash\n   vagrant ssh\n   sudo salt-call state.highstate\n   sudo salt-call state.sls vagrantsandbox.docker\n   exit\n  ```\n\n- Reboot the VM by doing `vagrant reload`\n\n  ```bash\n   vagrant reload\n  ```\n\n1. **No need** to follow what's in [webplatform\u002Fpublican DOCKER.md file][10].\n   Those are notes to show how to build a container. For this time, we'll [use a\n   container I already built and pushed on **Docker hub**][11]!\n2. Setup what's required to run the container\n\n   ```bash\n    vagrant ssh\n   ```\n\n- Prepare the folders;\n\n  ```bash\n   sudo -s\n   su webapps\n   id\n  ```\n\n- You should see\n\n  ```\n   uid=990(webapps) gid=990(webapps) groups=990(webapps),33(www-data),998(docker)\n  ```\n\n- Prepare the folders\n\n  ```bash\n   cd \u002Fsrv\u002Fwebapps mkdir publican\u002Fdata cd publican\n  ```\n\n  - If all went well so far; you should be able to do `docker ps` as the\n    `webapps` user. Otherwise reboot and\u002For run `salt-call` with both\n    `state.highstate` `state.sls vagrantsandbox.docker` states. There should be\n    nothing left to do.\n\n    ```bash\n    docker ps\n\n    CONTAINER ID IMAGE COMMAND CREATED\n    ...\n    ```\n\n- Pull the publican Docker image I built (it'll take about 10 minutes)\n\n  ```bash\n   docker pull webspecs\u002Fpublican:wip\n  ```\n\n1. Copy the other files in this Gist in your local coputer where you cloned the\n   **salt-basesystem** repository. From that folder you can move them inside the\n   Vagrant VM where you need.\n\n- Copy publican config\n\n  ```bash\n   cp \u002Fvagrant\u002Fconfig.json data\u002F\n  ```\n\n- ~~Download Bikeshed stuff that i didn't figure out yet what's important to\n  keep, extract it in `\u002Fsrv\u002Fwebapps\u002Fpublican\u002Fspec-data\u002F`~~.\n\n\u003Crb-notice-box class=\"my-5\" variant=\"info\"\u003E\n\u003Cstrong slot=\"header\"\u003EArchive mentioned no longer exists\u003C\u002Fstrong\u003E\nThe archive used in the initial procedure no longer exists, it was a series of W3C specification Git repository working copies that Publican was expecting.\n\u003C\u002Frb-notice-box\u003E\n\n\n- You can open up another terminal session and connect to the Vagrant VM\n  `vagrant ssh` (e.g. if you don't use `tmux` or `screen`)\n\n  ```bash\n  mkdir -p spec-data\u002Freadonly\u002F\n  mkdir -p data\u002F{gits,logs,publish,queue,temp}\n  ```\n\n1. Run the container\n\n   ```bash\n   docker run -it --rm -v \"$(pwd)\u002Fdata\":\u002Fsrv\u002Fwebapps\u002Fpublican\u002Fdata \\\n          -v \"$(pwd)\u002Fspec-data\":\u002Fopt\u002Fbikeshed\u002Fbikeshed\u002Fspec-data \\\n          -p 7002:7002 webspecs\u002Fpublican:wip\n   ```\n\n- If you see the following, you're in the Docker container!!\n\n  ```bash\n  webapps@2f33f5c6e183:~$\n  ```\n\n  \u003Capp-image src=\"~\u002Fassets\u002Fcontent\u002Fblog\u002F2015\u002F05\u002Fpublican-init.png\" alt=\"A terminal window with a few commands and a build process status and green lines, no errors\" figcaption=\" \"\u003E\n    Launching the container\n  \u003C\u002Fapp-image\u003E\n- Initiate the empty shell we just created (it'll create stuff in the `data\u002F`\n  folder _outside_ of the container)\n\n\n  ```bash\n  publican.js init\n  ```\n\n- It should look like the screenshot with caption \"*Launching the container*\".\n\n- Once done, exit the container. Notice that by doing this, you lose the state\n  of the VM and anything that has been written in the container. But, since we\n  use volumes (notice the `-v \u002Fhost\u002Fpath:\u002Fcontainer\u002Fpath`), we actually wrote\n  _outside_ of the container.\n- We can **exit the container**\n\n  ```bash\n   exit\n  ```\n\n- At this stage, we had publican and bikeshed to generate files (we may call\n  this a \"cache warmup\" of softs). Now, let's prepare the Vagrant VM to serve\n  the static content. Notice that the next commands are there only for the\n  purpose of a local workspace, in production this step will also be managed\n  automatically.\n- Let's get back as the **root** user, and create a quick web server;\n\n  ```bash\n  exit\n  apt-get -yqq install\n  nginx mv \u002Fvagrant\u002Fdefault.conf \u002Fetc\u002Fnginx\u002Fsites-available\u002Fdefault\n  service restart nginx\n  ```\n\n- Let's return back to **as the webapps user and launch the runner**\n\n  ```bash\n  su webapps cd \u002Fsrv\u002Fwebapps\u002Fpublican\u002F\n  ```\n\u003Capp-image src=\"~\u002Fassets\u002Fcontent\u002Fblog\u002F2015\u002F05\u002Fpublican-run-hook.png\" alt=\"A terminal window with a build process status and green lines, no errors\" figcaption=\" \"\u003E\nStarting a build process\n\u003C\u002Fapp-image\u003E\n\n- **Starting a build process**; this will also be managed automatically in\n  production.\n\n\n  ```shell\n  docker run -it --rm -v \"$(pwd)\u002Fdata\":\u002Fsrv\u002Fwebapps\u002Fpublican\u002Fdata \\\n             -v \"$(pwd)\u002Fspec-data\":\u002Fopt\u002Fbikeshed\u002Fbikeshed\u002Fspec-data \\\n             -p 7002:7002 webspecs\u002Fpublican:wip\n  ```\n\nIt should look like the screenshot with caption \"*Starting a build process*\".\n\n\n- get your Vagrant VM IP address\n\n  ```bash\n  ifconfig\n  ```\n\n- Should start by `172...` or `192...`; visit a browser to that address\n\n### Gists\n\nHere are the files mentioned in this post\n\n\u003C!--#TODO-Display-Or-Migrate-Gists--\u003E\n\n#### config.json\n\n[Publican][0] expects this file as `data\u002Fconfig.json`.\n\n```json\n{\n  \"bikeshed\": \"\u002Fopt\u002Fbikeshed\u002Fbikeshed.py\",\n  \"rsyncPath\": \"\u002Fsrv\u002Fwebapps\u002Fpublican\u002F\",\n  \"python\": \"python2\",\n  \"logFile\": \"logs\u002Fall.log\",\n  \"email\": {\n    \"to\": \"jdoe@example.org\",\n    \"from\": \"jdoe@example.org\",\n    \"host\": \"localhost\",\n    \"level\": \"error\",\n    \"handleExceptions\": true\n  },\n  \"purgeAllURL\": \"https:\u002F\u002Fapi.fastly.com\u002Fservice\u002Ffooo\u002Fpurge_all\",\n  \"purgeAllKey\": \"baar\"\n}\n```\n\n#### default.conf\n\nA minimal NGINX web server digging for static content that Publican generates.\n\n```nginx\n# file: \u002Fetc\u002Fnginx\u002Fsites-enabled\u002Fdefault\nserver {\n  listen 80 default_server;\n  root \u002Fsrv\u002Fwebapps\u002Fpublican\u002Fdata\u002Fpublish;\n  index index.html index.htm;\n  server_name localhost;\n  location \u002F { try_files $uri $uri\u002F =404; }\n}\n```\n\n##### Dockerfile\n\nHere is the project's Dockerfile I created. I think it should be smaller, but\nPublican works with the following script.\n\nEach step in a Dockerfile creates a \"commit\", make sure you have as few of them\nas possible, and also make sure that you clean after yourself. Remember that a\nDocker container is re-deployable and smallest the size of the container, the\nbetter!\n\nNotice a few details;\n\n- `ENV DEBIAN_FRONTEND=noninteractive` helps with dialogs\n- `USER webapps` tells \"where\" the rest of the script will make commands as a\n  different user than root. Make sure what's required by root to be done before!\n- `COPY ...` this is basically how you import content inside the container (i.e.\n  make the container heavier)\n\n```dockerfile\n#\n# Publican Docker runner\n#\n# See also:\n#   * https:\u002F\u002Fgithub.com\u002Fnodesource\u002Fdocker-node\u002Fblob\u002Fmaster\u002Fubuntu\u002Ftrusty\u002Fnode\u002F0.10.36\u002FDockerfile\n\nFROM nodesource\u002Ftrusty:0.10.36\n\nMAINTAINER Renoir Boulanger \u003Crenoir@w3.org\u003E\n\nENV DEBIAN_FRONTEND=noninteractive\n\n# Dependencies: Bikeshed, PhantomJS, Bikshed’s lxml\nRUN apt-get update && apt-get -y upgrade && \\\n    apt-get install -yqq git python2.7 python-dev python-pip libxslt1-dev libxml2-dev zlib1g-dev && \\\n    apt-get install -yqq libfontconfig1 libfreetype6 curl && \\\n    apt-get autoremove -yqq --purge && \\\n    pip install --upgrade lxml\n\n# Copy everything we have locally into the container\n# REMINDER: Make sure you run `make clone-bikeshed`, we prefer to keep a copy locally outside\n# of the data volume. Otherwise it would make problems saying that bikeshed clone is not in the\n# same filesystem.\nCOPY . \u002Fsrv\u002Fwebapps\u002Fpublican\u002F\n\n# Make sure we have a \"non root\" user and\n# delete any local workbench data\u002F directory\nRUN \u002Fusr\u002Fsbin\u002Fgroupadd --system --gid 990 webapps && \\\n    \u002Fusr\u002Fsbin\u002Fuseradd --system --gid 990 --uid 990 -G sudo --home-dir \u002Fsrv\u002Fwebapps --shell \u002Fbin\u002Fbash webapps && \\\n    sed -i '\u002F^%sudo\u002Fd' \u002Fetc\u002Fsudoers && \\\n    echo '%sudo ALL=NOPASSWD: ALL' \u003E\u003E \u002Fetc\u002Fsudoers && \\\n    mv \u002Fsrv\u002Fwebapps\u002Fpublican\u002Fbikeshed \u002Fopt && \\\n    rm -rf data && \\\n    mkdir -p data\u002Ftemp && \\\n    rm -rf Dockerfile Makefile .git .gitignore DOCKER.md && \\\n    chown -R webapps:webapps \u002Fsrv\u002Fwebapps\u002Fpublican && \\\n    chown -R webapps:webapps \u002Fopt\u002Fbikeshed\n\n# Switch from root to webapps system user\n# It **HAS to be** the SAME uid\u002Fgid as the owner on the host from which we’ll use as volume\nUSER webapps\n\n# Where the session will start from\nWORKDIR \u002Fsrv\u002Fwebapps\u002Fpublican\n\n# Environment variables\nENV PATH \u002Fsrv\u002Fwebapps\u002Fpublican\u002Fnode_modules\u002F.bin:\u002Fsrv\u002Fwebapps\u002Fpublican\u002Fbin:\u002Fsrv\u002Fwebapps\u002Fpublican\u002F.local\u002Fbin:$PATH\nENV HOME \u002Fsrv\u002Fwebapps\u002Fpublican\nENV TMPDIR \u002Fsrv\u002Fwebapps\u002Fpublican\u002Fdata\u002Ftemp\nENV NODE_ENV production\nENV GIT_DISCOVERY_ACROSS_FILESYSTEM true\n\n# Run what `make deps` would do\nRUN pip install --upgrade --user --editable \u002Fopt\u002Fbikeshed && \\\n    mkdir -p node_modules && npm install\n\n# Declare which port we expect to expose\nEXPOSE 7002\n\n# Allow cli entry for debug, but make sure docker-compose.yml uses \"command: bin\u002Frun.sh\"\nENTRYPOINT [\"\u002Fbin\u002Fbash\"]\n\n# Note leftover: Ideally, it should exclusively run\n#ENTRYPOINT [\"\u002Fbin\u002Fbash\", \"\u002Fsrv\u002Fwebapps\u002Fpublican\u002Fbin\u002Frun.sh\"]\n\n# Note leftover: What it ends up doing\n#CMD [\"node_modules\u002Fforever\u002Fbin\u002Fforever\", \"--fifo\", \"logs\", \"0\"]\n```\n\n#### Forever start script\n\nIf you notice in the Docker run command, I call a file `bin\u002Frun.sh`, here it is.\n\n```bash\ndocker run -it \\\n       --rm \\\n       -p 7002:7002 \\\n       webspecs\u002Fpublican:latest \\\n       bin\u002Frun.sh\n```\n\nPublican runs its process using [Forever][13]. The objective of forever is to\nkeep a process to run at all times.\n\nWhile this isn't ideal for NodeJS services, in the present use-case of a Docker\ncontainer who has the only purpose to run a process; Forever apt for the job!\n\n```bash\n#!\u002Fbin\u002Fbash\nexport RUNDIR=\"\u002Fsrv\u002Fwebapps\u002Fpublican\"\ncd $RUNDIR\nnode_modules\u002Fforever\u002Fbin\u002Fforever start $RUNDIR\u002Fbin\u002Fserver.js\nnode_modules\u002Fforever\u002Fbin\u002Fforever --fifo logs 0\n```\n\nThat’s it, it’s all I had.\n\n\n### Screenshots\n\n\u003C!--\n#TODO-App-Image: Implement data-larger-src\n--\u003E\n\n\u003Cdiv style=\"overflow:hidden;clear:both;\" class=\"thumbnails gallery flex flex-row flex-wrap\"\u003E\n\n\u003Capp-image class=\"w-1\u002F3\" src=\"~\u002Fassets\u002Fcontent\u002Fblog\u002F2015\u002F05\u002Fpublican-preview.png\" alt=\"A W3C Specification preview where we can see on the left the specification, and on the right the source highlighting changes in the source\" figcaption=\" \"\u003E\n\nW3C Publican prototype build process helping with specification change tracking during review process\n\n\u003C\u002Fapp-image\u003E\n\u003Capp-image class=\"w-1\u002F3\" src=\"~\u002Fassets\u002Fcontent\u002Fblog\u002F2015\u002F05\u002Fpublican-deleted-spec-regeneration-question.png\" figcaption=\" \"\u003E\n\nAnnotated screenshot, when changing a file a hook is called and regenerates the specification\n\n\u003C\u002Fapp-image\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cdiv style=\"overflow:hidden;clear:both;\" class=\"thumbnails gallery flex flex-row flex-wrap\"\u003E\n\u003Capp-image class=\"w-1\u002F3\" src=\"~\u002Fassets\u002Fcontent\u002Fblog\u002F2015\u002F05\u002Fpublican-preview.png\" alt=\"...\" figcaption=\" \"\u003E\n...\n\u003C\u002Fapp-image\u003E\n\u003Capp-image class=\"w-1\u002F3\" src=\"~\u002Fassets\u002Fcontent\u002Fblog\u002F2015\u002F05\u002Fpublican-deleted-spec-regeneration-question.png\" figcaption=\" \"\u003E\n\nAnnotated screenshot, when changing a file a hook is called and regenerates the specification\n\n\u003C\u002Fapp-image\u003E\n\u003C\u002Fdiv\u003E\n\n[0]: https:\u002F\u002Fgithub.com\u002Fwebspecs\u002Fpublican\n[1]: https:\u002F\u002Fspecs.webplatform.org\u002F\n[2]: https:\u002F\u002Fwww.w3.org\u002Fstaff\u002Falumni\u002F#robin-berjon\n[3]: https:\u002F\u002Fberjon.com\u002F\n[4]: https:\u002F\u002Fgithub.com\u002Fw3c\u002Frespec\n[5]: https:\u002F\u002Fgithub.com\u002Ftabatkins\u002Fbikeshed\n[6]: https:\u002F\u002Fwww.vagrantup.com\u002F\n[7]: https:\u002F\u002Fwww.virtualbox.org\u002F\n[8]: https:\u002F\u002Fgithub.com\u002Frenoirb\u002Fsalt-basesystem\n[9]: https:\u002F\u002Fgithub.com\u002Frenoirb\u002Fsalt-basesystem#vagrant-sandbox-utilities\n[10]: https:\u002F\u002Fgithub.com\u002Fwebplatform\u002Fpublican\u002Fblob\u002Ftask-based-docker\u002FDOCKER.md\n[11]: https:\u002F\u002Fregistry.hub.docker.com\u002Fu\u002Fwebspecs\u002Fpublican\u002F\n[13]: https:\u002F\u002Fgithub.com\u002Fforeverjs\u002Fforever\n[wpd]: \u002Fblog\u002Ftag\u002Fwebplatform-docs\n[gist-run-publican-salt-basesystem-docker]:\n  https:\u002F\u002Fgist.github.com\u002Frenoirb\u002F4e52d93949cf2d049556\n  'Run publican inside renoirb\u002Fsalt-basesystem, inside a Docker container!'\n",dir:"\u002Fblog\u002F2015\u002F05",path:"\u002Fblog\u002F2015\u002F05\u002Frun-nodejs-process-forever-within-docker-container",extension:".md",slug:bm,createdAt:"2024-10-24T19:43:51.726Z",updatedAt:"2024-10-24T19:43:51.727Z",category:aB},coverImage:{toc:[],body:{type:U,children:[{type:b,tag:g,props:{},children:[{type:a,value:"Specification Document for RangeFinder API"}]}]},text:aE,src:aC,alt:aD},month:"05",next:{title:"Converting a dynamic site into static HTML documents",locale:ak,path:"\u002Fblog\u002F2015\u002F05\u002Fconverting-dynamic-site-static-copy",slug:"converting-dynamic-site-static-copy"},preamble:{toc:[],body:{type:U,children:[]},text:f,disable:ac},prettyfiedTemporalDate:{prettified:"Tuesday, May 12, 2015",temporalDate:"2015-05-12"},prev:{title:"Make Discourse “long polling” work behind Fastly or Varnish",locale:ak,path:"\u002Fblog\u002F2015\u002F05\u002Fmake-discourse-long-polling-work-behind-fastly",slug:"make-discourse-long-polling-work-behind-fastly"},slug:bm,year:"2015"}],fetch:[],mutations:void 0}}("text","element","span","token","\n"," ","p","code","variable","punctuation","li","operator","div","comment","a","nuxt-content-highlight","pre","line-numbers","function","keyword","\\","language-bash","parameter","string","instruction","nofollow","noopener","noreferrer","_blank","\n\n","\n  ","builtin","class-name","property",":",",","true","ul",-1,"icon","icon-link","strong","docker","directive","app-image","ENV","root","em","-v",")","-p","{","}","number","\n    ",";",true,"ol","cd","\"","$(","pwd","\n       ","w-1\u002F3","en-CA",3,"https:\u002F\u002Fgithub.com\u002Fwebspecs\u002Fpublican","Publican","."," or ","h3","sudo","exit","mkdir"," run ","-it","--rm","7002","h4","RUN","https:\u002F\u002Frenoirboulanger.com\u002Fblog\u002F2015\u002F05\u002Frun-nodejs-process-forever-within-docker-container\u002F","projects","~\u002Fassets\u002Fcontent\u002Fblog\u002F2015\u002F05\u002Fpublican-spec-rangefinder.png","Screen capture of the RangeFinder API using Publican","Specification Document for RangeFinder API\n","run-publican-inside-docker","steps","Steps","gists","Gists","screenshots","Screenshots",", "," vagrant ","ssh","\n ","su","\u002Fdata\"",":\u002Fsrv\u002Fwebapps\u002Fpublican\u002Fdata ","\u002Fspec-data\"",":\u002Fopt\u002Fbikeshed\u002Fbikeshed\u002Fspec-data ",":7002 webspecs\u002Fpublican:wip\n","outside","It should look like the screenshot with caption \"","\".","Starting a build process","\n           ","\"jdoe@example.org\"","$uri","#","$RUNDIR","overflow:hidden;clear:both;","thumbnails","gallery","flex","flex-row","flex-wrap","~\u002Fassets\u002Fcontent\u002Fblog\u002F2015\u002F05\u002Fpublican-preview.png","~\u002Fassets\u002Fcontent\u002Fblog\u002F2015\u002F05\u002Fpublican-deleted-spec-regeneration-question.png","Annotated screenshot, when changing a file a hook is called and regenerates the specification","run-nodejs-process-forever-within-docker-container")));