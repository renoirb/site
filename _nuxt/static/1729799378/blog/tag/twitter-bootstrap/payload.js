__NUXT_JSONP__("/blog/tag/twitter-bootstrap", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T){return {data:[{},{},{contents:[{locale:"en-CA",title:"Confirm form before submitting using Twitter Bootstrap in a Modal window [Snippet]",canonical:"https:\u002F\u002Frenoirboulanger.com\u002Fblog\u002F2012\u002F05\u002Fsnippet-confirm-form-before-submitting-using-twitter-bootstrap-in-a-modal-window\u002F",status:"publish",revising:o,caption:p,gallery:p,migrateCode:o,migrateImages:p,migrateLinks:o,created:"2012-05-28",updated:"2023-11-16",tags:["favourites","patterns",q],categories:[x],excerpt:y,toc:[{depth:f,text:z},{depth:f,text:A},{depth:f,text:B},{depth:f,text:C},{depth:f,text:D},{depth:f,text:E},{depth:f,text:F},{depth:f,text:G}],body:{type:"root",children:[{type:b,tag:d,props:{},children:[{type:b,tag:e,props:{href:"https:\u002F\u002Frenoirb.github.io\u002Fsite-assets\u002Fassets\u002Fcontent\u002Fblog\u002F2012\u002F05\u002Fconfirm-modal.jpg",rel:["lightbox[20120606]"]},children:[{type:b,tag:"img",props:{src:"https:\u002F\u002Frenoirb.github.io\u002Fsite-assets\u002Fassets\u002Fcontent\u002Fblog\u002F2012\u002F05\u002Fconfirm-modal-300x205.jpg",alt:y,title:"Transform any Bootstrap form to use a confirmation window",width:300,height:205,className:["alignright","size-medium","wp-image-2569"],border:0,style:"border:0"},children:[]}]}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:z}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Have you ever wanted to create a way to confirm input before actually submitting the form. Automatically."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"My snippet's goal is exactly for that purpose. The idea is that it reads the form inputs and labels, and generates a modal window (like a lightbox) and asks confirmation. This project is a contribution I do to "},{type:b,tag:e,props:{href:"https:\u002F\u002Fgithub.com\u002Ftwitter\u002Fbootstrap"},children:[{type:a,value:"Twitter Bootstrap"}]},{type:a,value:r},{type:b,tag:e,props:{href:"https:\u002F\u002Fgithub.com\u002Frenoirb\u002Fjquery-bootstrap-scripting"},children:[{type:a,value:"jQuery-bootstrap-scripting (\"dialog2\")"}]},{type:a,value:" to add on any form using Twitter Bootstrap form markup convention the capability to create a confirmation modal window."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"The concept is that some forms needs to have some confirmation and requires more than \"are you sure\", but also what you are submitting."}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:A}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"When the pages load, it executes in this order the following:"}]},{type:a,value:c},{type:b,tag:l,props:{},children:[{type:a,value:j},{type:b,tag:h,props:{},children:[{type:a,value:"Whether there is a "},{type:b,tag:m,props:{},children:[{type:a,value:"form[data-behavior=confirm]"}]},{type:a,value:", and modify the form default submit button to replace it with a link (idea being that if there is no javascript enabled, you can still submit!)"}]},{type:a,value:j},{type:b,tag:h,props:{},children:[{type:a,value:"on a Click action on the newly created "},{type:b,tag:m,props:{},children:[{type:a,value:"a.confirm-toggle"}]},{type:a,value:", it fires up some html manipulation and creates a modal window using "},{type:b,tag:e,props:{href:H},children:[{type:a,value:"jQuery Bootstrap Scriptin's "},{type:b,tag:n,props:{},children:[{type:a,value:"Dialog2"}]},{type:a,value:" plugin"}]}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:B}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"I have to warn you though.  The solution is not yet complete.  It works well with "},{type:b,tag:i,props:{},children:[{type:a,value:I}]},{type:a,value:" and some "},{type:b,tag:i,props:{},children:[{type:a,value:J}]},{type:a,value:". But I need to add more field types as time goes. That's why I created this "},{type:b,tag:e,props:{href:K},children:[{type:a,value:L}]},{type:a,value:" to give room for improvement. Feel free to collaborate. When the solution will be strong enough, i'll contribute it to both projects in their respective syntax ("},{type:b,tag:i,props:{},children:[{type:a,value:"dialog2"}]},{type:a,value:" doesnt initialize the same way as Bootstrap's "},{type:b,tag:i,props:{},children:[{type:a,value:"modal()"}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:n,props:{},children:[{type:a,value:"Known limitations"}]}]},{type:a,value:c},{type:b,tag:l,props:{},children:[{type:a,value:M},{type:b,tag:h,props:{},children:[{type:a,value:"Works only with "},{type:b,tag:i,props:{},children:[{type:a,value:J}]},{type:a,value:r},{type:b,tag:i,props:{},children:[{type:a,value:I}]},{type:a,value:", and breaks bad with "},{type:b,tag:i,props:{},children:[{type:a,value:"radio"}]},{type:a,value:r},{type:b,tag:i,props:{},children:[{type:a,value:"checkbox"}]}]},{type:a,value:M},{type:b,tag:h,props:{},children:[{type:a,value:"Works only with ONE form in the page, for now."}]},{type:a,value:"Â¨\n"}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:C}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"You can play with this "},{type:b,tag:e,props:{href:K},children:[{type:a,value:L}]},{type:a,value:" in the meantime i make it ready-er"}]},{type:a,value:c},{type:a,value:c},{type:b,tag:N,props:{},children:[{type:a,value:"The javascript"}]},{type:a,value:c},{type:b,tag:s,props:{lang:"javascript"},children:[{type:a,value:"\n    \u002F**\n     * Use form's content into a confirmation modal\n     *\n     * Using: http:\u002F\u002Fnikku.github.com\u002Fjquery-bootstrap-scripting\u002F\n     * Requires: Twitter Bootstrap, dialog2\n     *\n     * @author: Renoir Boulanger\n     *\u002F\n    if ($('form[data-behavior=confirm]').length \u003E= 1) {\n\n        console.log('run.js: document ready : Applying confirmation, ' + $('form[data-behavior=confirm]').length + ' times');\n\n        $('form[data-behavior=confirm] select').click(function() {\n            var dataValue = $(this).find(':selected').text();\n            $(this).attr('data-value', dataValue);\n\n            \u002F\u002F Debug console\n            console.log('Adding data-value at: ' + dataValue);\n        });\n\n        $('form[data-behavior=confirm] .confirm-toggle').replaceWith('"},{type:b,tag:t,props:{id:"confirm-submit",type:O,className:["is-hidden"]},children:[]},{type:a,value:"' + '"},{type:b,tag:e,props:{href:"#",className:[u,v,P]},children:[{type:a,value:Q}]},{type:a,value:"');\n\n        \u002F**\n         *  Since we know javascript is executed so far, lets handle it with the confirmation.\n         *\n         *  That way, no javascript-enabled browsing user will be able to use the form. #progressiveEnhancement\n         *\n         *  Do the work.\n         *\u002F\n        $('form[data-behavior=confirm] .confirm-toggle').click(function(event) {\n            event.preventDefault();\n\n            \u002F\u002F Get form content\n            var form = $('form[data-behavior=confirm]').clone().attr('id', 'cloned'); \u002F\u002F.appendTo('body');\n            var i = 0;\n            form.find(':input:not([type=hidden])').each(function() {\n                var field = $(this);\n\n\n                if (field.is('select')) {\n                    fieldValue = $(this).attr('data-value');\n                    if (fieldValue === undefined) {\n                        fieldValue = field.find(':selected').html();\n\n                        \u002F\u002F Debug console\n                        console.log('fieldValue was undefined, setting to : ' + fieldValue);\n                    }\n\n                    \u002F\u002F Debug console\n                    console.log('fieldValue is : ' + fieldValue);\n                } else {\n                    fieldValue = field.val();\n                }\n\n                \u002F\u002F Remove undefined field (they are useless)\n                if (fieldValue === '') {\n                    field.parent().parent().addClass('empty-field-resolved');\n                }\n\n                \u002F\u002F Debug console\n                console.log('Field ' + i + ' :' + fieldValue + ' for #' + field.attr('id'));\n\n                \u002F\u002F Wrap fieldValue in a tag, Tested in IE7!!\n                field.after($('"},{type:b,tag:"span",props:{className:["value"]},children:[{type:a,value:"' + fieldValue + '"}]},{type:a,value:"'));\n\n                \u002F\u002F Remove the field itself, we only want to see the resulting\n                field.remove();\n\n                i++;\n            });\n\n            \u002F\u002F Work stuff out for modal window, copying content, and building modal into the DOM\n            var decorate = $(\""},{type:b,tag:k,props:{id:"\\\"modal-placeholder\\\""},children:[{type:b,tag:k,props:{className:["\\\"modal-builder\\\""]},children:[]}]},{type:a,value:"\");\n            var buildup = decorate.find(\".modal-builder\").html(form);\n\n            buildup.appendTo('body');\n\n            \u002F\u002F Debug console\n            console.log('Appending #modal-placeholder in body, ready to call dialog2()');\n\n            \u002F\u002F Remove not needed anymore stuff\n            $('.modal-builder .help-block, .modal-builder .input-append, .modal-builder .form-actions').remove();\n\n            $('.modal-builder').dialog2({\n                title: \"Are you sure?\",\n                id: \"confirm-modal\",\n                modalClass: \"modal-wide fade in\",\n                closeOnOverlayClick: false,\n                closeOnEscape: false,\n                initialLoadText: \"Loading in progress...\",\n                buttons: {\n                    Confirm: {\n                        primary: true,\n                        click: function() {\n                            \u002F\u002F Debug\n                            console.log('Inside dialog2() clicked Confirm');\n\n                            $('#confirm-submit').click();\n                        }\n                    },\n                    \"Forgot something\": {\n                        click: function() {\n                            \u002F\u002F Debug\n                            console.log('Inside dialog2() clicked cancel');\n\n                            $(this).dialog2(\"close\");\n                            $('.modal').remove();\n                            return false;\n                        }\n                    }\n                }\n            });\n            \u002F\u002F Do my own cleanup. Remove potentially bogus nodes\n            $('#modal-placeholder, .modal-header .close, .control-group.empty-field-resolved').remove();\n        });\n    }\n\n"}]},{type:a,value:c},{type:a,value:c},{type:b,tag:N,props:{},children:[{type:a,value:"The CSS"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Minimally..."}]},{type:a,value:c},{type:b,tag:s,props:{lang:"css"},children:[{type:a,value:".modal-wide {\n  overflow:visible;\n  width: 650px;\n}\n\n.modal-builder .control-label {\n      padding:0 !important;\n      font-weight:bold;\n}\n\n \u002F* In case you use a span.required-star\n  * with title=\"required field\", I don't want to\n  * have them in modal\n  **\u002F\n.modal-builder  .required-star {\n    display:none;\n}\n\n.modal-builder .hide-in-confirm {\n  display:none !important;\n}"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Tell me in the comments if you want the LESS block I created"}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:D}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Always using Twitter Bootstrap markup, A form minimally needs"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"What is "},{type:b,tag:n,props:{},children:[{type:a,value:"really required here"}]},{type:a,value:" is"}]},{type:a,value:c},{type:b,tag:l,props:{},children:[{type:a,value:j},{type:b,tag:h,props:{},children:[{type:a,value:"Form tag has "},{type:b,tag:m,props:{},children:[{type:a,value:"data-behavior=\"confirm\""}]},{type:a,value:" attribute"}]},{type:a,value:j},{type:b,tag:h,props:{},children:[{type:a,value:"Form submit button has at least the class name "},{type:b,tag:m,props:{},children:[{type:a,value:u}]}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Just use any combination of "},{type:b,tag:e,props:{href:R},children:[{type:a,value:"Twitter Bootstrap "},{type:b,tag:n,props:{},children:[{type:a,value:"Form"}]},{type:a,value:" patterns"}]}]},{type:a,value:c},{type:b,tag:s,props:{lang:"html"},children:[{type:b,tag:"form",props:{className:["form-horizontal"],method:"post"},children:[{type:a,value:c},{type:b,tag:"fieldset",props:{},children:[{type:a,value:c},{type:b,tag:k,props:{className:["control-group","hidden-in-confirm"]},children:[{type:a,value:c},{type:a,value:S},{type:b,tag:"label",props:{className:["control-label"],htmlFor:[T]},children:[{type:a,value:"Text input"}]},{type:a,value:c},{type:b,tag:k,props:{className:["controls"]},children:[{type:a,value:c},{type:b,tag:t,props:{id:T,className:["input-xlarge"],type:a},children:[]},{type:a,value:"\n\nIn addition to freeform text, any HTML5 text-based input appears like so."}]},{type:a,value:c}]},{type:a,value:c},{type:a,value:c},{type:b,tag:k,props:{className:["form-actions"]},children:[{type:a,value:S},{type:b,tag:"button",props:{className:[v]},children:[{type:a,value:"Cancel"}]},{type:a,value:c},{type:b,tag:t,props:{className:[v,P,u],type:O,value:Q},children:[]}]}]},{type:a,value:c}]}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:E}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"My solution fit for what I needed. "},{type:b,tag:w,props:{},children:[{type:a,value:"A two parameters to add confirm in a modal"}]},{type:a,value:" using the project's markup. Sadly I read after doing it that there is some plugins I could have considered such as the "},{type:b,tag:e,props:{href:"http:\u002F\u002Fdocs.jquery.com\u002FPlugins%3aForms"},children:[{type:a,value:"Form plugin"}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"."}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:F}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"I am going to prepare this post and propose a pull request to the "},{type:b,tag:w,props:{},children:[{type:a,value:"jQuery Bootstrap Scripting"}]},{type:a,value:" AND "},{type:b,tag:w,props:{},children:[{type:a,value:"Bootstrap"}]},{type:a,value:" project in a day  or two."}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:G}]},{type:a,value:c},{type:b,tag:l,props:{},children:[{type:a,value:j},{type:b,tag:h,props:{},children:[{type:a,value:H}]},{type:a,value:j},{type:b,tag:h,props:{},children:[{type:a,value:R}]},{type:a,value:c}]}]},dir:"\u002Fblog\u002F2012\u002F05",path:"\u002Fblog\u002F2012\u002F05\u002Fsnippet-confirm-form-before-submitting-using-twitter-bootstrap-in-a-modal-window",extension:".md",slug:"snippet-confirm-form-before-submitting-using-twitter-bootstrap-in-a-modal-window",createdAt:"2024-10-24T19:43:51.708Z",updatedAt:"2024-10-24T19:43:51.709Z",category:x,prettyfiedTemporalDate:{prettified:"Monday, May 28, 2012",temporalDate:"2012-05-28"}}],taxonomyKey:q,taxonomy:{key:q}}],fetch:[],mutations:void 0}}("text","element","\n","p","a",3,"h3","li","code","\n    ","div","ul","tt","strong",true,false,"twitter-bootstrap"," and ","pre","input","confirm-toggle","btn","em","programmation","","Idea","How it works","Word of advice","The code","The Form","Possible enhancements paths","End word","Ressources","http:\u002F\u002Fnikku.github.com\u002Fjquery-bootstrap-scripting\u002F#","input[type=text]","select","http:\u002F\u002Fjsfiddle.net\u002Frenoirb\u002FxNCNb\u002F16\u002F","Fiddle","\n  ","h4","submit","btn-primary","Continue","http:\u002F\u002Ftwitter.github.com\u002Fbootstrap\u002Fbase-css.html#forms","\n            ","input01")));